{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/turbopack/crates/turbopack-tests/tests/snapshot/basic/top-level-await/input/Actions.js"],"sourcesContent":["// import() doesn't care about whether a module is an async module or not\nconst UserApi = import(\"./UserAPI.js\");\n\nexport const CreateUserAction = async (name) => {\n  console.log(\"Creating user\", name);\n  // These are normal awaits, because they are in an async function\n  const { createUser } = await UserApi;\n  await createUser(name);\n};\n\n// You can place import() where you like\n// Placing it at top-level will start loading and evaluating on\n//   module evaluation.\n//   see CreateUserAction above\n//   Here: Connecting to the DB starts when the application starts\n// Placing it inside of an (async) function will start loading\n//   and evaluating when the function is called for the first time\n//   which basically makes it lazy-loaded.\n//   see AlternativeCreateUserAction below\n//   Here: Connecting to the DB starts when AlternativeCreateUserAction\n//         is called\nexport const AlternativeCreateUserAction = async (name) => {\n  const { createUser } = await import(\"./UserAPI.js\");\n  await createUser(name);\n};\n\n// Note: Using await import() at top-level doesn't make much sense\n//       except in rare cases. It will import modules sequentially.\n"],"names":[],"mappings":"AAAA,yEAAyE;;;;;AACzE,MAAM;AAEC,MAAM,mBAAmB,OAAO;IACrC,QAAQ,GAAG,CAAC,iBAAiB;IAC7B,iEAAiE;IACjE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM;IAC7B,MAAM,WAAW;AACnB;AAaO,MAAM,8BAA8B,OAAO;IAChD,MAAM,EAAE,UAAU,EAAE,GAAG;IACvB,MAAM,WAAW;AACnB,GAEA,kEAAkE;CAClE,mEAAmE"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/turbopack/crates/turbopack-tests/tests/snapshot/basic/top-level-await/input/index.js"],"sourcesContent":["import { CreateUserAction } from \"./Actions.js\";\n\n(async () => {\n  await CreateUserAction(\"John\");\n  console.log(\"created user John\");\n})();\n"],"names":[],"mappings":";AAAA;;AAEA,CAAC;IACC,MAAM,CAAA,GAAA,8MAAA,CAAA,mBAAgB,AAAD,EAAE;IACvB,QAAQ,GAAG,CAAC;AACd,CAAC"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}