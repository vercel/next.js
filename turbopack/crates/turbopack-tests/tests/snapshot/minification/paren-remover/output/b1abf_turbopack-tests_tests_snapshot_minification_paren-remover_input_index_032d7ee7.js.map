{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/turbopack/crates/turbopack-tests/tests/snapshot/minification/paren-remover/input/index.js"],"sourcesContent":["function toFixed(value, maxDecimals, roundingFunction, optionals) {\n  var splitValue = value.toString().split('.'),\n    minDecimals = maxDecimals - (optionals || 0),\n    optionalsRegExp,\n    power,\n    output\n  var boundedPrecisions\n  // var unused = 'xxxx';\n\n  // Use the smallest precision value possible to avoid errors from floating point representation\n  if (splitValue.length === 2) {\n    boundedPrecisions = Math.min(\n      Math.max(splitValue[1].length, minDecimals),\n      maxDecimals\n    )\n  } else {\n    boundedPrecisions = minDecimals\n  }\n\n  power = Math.pow(10, boundedPrecisions)\n\n  // Multiply up by precision, round accurately, then divide and use native toFixed():\n  output = (roundingFunction(value + 'e+' + boundedPrecisions) / power).toFixed(\n    boundedPrecisions\n  )\n\n  if (optionals > maxDecimals - boundedPrecisions) {\n    optionalsRegExp = new RegExp(\n      '\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecisions)) + '}$'\n    )\n    output = output.replace(optionalsRegExp, '')\n  }\n\n  return output\n}\ntoFixed(1.2345, 2, Math.round, 1)\n"],"names":[],"mappings":"AAAA,SAAS,QAAQ,KAAK,EAAE,WAAW,EAAE,gBAAgB,EAAE,SAAS;AAC9D,IAAI,aAAa,MAAM,QAAQ,GAAG,KAAK,CAAC,MACtC,cAAc,cAAc,CAAC,aAAa,CAAC,GAC3C,iBACA,OACA;AACF,IAAI;AACJ,uBAAuB;AAEvB,+FAA+F;AAC/F,IAAI,WAAW,MAAM,KAAK,GAAG;AAC3B,oBAAoB,KAAK,GAAG,CAC1B,KAAK,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,cAC/B;AAEJ,OAAO;AACL,oBAAoB;AACtB;AAEA,QAAQ,KAAK,GAAG,CAAC,IAAI;AAErB,oFAAoF;AACpF,SAAS,CAAC,iBAAiB,QAAQ,OAAO,qBAAqB,KAAK,EAAE,OAAO,CAC3E;AAGF,IAAI,YAAY,cAAc,mBAAmB;AAC/C,kBAAkB,IAAI,OACpB,aAAa,CAAC,YAAY,CAAC,cAAc,iBAAiB,CAAC,IAAI;AAEjE,SAAS,OAAO,OAAO,CAAC,iBAAiB;AAC3C;AAEA,OAAO;AACT;AACA,QAAQ,QAAQ,GAAG,KAAK,KAAK,EAAE"}}]
}