[
    ImportedBinding {
        esm_reference_index: 3,
        export: Some(
            "useMemo",
        ),
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDefaultDecl,
            ),
            ExportDefaultDecl(
                Decl,
            ),
            DefaultDecl(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Ident,
            ),
        ],
        span: 268..275,
        in_try: false,
    },
    Call {
        func: Member(
            3,
            Module(
                ModuleValue {
                    module: "react",
                    annotations: ImportAnnotations {
                        map: {},
                    },
                },
            ),
            Constant(
                Str(
                    Atom(
                        "useMemo",
                    ),
                ),
            ),
        ),
        args: [
            Closure(
                Variable(
                    (
                        "*arrow function 276*",
                        #0,
                    ),
                ),
                EffectsBlock {
                    effects: [
                        Call {
                            func: Variable(
                                (
                                    "HelloWorld",
                                    #2,
                                ),
                            ),
                            args: [],
                            ast_path: [
                                Program(
                                    Module,
                                ),
                                Module(
                                    Body(
                                        4,
                                    ),
                                ),
                                ModuleItem(
                                    ModuleDecl,
                                ),
                                ModuleDecl(
                                    ExportDefaultDecl,
                                ),
                                ExportDefaultDecl(
                                    Decl,
                                ),
                                DefaultDecl(
                                    Fn,
                                ),
                                FnExpr(
                                    Function,
                                ),
                                Function(
                                    Body,
                                ),
                                BlockStmt(
                                    Stmts(
                                        0,
                                    ),
                                ),
                                Stmt(
                                    Decl,
                                ),
                                Decl(
                                    Var,
                                ),
                                VarDecl(
                                    Decls(
                                        0,
                                    ),
                                ),
                                VarDeclarator(
                                    Init,
                                ),
                                Expr(
                                    Call,
                                ),
                                CallExpr(
                                    Args(
                                        0,
                                    ),
                                ),
                                ExprOrSpread(
                                    Expr,
                                ),
                                Expr(
                                    Arrow,
                                ),
                                ArrowExpr(
                                    Body,
                                ),
                                BlockStmtOrExpr(
                                    Expr,
                                ),
                                Expr(
                                    New,
                                ),
                            ],
                            span: 280..296,
                            in_try: false,
                            new: true,
                        },
                    ],
                    range: Exact(
                        [
                            Program(
                                Module,
                            ),
                            Module(
                                Body(
                                    4,
                                ),
                            ),
                            ModuleItem(
                                ModuleDecl,
                            ),
                            ModuleDecl(
                                ExportDefaultDecl,
                            ),
                            ExportDefaultDecl(
                                Decl,
                            ),
                            DefaultDecl(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Args(
                                    0,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Arrow,
                            ),
                            ArrowExpr(
                                Body,
                            ),
                            BlockStmtOrExpr(
                                Expr,
                            ),
                        ],
                    ),
                },
            ),
            Value(
                Array {
                    total_nodes: 1,
                    items: [],
                    mutable: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDefaultDecl,
            ),
            ExportDefaultDecl(
                Decl,
            ),
            DefaultDecl(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: 268..301,
        in_try: false,
        new: false,
    },
    ImportedBinding {
        esm_reference_index: 1,
        export: Some(
            "jsx",
        ),
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDefaultDecl,
            ),
            ExportDefaultDecl(
                Decl,
            ),
            DefaultDecl(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Ident,
            ),
        ],
        span: 328..332,
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "helloWorld",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "hi",
                ),
            ),
        ),
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDefaultDecl,
            ),
            ExportDefaultDecl(
                Decl,
            ),
            DefaultDecl(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    1,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Object,
            ),
            ObjectLit(
                Props(
                    0,
                ),
            ),
            PropOrSpread(
                Prop,
            ),
            Prop(
                KeyValue,
            ),
            KeyValueProp(
                Value,
            ),
            Expr(
                Arrow,
            ),
            ArrowExpr(
                Body,
            ),
            BlockStmtOrExpr(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: 366..379,
        in_try: false,
    },
    MemberCall {
        obj: Variable(
            (
                "helloWorld",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "hi",
                ),
            ),
        ),
        args: [],
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDefaultDecl,
            ),
            ExportDefaultDecl(
                Decl,
            ),
            DefaultDecl(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    1,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Object,
            ),
            ObjectLit(
                Props(
                    0,
                ),
            ),
            PropOrSpread(
                Prop,
            ),
            Prop(
                KeyValue,
            ),
            KeyValueProp(
                Value,
            ),
            Expr(
                Arrow,
            ),
            ArrowExpr(
                Body,
            ),
            BlockStmtOrExpr(
                Expr,
            ),
            Expr(
                Call,
            ),
        ],
        span: 366..381,
        in_try: false,
        new: false,
    },
    Call {
        func: Member(
            3,
            Module(
                ModuleValue {
                    module: "https://esm.sh/preact/jsx-runtime",
                    annotations: ImportAnnotations {
                        map: {},
                    },
                },
            ),
            Constant(
                Str(
                    Atom(
                        "jsx",
                    ),
                ),
            ),
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Atom(
                            "button",
                        ),
                    ),
                ),
            ),
            Value(
                Object {
                    total_nodes: 5,
                    parts: [
                        KeyValue(
                            Constant(
                                Str(
                                    Atom(
                                        "onClick",
                                    ),
                                ),
                            ),
                            Variable(
                                (
                                    "*arrow function 362*",
                                    #0,
                                ),
                            ),
                        ),
                        KeyValue(
                            Constant(
                                Str(
                                    Atom(
                                        "children",
                                    ),
                                ),
                            ),
                            Constant(
                                Str(
                                    Atom(
                                        "Click me",
                                    ),
                                ),
                            ),
                        ),
                    ],
                    mutable: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDefaultDecl,
            ),
            ExportDefaultDecl(
                Decl,
            ),
            DefaultDecl(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Call,
            ),
        ],
        span: 328..418,
        in_try: false,
        new: false,
    },
    Unreachable {
        start_ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    4,
                ),
            ),
            ModuleItem(
                ModuleDecl,
            ),
            ModuleDecl(
                ExportDefaultDecl,
            ),
            ExportDefaultDecl(
                Decl,
            ),
            DefaultDecl(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Return,
            ),
        ],
    },
    MemberCall {
        obj: Unknown {
            original_value: None,
            reason: "unsupported expression",
            has_side_effects: true,
        },
        prop: Unknown {
            original_value: None,
            reason: "private names in member expressions are not supported",
            has_side_effects: false,
        },
        args: [
            Closure(
                Variable(
                    (
                        "*arrow function 471*",
                        #0,
                    ),
                ),
                EffectsBlock {
                    effects: [
                        FreeVar {
                            var: FreeVar(
                                "alert",
                            ),
                            ast_path: [
                                Program(
                                    Module,
                                ),
                                Module(
                                    Body(
                                        5,
                                    ),
                                ),
                                ModuleItem(
                                    Stmt,
                                ),
                                Stmt(
                                    Decl,
                                ),
                                Decl(
                                    Class,
                                ),
                                ClassDecl(
                                    Class,
                                ),
                                Class(
                                    Body(
                                        0,
                                    ),
                                ),
                                ClassMember(
                                    Method,
                                ),
                                ClassMethod(
                                    Function,
                                ),
                                Function(
                                    Body,
                                ),
                                BlockStmt(
                                    Stmts(
                                        0,
                                    ),
                                ),
                                Stmt(
                                    Expr,
                                ),
                                ExprStmt(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                                CallExpr(
                                    Args(
                                        0,
                                    ),
                                ),
                                ExprOrSpread(
                                    Expr,
                                ),
                                Expr(
                                    Arrow,
                                ),
                                ArrowExpr(
                                    Body,
                                ),
                                BlockStmtOrExpr(
                                    BlockStmt,
                                ),
                                BlockStmt(
                                    Stmts(
                                        0,
                                    ),
                                ),
                                Stmt(
                                    Expr,
                                ),
                                ExprStmt(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                                CallExpr(
                                    Callee,
                                ),
                                Callee(
                                    Expr,
                                ),
                                Expr(
                                    Ident,
                                ),
                            ],
                            span: 489..494,
                            in_try: false,
                        },
                        ImportedBinding {
                            esm_reference_index: 5,
                            export: Some(
                                "fooBar",
                            ),
                            ast_path: [
                                Program(
                                    Module,
                                ),
                                Module(
                                    Body(
                                        5,
                                    ),
                                ),
                                ModuleItem(
                                    Stmt,
                                ),
                                Stmt(
                                    Decl,
                                ),
                                Decl(
                                    Class,
                                ),
                                ClassDecl(
                                    Class,
                                ),
                                Class(
                                    Body(
                                        0,
                                    ),
                                ),
                                ClassMember(
                                    Method,
                                ),
                                ClassMethod(
                                    Function,
                                ),
                                Function(
                                    Body,
                                ),
                                BlockStmt(
                                    Stmts(
                                        0,
                                    ),
                                ),
                                Stmt(
                                    Expr,
                                ),
                                ExprStmt(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                                CallExpr(
                                    Args(
                                        0,
                                    ),
                                ),
                                ExprOrSpread(
                                    Expr,
                                ),
                                Expr(
                                    Arrow,
                                ),
                                ArrowExpr(
                                    Body,
                                ),
                                BlockStmtOrExpr(
                                    BlockStmt,
                                ),
                                BlockStmt(
                                    Stmts(
                                        0,
                                    ),
                                ),
                                Stmt(
                                    Expr,
                                ),
                                ExprStmt(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                                CallExpr(
                                    Args(
                                        0,
                                    ),
                                ),
                                ExprOrSpread(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                                CallExpr(
                                    Callee,
                                ),
                                Callee(
                                    Expr,
                                ),
                                Expr(
                                    Ident,
                                ),
                            ],
                            span: 495..501,
                            in_try: false,
                        },
                        Call {
                            func: Member(
                                3,
                                Module(
                                    ModuleValue {
                                        module: "./external",
                                        annotations: ImportAnnotations {
                                            map: {},
                                        },
                                    },
                                ),
                                Constant(
                                    Str(
                                        Atom(
                                            "fooBar",
                                        ),
                                    ),
                                ),
                            ),
                            args: [],
                            ast_path: [
                                Program(
                                    Module,
                                ),
                                Module(
                                    Body(
                                        5,
                                    ),
                                ),
                                ModuleItem(
                                    Stmt,
                                ),
                                Stmt(
                                    Decl,
                                ),
                                Decl(
                                    Class,
                                ),
                                ClassDecl(
                                    Class,
                                ),
                                Class(
                                    Body(
                                        0,
                                    ),
                                ),
                                ClassMember(
                                    Method,
                                ),
                                ClassMethod(
                                    Function,
                                ),
                                Function(
                                    Body,
                                ),
                                BlockStmt(
                                    Stmts(
                                        0,
                                    ),
                                ),
                                Stmt(
                                    Expr,
                                ),
                                ExprStmt(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                                CallExpr(
                                    Args(
                                        0,
                                    ),
                                ),
                                ExprOrSpread(
                                    Expr,
                                ),
                                Expr(
                                    Arrow,
                                ),
                                ArrowExpr(
                                    Body,
                                ),
                                BlockStmtOrExpr(
                                    BlockStmt,
                                ),
                                BlockStmt(
                                    Stmts(
                                        0,
                                    ),
                                ),
                                Stmt(
                                    Expr,
                                ),
                                ExprStmt(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                                CallExpr(
                                    Args(
                                        0,
                                    ),
                                ),
                                ExprOrSpread(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                            ],
                            span: 495..503,
                            in_try: false,
                            new: false,
                        },
                        Call {
                            func: FreeVar(
                                "alert",
                            ),
                            args: [
                                Value(
                                    Call(
                                        4,
                                        Member(
                                            3,
                                            Module(
                                                ModuleValue {
                                                    module: "./external",
                                                    annotations: ImportAnnotations {
                                                        map: {},
                                                    },
                                                },
                                            ),
                                            Constant(
                                                Str(
                                                    Atom(
                                                        "fooBar",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        [],
                                    ),
                                ),
                            ],
                            ast_path: [
                                Program(
                                    Module,
                                ),
                                Module(
                                    Body(
                                        5,
                                    ),
                                ),
                                ModuleItem(
                                    Stmt,
                                ),
                                Stmt(
                                    Decl,
                                ),
                                Decl(
                                    Class,
                                ),
                                ClassDecl(
                                    Class,
                                ),
                                Class(
                                    Body(
                                        0,
                                    ),
                                ),
                                ClassMember(
                                    Method,
                                ),
                                ClassMethod(
                                    Function,
                                ),
                                Function(
                                    Body,
                                ),
                                BlockStmt(
                                    Stmts(
                                        0,
                                    ),
                                ),
                                Stmt(
                                    Expr,
                                ),
                                ExprStmt(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                                CallExpr(
                                    Args(
                                        0,
                                    ),
                                ),
                                ExprOrSpread(
                                    Expr,
                                ),
                                Expr(
                                    Arrow,
                                ),
                                ArrowExpr(
                                    Body,
                                ),
                                BlockStmtOrExpr(
                                    BlockStmt,
                                ),
                                BlockStmt(
                                    Stmts(
                                        0,
                                    ),
                                ),
                                Stmt(
                                    Expr,
                                ),
                                ExprStmt(
                                    Expr,
                                ),
                                Expr(
                                    Call,
                                ),
                            ],
                            span: 489..504,
                            in_try: false,
                            new: false,
                        },
                    ],
                    range: Exact(
                        [
                            Program(
                                Module,
                            ),
                            Module(
                                Body(
                                    5,
                                ),
                            ),
                            ModuleItem(
                                Stmt,
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Class,
                            ),
                            ClassDecl(
                                Class,
                            ),
                            Class(
                                Body(
                                    0,
                                ),
                            ),
                            ClassMember(
                                Method,
                            ),
                            ClassMethod(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Args(
                                    0,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Arrow,
                            ),
                            ArrowExpr(
                                Body,
                            ),
                            BlockStmtOrExpr(
                                BlockStmt,
                            ),
                        ],
                    ),
                },
            ),
        ],
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    5,
                ),
            ),
            ModuleItem(
                Stmt,
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Class,
            ),
            ClassDecl(
                Class,
            ),
            Class(
                Body(
                    0,
                ),
            ),
            ClassMember(
                Method,
            ),
            ClassMethod(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
        ],
        span: 460..516,
        in_try: false,
        new: false,
    },
    Call {
        func: Variable(
            (
                "cb",
                #6,
            ),
        ),
        args: [],
        ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    5,
                ),
            ),
            ModuleItem(
                Stmt,
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Class,
            ),
            ClassDecl(
                Class,
            ),
            Class(
                Body(
                    1,
                ),
            ),
            ClassMember(
                PrivateMethod,
            ),
            PrivateMethod(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Call,
            ),
        ],
        span: 555..559,
        in_try: false,
        new: false,
    },
    Unreachable {
        start_ast_path: [
            Program(
                Module,
            ),
            Module(
                Body(
                    5,
                ),
            ),
            ModuleItem(
                Stmt,
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Class,
            ),
            ClassDecl(
                Class,
            ),
            Class(
                Body(
                    1,
                ),
            ),
            ClassMember(
                PrivateMethod,
            ),
            PrivateMethod(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Return,
            ),
        ],
    },
]
