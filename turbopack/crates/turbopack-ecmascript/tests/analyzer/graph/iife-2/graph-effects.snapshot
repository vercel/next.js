[
    Member {
        obj: FreeVar(
            "Object",
        ),
        prop: Constant(
            Str(
                Atom(
                    "keys",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Init,
            ),
            VarDeclOrExpr(
                VarDecl,
            ),
            VarDecl(
                Decls(
                    1,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: 80..91,
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            "Object",
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Init,
            ),
            VarDeclOrExpr(
                VarDecl,
            ),
            VarDecl(
                Decls(
                    1,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
            MemberExpr(
                Obj,
            ),
            Expr(
                Ident,
            ),
        ],
        span: 80..86,
        in_try: false,
    },
    MemberCall {
        obj: FreeVar(
            "Object",
        ),
        prop: Constant(
            Str(
                Atom(
                    "keys",
                ),
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "namespace",
                        #4,
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Init,
            ),
            VarDeclOrExpr(
                VarDecl,
            ),
            VarDecl(
                Decls(
                    1,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: 80..102,
        in_try: false,
        new: false,
    },
    Member {
        obj: Variable(
            (
                "keys",
                #4,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "length",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Member,
            ),
        ],
        span: 108..119,
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "keys",
                #4,
            ),
        ),
        prop: Variable(
            (
                "i",
                #4,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
        ],
        span: 142..149,
        in_try: false,
    },
    Member {
        obj: FreeVar(
            "console",
        ),
        prop: Constant(
            Str(
                Atom(
                    "debug",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: 155..168,
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            "console",
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
            MemberExpr(
                Obj,
            ),
            Expr(
                Ident,
            ),
        ],
        span: 155..162,
        in_try: false,
    },
    Conditional {
        condition: Variable(
            (
                "path",
                #4,
            ),
        ),
        kind: Ternary {
            then: EffectsBlock {
                effects: [],
                range: Exact(
                    [
                        Program(
                            Script,
                        ),
                        Script(
                            Body(
                                1,
                            ),
                        ),
                        Stmt(
                            Expr,
                        ),
                        ExprStmt(
                            Expr,
                        ),
                        Expr(
                            Call,
                        ),
                        CallExpr(
                            Callee,
                        ),
                        Callee(
                            Expr,
                        ),
                        Expr(
                            Paren,
                        ),
                        ParenExpr(
                            Expr,
                        ),
                        Expr(
                            Fn,
                        ),
                        FnExpr(
                            Function,
                        ),
                        Function(
                            Body,
                        ),
                        BlockStmt(
                            Stmts(
                                0,
                            ),
                        ),
                        Stmt(
                            For,
                        ),
                        ForStmt(
                            Body,
                        ),
                        Stmt(
                            Block,
                        ),
                        BlockStmt(
                            Stmts(
                                1,
                            ),
                        ),
                        Stmt(
                            Expr,
                        ),
                        ExprStmt(
                            Expr,
                        ),
                        Expr(
                            Call,
                        ),
                        CallExpr(
                            Args(
                                2,
                            ),
                        ),
                        ExprOrSpread(
                            Expr,
                        ),
                        Expr(
                            Cond,
                        ),
                        CondExpr(
                            Cons,
                        ),
                    ],
                ),
            },
            else: EffectsBlock {
                effects: [],
                range: Exact(
                    [
                        Program(
                            Script,
                        ),
                        Script(
                            Body(
                                1,
                            ),
                        ),
                        Stmt(
                            Expr,
                        ),
                        ExprStmt(
                            Expr,
                        ),
                        Expr(
                            Call,
                        ),
                        CallExpr(
                            Callee,
                        ),
                        Callee(
                            Expr,
                        ),
                        Expr(
                            Paren,
                        ),
                        ParenExpr(
                            Expr,
                        ),
                        Expr(
                            Fn,
                        ),
                        FnExpr(
                            Function,
                        ),
                        Function(
                            Body,
                        ),
                        BlockStmt(
                            Stmts(
                                0,
                            ),
                        ),
                        Stmt(
                            For,
                        ),
                        ForStmt(
                            Body,
                        ),
                        Stmt(
                            Block,
                        ),
                        BlockStmt(
                            Stmts(
                                1,
                            ),
                        ),
                        Stmt(
                            Expr,
                        ),
                        ExprStmt(
                            Expr,
                        ),
                        Expr(
                            Call,
                        ),
                        CallExpr(
                            Args(
                                2,
                            ),
                        ),
                        ExprOrSpread(
                            Expr,
                        ),
                        Expr(
                            Cond,
                        ),
                        CondExpr(
                            Alt,
                        ),
                    ],
                ),
            },
        },
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    2,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Cond,
            ),
            CondExpr(
                Test,
            ),
        ],
        span: 183..202,
        in_try: false,
    },
    MemberCall {
        obj: FreeVar(
            "console",
        ),
        prop: Constant(
            Str(
                Atom(
                    "debug",
                ),
            ),
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            "####",
                        ),
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "path",
                        #4,
                    ),
                ),
            ),
            Value(
                Tenary(
                    4,
                    Variable(
                        (
                            "path",
                            #4,
                        ),
                    ),
                    Constant(
                        True,
                    ),
                    Constant(
                        False,
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
        ],
        span: 155..203,
        in_try: false,
        new: false,
    },
    Member {
        obj: Variable(
            (
                "parent",
                #4,
            ),
        ),
        prop: Variable(
            (
                "key",
                #4,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: 208..219,
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "namespace",
                #4,
            ),
        ),
        prop: Variable(
            (
                "key",
                #4,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    0,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: 224..238,
        in_try: false,
    },
    Conditional {
        condition: Variable(
            (
                "path",
                #4,
            ),
        ),
        kind: Ternary {
            then: EffectsBlock {
                effects: [],
                range: Exact(
                    [
                        Program(
                            Script,
                        ),
                        Script(
                            Body(
                                1,
                            ),
                        ),
                        Stmt(
                            Expr,
                        ),
                        ExprStmt(
                            Expr,
                        ),
                        Expr(
                            Call,
                        ),
                        CallExpr(
                            Callee,
                        ),
                        Callee(
                            Expr,
                        ),
                        Expr(
                            Paren,
                        ),
                        ParenExpr(
                            Expr,
                        ),
                        Expr(
                            Fn,
                        ),
                        FnExpr(
                            Function,
                        ),
                        Function(
                            Body,
                        ),
                        BlockStmt(
                            Stmts(
                                0,
                            ),
                        ),
                        Stmt(
                            For,
                        ),
                        ForStmt(
                            Body,
                        ),
                        Stmt(
                            Block,
                        ),
                        BlockStmt(
                            Stmts(
                                2,
                            ),
                        ),
                        Stmt(
                            Expr,
                        ),
                        ExprStmt(
                            Expr,
                        ),
                        Expr(
                            Assign,
                        ),
                        AssignExpr(
                            Right,
                        ),
                        Expr(
                            Call,
                        ),
                        CallExpr(
                            Args(
                                1,
                            ),
                        ),
                        ExprOrSpread(
                            Expr,
                        ),
                        Expr(
                            Cond,
                        ),
                        CondExpr(
                            Cons,
                        ),
                    ],
                ),
            },
            else: EffectsBlock {
                effects: [],
                range: Exact(
                    [
                        Program(
                            Script,
                        ),
                        Script(
                            Body(
                                1,
                            ),
                        ),
                        Stmt(
                            Expr,
                        ),
                        ExprStmt(
                            Expr,
                        ),
                        Expr(
                            Call,
                        ),
                        CallExpr(
                            Callee,
                        ),
                        Callee(
                            Expr,
                        ),
                        Expr(
                            Paren,
                        ),
                        ParenExpr(
                            Expr,
                        ),
                        Expr(
                            Fn,
                        ),
                        FnExpr(
                            Function,
                        ),
                        Function(
                            Body,
                        ),
                        BlockStmt(
                            Stmts(
                                0,
                            ),
                        ),
                        Stmt(
                            For,
                        ),
                        ForStmt(
                            Body,
                        ),
                        Stmt(
                            Block,
                        ),
                        BlockStmt(
                            Stmts(
                                2,
                            ),
                        ),
                        Stmt(
                            Expr,
                        ),
                        ExprStmt(
                            Expr,
                        ),
                        Expr(
                            Assign,
                        ),
                        AssignExpr(
                            Right,
                        ),
                        Expr(
                            Call,
                        ),
                        CallExpr(
                            Args(
                                1,
                            ),
                        ),
                        ExprOrSpread(
                            Expr,
                        ),
                        Expr(
                            Cond,
                        ),
                        CondExpr(
                            Alt,
                        ),
                    ],
                ),
            },
        },
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    1,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Cond,
            ),
            CondExpr(
                Test,
            ),
        ],
        span: 240..269,
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "parent",
                #4,
            ),
        ),
        prop: Variable(
            (
                "key",
                #4,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    2,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Member,
            ),
        ],
        span: 271..282,
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "_",
                #3,
            ),
        ),
        args: [
            Value(
                Member(
                    3,
                    Variable(
                        (
                            "namespace",
                            #4,
                        ),
                    ),
                    Variable(
                        (
                            "key",
                            #4,
                        ),
                    ),
                ),
            ),
            Value(
                Tenary(
                    7,
                    Variable(
                        (
                            "path",
                            #4,
                        ),
                    ),
                    Concat(
                        4,
                        [
                            Variable(
                                (
                                    "path",
                                    #4,
                                ),
                            ),
                            Constant(
                                Str(
                                    Atom(
                                        ".",
                                    ),
                                ),
                            ),
                            Variable(
                                (
                                    "key",
                                    #4,
                                ),
                            ),
                        ],
                    ),
                    Variable(
                        (
                            "key",
                            #4,
                        ),
                    ),
                ),
            ),
            Value(
                Logical(
                    5,
                    Or,
                    [
                        Member(
                            3,
                            Variable(
                                (
                                    "parent",
                                    #4,
                                ),
                            ),
                            Variable(
                                (
                                    "key",
                                    #4,
                                ),
                            ),
                        ),
                        Object {
                            total_nodes: 1,
                            parts: [],
                            mutable: true,
                        },
                    ],
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: 222..289,
        in_try: false,
        new: false,
    },
    Unreachable {
        start_ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Return,
            ),
        ],
    },
    Call {
        func: Variable(
            (
                "_",
                #3,
            ),
        ),
        args: [
            Value(
                Object {
                    total_nodes: 7,
                    parts: [
                        KeyValue(
                            Constant(
                                Str(
                                    Atom(
                                        "wrapper",
                                    ),
                                ),
                            ),
                            Object {
                                total_nodes: 5,
                                parts: [
                                    KeyValue(
                                        Constant(
                                            Str(
                                                Atom(
                                                    "data",
                                                ),
                                            ),
                                        ),
                                        Object {
                                            total_nodes: 3,
                                            parts: [
                                                KeyValue(
                                                    Constant(
                                                        Str(
                                                            Atom(
                                                                "key",
                                                            ),
                                                        ),
                                                    ),
                                                    Object {
                                                        total_nodes: 1,
                                                        parts: [],
                                                        mutable: true,
                                                    },
                                                ),
                                            ],
                                            mutable: true,
                                        },
                                    ),
                                ],
                                mutable: true,
                            },
                        ),
                    ],
                    mutable: true,
                },
            ),
            Value(
                Constant(
                    Str(
                        Word(
                            "",
                        ),
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "root",
                        #2,
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
        ],
        span: 16..379,
        in_try: false,
        new: false,
    },
]
