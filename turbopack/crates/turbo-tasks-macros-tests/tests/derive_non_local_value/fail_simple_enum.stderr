error[E0277]: the trait bound `UnresolvedValue: NonLocalValue` is not satisfied
  --> tests/derive_non_local_value/fail_simple_enum.rs:10:13
   |
10 |     Unnamed(UnresolvedValue),
   |             ^^^^^^^^^^^^^^^ the trait `NonLocalValue` is not implemented for `UnresolvedValue`
   |
   = help: the following other types implement trait `NonLocalValue`:
             &T
             &mut T
             ()
             (A, Z, Y, X, W, V, U, T)
             (B, A, Z, Y, X, W, V, U, T)
             (C, B, A, Z, Y, X, W, V, U, T)
             (D, C, B, A, Z, Y, X, W, V, U, T)
             (E, D, C, B, A, Z, Y, X, W, V, U, T)
           and $N others
note: required by a bound in `DeriveNonLocalValueAssertion::assert_impl_NonLocalValue`
  --> tests/derive_non_local_value/fail_simple_enum.rs:7:10
   |
7  | #[derive(NonLocalValue)]
   |          ^^^^^^^^^^^^^ required by this bound in `DeriveNonLocalValueAssertion::assert_impl_NonLocalValue`
   = note: this error originates in the derive macro `NonLocalValue` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `UnresolvedValue: NonLocalValue` is not satisfied
  --> tests/derive_non_local_value/fail_simple_enum.rs:11:16
   |
11 |     Named { a: UnresolvedValue },
   |                ^^^^^^^^^^^^^^^ the trait `NonLocalValue` is not implemented for `UnresolvedValue`
   |
   = help: the following other types implement trait `NonLocalValue`:
             &T
             &mut T
             ()
             (A, Z, Y, X, W, V, U, T)
             (B, A, Z, Y, X, W, V, U, T)
             (C, B, A, Z, Y, X, W, V, U, T)
             (D, C, B, A, Z, Y, X, W, V, U, T)
             (E, D, C, B, A, Z, Y, X, W, V, U, T)
           and $N others
note: required by a bound in `DeriveNonLocalValueAssertion::assert_impl_NonLocalValue`
  --> tests/derive_non_local_value/fail_simple_enum.rs:7:10
   |
7  | #[derive(NonLocalValue)]
   |          ^^^^^^^^^^^^^ required by this bound in `DeriveNonLocalValueAssertion::assert_impl_NonLocalValue`
   = note: this error originates in the derive macro `NonLocalValue` (in Nightly builds, run with -Z macro-backtrace for more info)
