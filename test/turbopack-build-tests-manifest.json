{
  "version": 2,
  "suites": {
    "test/e2e/404-page-router/index.test.ts": {
      "passed": [
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware false for /error should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware false for /error?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware false for /not/a/real/page should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware false for /not/a/real/page?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware false should not throw any errors when re-fetching the route info",
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware true for /error should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware true for /error?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware true for /not/a/real/page should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware true for /not/a/real/page?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of false and middleware true should not throw any errors when re-fetching the route info",
        "404-page-router 404-page-router with basePath of false and i18n of true and middleware false for /error should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of true and middleware false for /error?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of true and middleware false for /not/a/real/page should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of true and middleware false for /not/a/real/page?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of false and i18n of true and middleware false should not throw any errors when re-fetching the route info",
        "404-page-router 404-page-router with basePath of true and i18n of false and middleware false for /docs/error should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of true and i18n of false and middleware false for /docs/error?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of true and i18n of false and middleware false for /not/a/real/page should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of true and i18n of false and middleware false for /not/a/real/page?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of true and i18n of false and middleware false should not throw any errors when re-fetching the route info",
        "404-page-router 404-page-router with basePath of true and i18n of true and middleware false for /docs/error should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of true and i18n of true and middleware false for /docs/error?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of true and i18n of true and middleware false for /not/a/real/page should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of true and i18n of true and middleware false for /not/a/real/page?with=query should have the correct router parameters after it is ready",
        "404-page-router 404-page-router with basePath of true and i18n of true and middleware false should not throw any errors when re-fetching the route info"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir-legacy-edge-runtime-config/index.test.ts": {
      "passed": [
        "app-dir edge runtime config should warn the legacy object config export"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/_allow-underscored-root-directory/_allow-underscored-root-directory.test.ts": {
      "passed": [],
      "failed": [
        "_allow-underscored-root-directory should not serve app path with underscore",
        "_allow-underscored-root-directory should pages path with a underscore at the root",
        "_allow-underscored-root-directory should serve app path with %5F"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/actions-allowed-origins/app-action-allowed-origins.test.ts": {
      "passed": [
        "app-dir action allowed origins should pass if localhost is set as a safe origin"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/actions-allowed-origins/app-action-disallowed-origins.test.ts": {
      "passed": [
        "app-dir action disallowed origins should error if x-forwarded-host does not match the origin"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/actions-navigation/index.test.ts": {
      "passed": [
        "app-dir action handling should handle actions correctly after following a relative link",
        "app-dir action handling should handle actions correctly after navigation / redirection events"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/actions-revalidate-remount/actions-revalidate-remount.test.ts": {
      "passed": [
        "actions-revalidate-remount should not remount the page + loading component when revalidating"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/actions/app-action-export.test.ts": {
      "passed": [
        "app-dir action handling - next export should error when use export output for server actions"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/actions/app-action-form-state.test.ts": {
      "passed": [
        "app-dir action useActionState should send the action to the provided permalink with form state when JS disabled",
        "app-dir action useActionState should support hydrating the app from progressively enhanced form request",
        "app-dir action useActionState should support submitting form state with JS",
        "app-dir action useActionState should support submitting form state without JS"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/actions/app-action-progressive-enhancement.test.ts": {
      "passed": [
        "app-dir action progressive enhancement should support actions from client without JS",
        "app-dir action progressive enhancement should support formData and redirect without JS"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/actions/app-action-size-limit-invalid.test.ts": {
      "passed": [
        "app-dir action size limit invalid config should error if serverActions.bodySizeLimit config is a negative number",
        "app-dir action size limit invalid config should error if serverActions.bodySizeLimit config is a negative size",
        "app-dir action size limit invalid config should error if serverActions.bodySizeLimit config is invalid",
        "app-dir action size limit invalid config should respect the size set in serverActions.bodySizeLimit",
        "app-dir action size limit invalid config should respect the size set in serverActions.bodySizeLimit when submitting form"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/actions/app-action.test.ts": {
      "passed": [
        "app-dir action handling Edge SSR should allow cookie and header async storages",
        "app-dir action handling Edge SSR should handle basic actions correctly",
        "app-dir action handling Edge SSR should handle calls to redirect() with a absolute URL in a single pass",
        "app-dir action handling Edge SSR should handle calls to redirect() with a relative URL in a single pass",
        "app-dir action handling Edge SSR should handle calls to redirect() with external URLs",
        "app-dir action handling Edge SSR should handle unicode search params",
        "app-dir action handling Edge SSR should return error response for hoc auth wrappers in edge runtime",
        "app-dir action handling caching disabled by default should not override force-cache in server action",
        "app-dir action handling caching disabled by default should not override revalidate in server action",
        "app-dir action handling caching disabled by default should use no-store as default for server action",
        "app-dir action handling encryption should send encrypted values from the closed over closure",
        "app-dir action handling fetch actions should handle a fetch action initiated from a static page",
        "app-dir action handling fetch actions should handle calls to redirect() with a absolute URL in a single pass",
        "app-dir action handling fetch actions should handle calls to redirect() with a relative URL in a single pass",
        "app-dir action handling fetch actions should handle calls to redirect() with external URLs",
        "app-dir action handling fetch actions should handle redirects to routes that provide an invalid RSC response",
        "app-dir action handling fetch actions should handle unstable_expirePath",
        "app-dir action handling fetch actions should handle unstable_expireTag",
        "app-dir action handling fetch actions should invalidate client cache on other routes when cookies.set is called",
        "app-dir action handling fetch actions should invalidate client cache when path is revalidated",
        "app-dir action handling fetch actions should invalidate client cache when tag is revalidated",
        "app-dir action handling fetch actions should revalidate when cookies.set is called",
        "app-dir action handling fetch actions should revalidate when cookies.set is called in a client action",
        "app-dir action handling fetch actions should store revalidation data in the prefetch cache",
        "app-dir action handling redirects displays searchParams correctly when redirecting with SearchParams",
        "app-dir action handling redirects merges cookies correctly when redirecting",
        "app-dir action handling redirects redirects properly when server action handler redirects with a 307 status code",
        "app-dir action handling redirects redirects properly when server action handler redirects with a 308 status code",
        "app-dir action handling redirects redirects properly when server action handler uses `permanentRedirect`",
        "app-dir action handling redirects redirects properly when server action handler uses `redirect`",
        "app-dir action handling redirects should not forward next-action header to a redirected RSC request",
        "app-dir action handling server actions render client components server component imported action should support importing client components from actions",
        "app-dir action handling should 404 when POSTing an invalid server action",
        "app-dir action handling should be possible to catch network errors",
        "app-dir action handling should be possible to catch regular errors",
        "app-dir action handling should forward action request to a worker that contains the action handler (edge)",
        "app-dir action handling should forward action request to a worker that contains the action handler (node)",
        "app-dir action handling should handle action correctly with middleware rewrite",
        "app-dir action handling should handle actions executed in quick succession",
        "app-dir action handling should handle basic actions correctly",
        "app-dir action handling should log a warning when a server action is not found but an id is provided",
        "app-dir action handling should not block navigation events while a server action is in flight",
        "app-dir action handling should not block router.back() while a server action is in flight",
        "app-dir action handling should not error when a forwarded action triggers a redirect (edge)",
        "app-dir action handling should not error when a forwarded action triggers a redirect (node)",
        "app-dir action handling should not log errors for non-action form POSTs",
        "app-dir action handling should only submit action once when resubmitting an action after navigation",
        "app-dir action handling should propagate errors from a `text/plain` response to an error boundary",
        "app-dir action handling should push new route when redirecting",
        "app-dir action handling should report errors with bad inputs correctly",
        "app-dir action handling should support .bind",
        "app-dir action handling should support chained .bind",
        "app-dir action handling should support formData and redirect",
        "app-dir action handling should support headers and cookies",
        "app-dir action handling should support headers in client imported actions",
        "app-dir action handling should support hoc auth wrappers",
        "app-dir action handling should support importing actions in client components",
        "app-dir action handling should support importing the same action module instance in both server and action layers",
        "app-dir action handling should support next/dynamic with ssr: false",
        "app-dir action handling should support next/dynamic with ssr: false (edge)",
        "app-dir action handling should support notFound",
        "app-dir action handling should support notFound (javascript disabled)",
        "app-dir action handling should support setting cookies in route handlers with the correct overrides",
        "app-dir action handling should support uploading files",
        "app-dir action handling should trigger a refresh for a server action that also dispatches a navigation event",
        "app-dir action handling should trigger a refresh for a server action that gets discarded due to a navigation",
        "app-dir action handling should trigger an error boundary for action responses with an invalid content-type",
        "app-dir action handling should work with interception routes"
      ],
      "failed": [
        "app-dir action handling should not expose action content in sourcemaps"
      ],
      "pending": [
        "app-dir action handling fetch actions should handle unstable_expireTag + redirect",
        "app-dir action handling server actions render client components client component imported action should support importing client components from actions"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-a11y/index.test.ts": {
      "passed": [
        "app a11y features route announcer should announce document.title changes",
        "app a11y features route announcer should announce h1 changes",
        "app a11y features route announcer should announce route changes when h1 changes inside an inner layout",
        "app a11y features route announcer should not announce the initital title"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-alias/app-alias.test.ts": {
      "passed": [
        "app-dir alias should generate app-build-manifest correctly",
        "app-dir alias should handle typescript paths alias correctly",
        "app-dir alias should not contain installed react/react-dom version in client chunks",
        "app-dir alias should resolve css imports from outside with src folder presented"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-basepath-custom-server/index.test.ts": {
      "passed": [
        "custom-app-server-action-redirect redirects with basepath properly when server action handler uses `redirect`",
        "custom-app-server-action-redirect redirects with proper cookies set from both redirect response and post respose"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-basepath/index.test.ts": {
      "passed": [
        "app dir - basepath should handle redirect in dynamic in suspense boundary routes with basePath",
        "app dir - basepath should only make a single RSC call to the current page (/base/refresh)",
        "app dir - basepath should only make a single RSC call to the current page (/base/refresh?foo=bar)",
        "app dir - basepath should prefix metadata og image with basePath",
        "app dir - basepath should prefix redirect() with basePath",
        "app dir - basepath should properly stream an internal server action redirect() with a absolute URL",
        "app dir - basepath should properly stream an internal server action redirect() with a relative URL",
        "app dir - basepath should redirect externally when encountering absolute URLs on the same host outside the basePath",
        "app dir - basepath should render usePathname without the basePath",
        "app dir - basepath should successfully hard navigate from pages -> app",
        "app dir - basepath should support Link with basePath prefixed",
        "app dir - basepath should support `basePath`"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-client-cache/client-cache.defaults.test.ts": {
      "passed": [
        "app dir client cache semantics (default semantics) prefetch={false} should not prefetch the page at all",
        "app dir client cache semantics (default semantics) prefetch={false} should not re-use the page segment cache",
        "app dir client cache semantics (default semantics) prefetch={true} should prefetch again after 5 mins if the link is visible again",
        "app dir client cache semantics (default semantics) prefetch={true} should prefetch the full page",
        "app dir client cache semantics (default semantics) prefetch={true} should re-use the cache for the full page, only for 5 mins",
        "app dir client cache semantics (default semantics) prefetch={undefined} - default should not re-use the page segment cache",
        "app dir client cache semantics (default semantics) prefetch={undefined} - default should prefetch partially a dynamic page",
        "app dir client cache semantics (default semantics) prefetch={undefined} - default should refetch the full page after 5 mins",
        "app dir client cache semantics (default semantics) prefetch={undefined} - default should respect a loading boundary that returns `null`",
        "app dir client cache semantics (default semantics) should renew the initial seeded data after expiration time"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-client-cache/client-cache.experimental.test.ts": {
      "passed": [
        "app dir client cache semantics (experimental staleTimes) dynamic: 0 prefetch={false} should trigger a loading state before fetching the page, followed by fresh data on every subsequent navigation",
        "app dir client cache semantics (experimental staleTimes) dynamic: 0 prefetch={false} without a loading boundary should get fresh data on every subsequent navigation",
        "app dir client cache semantics (experimental staleTimes) dynamic: 0 prefetch={true} should re-use the cache for 5 minutes (default \"static\" time)",
        "app dir client cache semantics (experimental staleTimes) dynamic: 0 prefetch={undefined} - default should trigger a loading state before fetching the page, followed by fresh data on every subsequent navigation",
        "app dir client cache semantics (experimental staleTimes) dynamic: 0 prefetch={undefined} - default without a loading boundary should get fresh data on every subsequent navigation",
        "app dir client cache semantics (experimental staleTimes) dynamic: 0 telemetry should send staleTimes feature usage event",
        "app dir client cache semantics (experimental staleTimes) dynamic: 0, static: 0 should trigger a loading state before fetching the page, followed by fresh data on every subsequent navigation",
        "app dir client cache semantics (experimental staleTimes) dynamic: 0, static: 0 without a loading boundary should get fresh data on every subsequent navigation",
        "app dir client cache semantics (experimental staleTimes) static: 180 prefetch={true} should use the custom static override time (3 minutes)",
        "app dir client cache semantics (experimental staleTimes) static: 180 prefetch={undefined} - default should re-use the loading boundary for the custom static override time (3 minutes)",
        "app dir client cache semantics (experimental staleTimes) static: 180 telemetry should send staleTimes feature usage event"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-client-cache/client-cache.original.test.ts": {
      "passed": [
        "app dir client cache semantics (30s/5min) prefetch={false} should not prefetch the page at all",
        "app dir client cache semantics (30s/5min) prefetch={false} should re-use the cache only for 30 seconds",
        "app dir client cache semantics (30s/5min) prefetch={true} should prefetch again after 5 mins if the link is visible again",
        "app dir client cache semantics (30s/5min) prefetch={true} should prefetch the full page",
        "app dir client cache semantics (30s/5min) prefetch={true} should re-use the cache for the full page, only for 5 mins",
        "app dir client cache semantics (30s/5min) prefetch={undefined} - default should prefetch partially a dynamic page",
        "app dir client cache semantics (30s/5min) prefetch={undefined} - default should re-use the full cache for only 30 seconds",
        "app dir client cache semantics (30s/5min) prefetch={undefined} - default should refetch below the fold after 30 seconds",
        "app dir client cache semantics (30s/5min) prefetch={undefined} - default should refetch the full page after 5 mins",
        "app dir client cache semantics (30s/5min) prefetch={undefined} - default should renew the 30s cache once the data is revalidated",
        "app dir client cache semantics (30s/5min) prefetch={undefined} - default should respect a loading boundary that returns `null`",
        "app dir client cache semantics (30s/5min) should renew the initial seeded data after expiration time",
        "app dir client cache semantics (30s/5min) should seed the prefetch cache with the fetched page data"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-client-cache/client-cache.parallel-routes.test.ts": {
      "passed": [
        "app dir client cache with parallel routes prefetch={true} should prefetch the full page",
        "app dir client cache with parallel routes prefetch={true} should re-use the cache for the full page, only for 5 mins"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-compilation/index.test.ts": {
      "passed": [
        "app dir Loading should render loading.js in initial html for slow page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-config-crossorigin/index.test.ts": {
      "passed": ["app dir - crossOrigin config skip in start mode"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-css-pageextensions/index.test.ts": {
      "passed": [
        "app dir - css with pageextensions css support with pageextensions page in app directory with pageextention, css should work should support global css inside layout"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-css/index.test.ts": {
      "passed": [
        "app dir - css css support chunks should bundle css resources into chunks",
        "app dir - css css support client components should support css modules inside client components",
        "app dir - css css support client components should support css modules inside client page",
        "app dir - css css support client layouts should support css modules inside client layouts",
        "app dir - css css support client layouts should support global css inside client layouts",
        "app dir - css css support client pages should support css modules inside client pages",
        "app dir - css css support client pages should support global css inside client pages",
        "app dir - css css support css ordering should have inner layers take precedence over outer layers",
        "app dir - css css support page extensions should include css imported in MDX pages",
        "app dir - css css support server layouts should support css modules inside server layouts",
        "app dir - css css support server layouts should support external css imports",
        "app dir - css css support server pages should not contain pages css in app dir page",
        "app dir - css css support server pages should support css modules inside server pages",
        "app dir - css css support server pages should support global css inside server pages",
        "app dir - css css support special entries should include css imported in client not-found.js",
        "app dir - css css support special entries should include css imported in client template.js",
        "app dir - css css support special entries should include css imported in error.js",
        "app dir - css css support special entries should include css imported in loading.js",
        "app dir - css css support special entries should include css imported in root not-found.js",
        "app dir - css css support special entries should include css imported in server not-found.js",
        "app dir - css css support special entries should include css imported in server template.js",
        "app dir - css css support special entries should include root layout css for root not-found.js",
        "app dir - css pages dir should include css modules and global css after page transition",
        "app dir - css sass support client layouts should support global sass/scss inside client layouts",
        "app dir - css sass support client layouts should support sass/scss modules inside client layouts",
        "app dir - css sass support client pages should support global sass/scss inside client pages",
        "app dir - css sass support client pages should support sass/scss modules inside client pages",
        "app dir - css sass support server layouts should support global sass/scss inside server layouts",
        "app dir - css sass support server layouts should support sass/scss modules inside server layouts",
        "app dir - css sass support server pages should support global sass/scss inside server pages",
        "app dir - css sass support server pages should support sass/scss modules inside server pages"
      ],
      "failed": [],
      "pending": [
        "app dir - css css support server layouts should support global css inside server layouts"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-custom-cache-handler/index.test.ts": {
      "passed": [
        "app-dir - custom-cache-handler - cjs cjs module exports should have logs from cache-handler",
        "app-dir - custom-cache-handler - cjs-default-export cjs default export should have logs from cache-handler",
        "app-dir - custom-cache-handler - esm esm default export should have logs from cache-handler"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-edge-root-layout/index.test.ts": {
      "passed": [
        "app-dir edge runtime root layout should mark static contain metadata routes as edge functions",
        "app-dir edge runtime root layout should not emit metadata files into bad paths"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-edge/app-edge.test.ts": {
      "passed": [
        "app-dir edge SSR should handle /index routes correctly",
        "app-dir edge SSR should handle edge only routes",
        "app-dir edge SSR should retrieve cookies in a server component in the edge runtime",
        "app-dir edge SSR should treat process as object without polyfill in edge runtime"
      ],
      "failed": [
        "app-dir edge SSR should generate matchers correctly in middleware manifest"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-esm-js/index.test.ts": {
      "passed": [
        "app-dir - esm js extension should be able to render nextjs api in app router",
        "app-dir - esm js extension should be able to use nextjs api in pages router",
        "app-dir - esm js extension should support next/og image"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-external/app-external.test.ts": {
      "passed": [
        "app dir - external dependency app route should resolve next/server api from external esm package",
        "app dir - external dependency mixed syntax external modules should handle mixed module in server and client components",
        "app dir - external dependency mixed syntax external modules should handle mixed module with next/dynamic",
        "app dir - external dependency react in external esm packages should apply serverExternalPackages inside of node_modules",
        "app dir - external dependency react in external esm packages should support namespace import with ESM packages",
        "app dir - external dependency react in external esm packages should use the same react in client app",
        "app dir - external dependency react in external esm packages should use the same react in edge server app",
        "app dir - external dependency react in external esm packages should use the same react in pages",
        "app dir - external dependency react in external esm packages should use the same react in server app",
        "app dir - external dependency server actions should compile server actions from node_modules in client components",
        "app dir - external dependency server actions should prefer to resolve esm over cjs for bundling optout packages",
        "app dir - external dependency should be able to opt-out 3rd party packages being bundled in server components",
        "app dir - external dependency should correctly collect global css imports and mark them as side effects",
        "app dir - external dependency should emit cjs helpers for external cjs modules when compiled",
        "app dir - external dependency should export client module references in esm",
        "app dir - external dependency should handle external async module libraries correctly",
        "app dir - external dependency should handle external css modules",
        "app dir - external dependency should handle external css modules in pages",
        "app dir - external dependency should handle external next/font",
        "app dir - external dependency should have proper tree-shaking for known modules in CJS",
        "app dir - external dependency should resolve 3rd party package exports based on the react-server condition",
        "app dir - external dependency should resolve the subset react in server components based on the react-server condition",
        "app dir - external dependency should support exporting multiple star re-exports",
        "app dir - external dependency should transpile specific external packages with the `transpilePackages` option",
        "app dir - external dependency should use the same async storages if imported directly",
        "app dir - external dependency should use the same export type for packages in both ssr and client"
      ],
      "failed": [],
      "pending": [
        "app dir - external dependency should not apply swc optimizer transform for external packages in browser layer in web worker"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-fetch-deduping/app-fetch-deduping.test.ts": {
      "passed": [
        "app-fetch-deduping during static generation dedupes requests amongst static workers"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-invalid-revalidate/app-invalid-revalidate.test.ts": {
      "passed": [
        "app-invalid-revalidate should error properly for invalid revalidate at layout",
        "app-invalid-revalidate should error properly for invalid revalidate at page",
        "app-invalid-revalidate should error properly for invalid revalidate on fetch",
        "app-invalid-revalidate should error properly for invalid revalidate on unstable_cache"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-middleware/app-middleware.test.ts": {
      "passed": [
        "app dir - middleware with middleware in src dir works without crashing when using requestAsyncStorage",
        "app dir - middleware without pages dir Updates headers",
        "app-dir with middleware Mutate request headers for Edge Functions Adds new headers",
        "app-dir with middleware Mutate request headers for Edge Functions Deletes headers",
        "app-dir with middleware Mutate request headers for Edge Functions Supports draft mode",
        "app-dir with middleware Mutate request headers for Edge Functions Updates headers",
        "app-dir with middleware Mutate request headers for Serverless Functions Adds new headers",
        "app-dir with middleware Mutate request headers for Serverless Functions Deletes headers",
        "app-dir with middleware Mutate request headers for Serverless Functions Supports draft mode",
        "app-dir with middleware Mutate request headers for Serverless Functions Updates headers",
        "app-dir with middleware Mutate request headers for next/headers Adds new headers",
        "app-dir with middleware Mutate request headers for next/headers Deletes headers",
        "app-dir with middleware Mutate request headers for next/headers Supports draft mode",
        "app-dir with middleware Mutate request headers for next/headers Updates headers",
        "app-dir with middleware should be possible to modify cookies & read them in an RSC in a single request",
        "app-dir with middleware should be possible to read cookies that are set during the middleware handling of a server action",
        "app-dir with middleware should filter correctly after middleware rewrite",
        "app-dir with middleware should respect cookie options of merged middleware cookies"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-prefetch-false-loading/app-prefetch-false-loading.test.ts": {
      "passed": [
        "app-prefetch-false-loading should not re-trigger loading state when navigating between pages that share a dynamic layout",
        "app-prefetch-false-loading should render loading for the initial render"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-prefetch-false/app-prefetch-false.test.ts": {
      "passed": [
        "app-prefetch-false should avoid double-fetching when optimistic navigation fails"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-prefetch-static/app-prefetch-static.test.ts": {
      "passed": [
        "app-prefetch-static should correctly navigate between static & dynamic pages"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-prefetch/prefetching.stale-times.test.ts": {
      "passed": [
        "app dir - prefetching (custom staleTime) should not fetch again when a static page was prefetched when navigating to it twice",
        "app dir - prefetching (custom staleTime) should not re-fetch cached data when navigating back to a route group"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-prefetch/prefetching.test.ts": {
      "passed": [
        "app dir - prefetching NEXT_RSC_UNION_QUERY query name is _rsc",
        "app dir - prefetching dynamic rendering /force-dynamic should not re-render layout when navigating between sub-pages",
        "app dir - prefetching dynamic rendering /force-dynamic should update search params following a link click",
        "app dir - prefetching dynamic rendering /revalidate-0 should not re-render layout when navigating between sub-pages",
        "app dir - prefetching dynamic rendering /revalidate-0 should update search params following a link click",
        "app dir - prefetching fetch priority should have an auto priority for all other fetch operations",
        "app dir - prefetching fetch priority should prefetch links in viewport with low priority",
        "app dir - prefetching fetch priority should prefetch with high priority when navigating to a page without a prefetch entry",
        "app dir - prefetching fetch priority should respect multiple prefetch types to the same URL",
        "app dir - prefetching invalid URLs should not throw when an invalid URL is passed to Link",
        "app dir - prefetching invalid URLs should throw when an invalid URL is passed to router.prefetch",
        "app dir - prefetching should calculate `_rsc` query based on `Next-Url`",
        "app dir - prefetching should immediately render the loading state for a dynamic segment when fetched from higher up in the tree",
        "app dir - prefetching should navigate when prefetch is false",
        "app dir - prefetching should not fetch again when a static page was prefetched",
        "app dir - prefetching should not have prefetch error for static path",
        "app dir - prefetching should not need to prefetch the layout if the prefetch is initiated at the same segment",
        "app dir - prefetching should not prefetch for a bot user agent",
        "app dir - prefetching should not re-render error component when triggering a prefetch action",
        "app dir - prefetching should only prefetch the loading state and not the component tree when prefetching at the same segment",
        "app dir - prefetching should show layout eagerly when prefetched with loading one level down"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-rendering/rendering.test.ts": {
      "passed": [
        "app dir rendering ISR should revalidate the page when revalidate is configured",
        "app dir rendering SSR only should run data fetch in parallel",
        "app dir rendering SSR only should run data in layout and page",
        "app dir rendering should serve app/page.server.js at /",
        "app dir rendering static only should run data in layout and page",
        "app dir rendering static only should run data in parallel and use cached version for production"
      ],
      "failed": [],
      "pending": [
        "app dir rendering mixed static and dynamic should generate static data during build and use it"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-routes-client-component/app-routes-client-component.test.ts": {
      "passed": [
        "referencing a client component in an app route responds without error"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-routes-subrequests/app-routes-subrequests.test.ts": {
      "passed": ["app-routes-subrequests shortcuts after 5 subrequests"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-routes-trailing-slash/app-routes-trailing-slash.test.ts": {
      "passed": [
        "app-routes-trailing-slash should handle trailing slash for edge runtime",
        "app-routes-trailing-slash should handle trailing slash for node runtime"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-routes/app-custom-route-base-path.test.ts": {
      "passed": [
        "app-custom-routes automatic implementations implements HEAD on routes with GET already implemented",
        "app-custom-routes automatic implementations implements OPTIONS on routes",
        "app-custom-routes basic fetch request with a response abort via a DELETE request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a DELETE request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response abort via a GET request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a GET request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response abort via a PATCH request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a PATCH request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response abort via a POST request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a POST request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response abort via a PUT request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a PUT request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a DELETE request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a DELETE request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a GET request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a GET request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a PATCH request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a PATCH request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a POST request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a POST request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a PUT request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a PUT request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response request can read query parameters",
        "app-custom-routes basic fetch request with a response request can read query parameters (edge)",
        "app-custom-routes basic fetch request with a response response supports the NextResponse.json() helper",
        "app-custom-routes basic fetch request with a response response supports the NextResponse.redirect() helper",
        "app-custom-routes basic fetch request with a response route groups routes to the correct handler",
        "app-custom-routes body can handle handle a streaming request and streaming response",
        "app-custom-routes body can handle handle a streaming request and streaming response (edge)",
        "app-custom-routes body can read a JSON encoded body",
        "app-custom-routes body can read a JSON encoded body (edge)",
        "app-custom-routes body can read a JSON encoded body for DELETE requests",
        "app-custom-routes body can read a JSON encoded body for OPTIONS requests",
        "app-custom-routes body can read a streamed JSON encoded body",
        "app-custom-routes body can read a streamed JSON encoded body (edge)",
        "app-custom-routes body can read the text body",
        "app-custom-routes body can read the text body (edge)",
        "app-custom-routes context does not provide params to routes without dynamic parameters",
        "app-custom-routes context provides params to routes with catch-all routes",
        "app-custom-routes context provides params to routes with dynamic parameters",
        "app-custom-routes customized metadata routes should work if conflict with metadata routes convention",
        "app-custom-routes dynamic = \"force-static\" strips search, headers, and domain from request",
        "app-custom-routes edge functions returns a response when headers are accessed",
        "app-custom-routes edge functions returns response using edge runtime",
        "app-custom-routes error conditions responds with 400 (Bad Request) when the requested method is not a valid HTTP method",
        "app-custom-routes error conditions responds with 405 (Method Not Allowed) when method is not implemented",
        "app-custom-routes error conditions responds with 500 (Internal Server Error) when the handler calls NextResponse.next()",
        "app-custom-routes error conditions responds with 500 (Internal Server Error) when the handler throws an error",
        "app-custom-routes hooks cookies gets the correct values",
        "app-custom-routes hooks cookies().has() gets the correct values",
        "app-custom-routes hooks headers gets the correct values",
        "app-custom-routes hooks notFound can respond correctly in edge",
        "app-custom-routes hooks notFound can respond correctly in nodejs",
        "app-custom-routes hooks permanentRedirect can respond correctly",
        "app-custom-routes hooks redirect can respond correctly",
        "app-custom-routes hooks req.cookies gets the correct values",
        "app-custom-routes no bundle error should not print bundling warning about React",
        "app-custom-routes no response returned should print an error when no response is returned",
        "app-custom-routes works with api prefix correctly does not statically generate with dynamic usage",
        "app-custom-routes works with api prefix correctly statically generates correctly with no dynamic usage",
        "app-custom-routes works with generateStaticParams correctly responds correctly on /static/first/data.json",
        "app-custom-routes works with generateStaticParams correctly responds correctly on /static/second/data.json",
        "app-custom-routes works with generateStaticParams correctly responds correctly on /static/three/data.json",
        "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/first/data.json",
        "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/second/data.json",
        "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/three/data.json"
      ],
      "failed": [],
      "pending": [
        "app-custom-routes basic fetch request with a response response supports the NextResponse.rewrite() helper"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-routes/app-custom-routes.test.ts": {
      "passed": [
        "app-custom-routes automatic implementations implements HEAD on routes with GET already implemented",
        "app-custom-routes automatic implementations implements OPTIONS on routes",
        "app-custom-routes basic fetch request with a response abort via a DELETE request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a DELETE request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response abort via a GET request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a GET request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response abort via a PATCH request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a PATCH request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response abort via a POST request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a POST request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response abort via a PUT request aborts without error on /basic/endpoint",
        "app-custom-routes basic fetch request with a response abort via a PUT request aborts without error on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a DELETE request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a DELETE request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a GET request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a GET request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a PATCH request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a PATCH request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a POST request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a POST request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response made via a PUT request responds correctly on /basic/endpoint",
        "app-custom-routes basic fetch request with a response made via a PUT request responds correctly on /basic/vercel/endpoint",
        "app-custom-routes basic fetch request with a response request can read query parameters",
        "app-custom-routes basic fetch request with a response request can read query parameters (edge)",
        "app-custom-routes basic fetch request with a response response supports the NextResponse.json() helper",
        "app-custom-routes basic fetch request with a response response supports the NextResponse.redirect() helper",
        "app-custom-routes basic fetch request with a response route groups routes to the correct handler",
        "app-custom-routes body can handle handle a streaming request and streaming response",
        "app-custom-routes body can handle handle a streaming request and streaming response (edge)",
        "app-custom-routes body can read a JSON encoded body",
        "app-custom-routes body can read a JSON encoded body (edge)",
        "app-custom-routes body can read a JSON encoded body for DELETE requests",
        "app-custom-routes body can read a JSON encoded body for OPTIONS requests",
        "app-custom-routes body can read a streamed JSON encoded body",
        "app-custom-routes body can read a streamed JSON encoded body (edge)",
        "app-custom-routes body can read the text body",
        "app-custom-routes body can read the text body (edge)",
        "app-custom-routes context does not provide params to routes without dynamic parameters",
        "app-custom-routes context provides params to routes with catch-all routes",
        "app-custom-routes context provides params to routes with dynamic parameters",
        "app-custom-routes customized metadata routes should work if conflict with metadata routes convention",
        "app-custom-routes dynamic = \"force-static\" strips search, headers, and domain from request",
        "app-custom-routes edge functions returns a response when headers are accessed",
        "app-custom-routes edge functions returns response using edge runtime",
        "app-custom-routes error conditions responds with 400 (Bad Request) when the requested method is not a valid HTTP method",
        "app-custom-routes error conditions responds with 405 (Method Not Allowed) when method is not implemented",
        "app-custom-routes error conditions responds with 500 (Internal Server Error) when the handler calls NextResponse.next()",
        "app-custom-routes error conditions responds with 500 (Internal Server Error) when the handler throws an error",
        "app-custom-routes hooks cookies gets the correct values",
        "app-custom-routes hooks cookies().has() gets the correct values",
        "app-custom-routes hooks headers gets the correct values",
        "app-custom-routes hooks notFound can respond correctly in edge",
        "app-custom-routes hooks notFound can respond correctly in nodejs",
        "app-custom-routes hooks permanentRedirect can respond correctly",
        "app-custom-routes hooks redirect can respond correctly",
        "app-custom-routes hooks req.cookies gets the correct values",
        "app-custom-routes no bundle error should not print bundling warning about React",
        "app-custom-routes no response returned should print an error when no response is returned",
        "app-custom-routes works with api prefix correctly does not statically generate with dynamic usage",
        "app-custom-routes works with api prefix correctly statically generates correctly with no dynamic usage",
        "app-custom-routes works with generateStaticParams correctly responds correctly on /static/first/data.json",
        "app-custom-routes works with generateStaticParams correctly responds correctly on /static/second/data.json",
        "app-custom-routes works with generateStaticParams correctly responds correctly on /static/three/data.json",
        "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/first/data.json",
        "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/second/data.json",
        "app-custom-routes works with generateStaticParams correctly revalidates correctly on /revalidate-1/three/data.json"
      ],
      "failed": [],
      "pending": [
        "app-custom-routes basic fetch request with a response response supports the NextResponse.rewrite() helper"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-simple-routes/app-simple-routes.test.ts": {
      "passed": [
        "app-simple-routes works with simple routes renders a edge route",
        "app-simple-routes works with simple routes renders a node route"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-static/app-static-custom-handler.test.ts": {
      "passed": [
        "app-dir static/dynamic handling Incremental cache limits should cache large data when using custom cache handler and force-cache mode",
        "app-dir static/dynamic handling fetch `cache` should supercede dynamic config when force-dynamic is used",
        "app-dir static/dynamic handling fetchCache config should supercede dynamic config when force-dynamic is used",
        "app-dir static/dynamic handling force-dynamic should supercede a \"default\" cache value",
        "app-dir static/dynamic handling should allow dynamic routes to access cookies",
        "app-dir static/dynamic handling should build dynamic param with edge runtime correctly",
        "app-dir static/dynamic handling should cache correctly for cache: no-store",
        "app-dir static/dynamic handling should cache correctly for fetchCache = default-cache",
        "app-dir static/dynamic handling should cache correctly for fetchCache = force-cache",
        "app-dir static/dynamic handling should cache correctly handle JSON body",
        "app-dir static/dynamic handling should cache correctly when accessing search params opts into dynamic rendering",
        "app-dir static/dynamic handling should cache correctly with POST method and revalidate",
        "app-dir static/dynamic handling should cache correctly with authorization header and revalidate",
        "app-dir static/dynamic handling should cache correctly with cookie header and revalidate",
        "app-dir static/dynamic handling should cache correctly with post method and revalidate",
        "app-dir static/dynamic handling should cache correctly with post method and revalidate edge",
        "app-dir static/dynamic handling should cache correctly with utf8 encoding",
        "app-dir static/dynamic handling should cache correctly with utf8 encoding edge",
        "app-dir static/dynamic handling should correctly handle fetchCache = \"force-no-store\"",
        "app-dir static/dynamic handling should correctly handle statusCode with notFound + ISR",
        "app-dir static/dynamic handling should correctly include headers instance in cache key",
        "app-dir static/dynamic handling should correctly skip caching POST fetch for POST handler",
        "app-dir static/dynamic handling should force SSR correctly for headers usage",
        "app-dir static/dynamic handling should handle dynamicParams: true correctly",
        "app-dir static/dynamic handling should handle partial-gen-params with default dynamicParams correctly",
        "app-dir static/dynamic handling should handle partial-gen-params with layout dynamicParams = false correctly",
        "app-dir static/dynamic handling should handle partial-gen-params with page dynamicParams = false correctly",
        "app-dir static/dynamic handling should have correct prerender-manifest entries",
        "app-dir static/dynamic handling should have logs from cache-handler",
        "app-dir static/dynamic handling should honor fetch cache correctly",
        "app-dir static/dynamic handling should honor fetch cache correctly (edge)",
        "app-dir static/dynamic handling should infer a fetchCache of force-no-store when force-dynamic is used",
        "app-dir static/dynamic handling should keep querystring on static page",
        "app-dir static/dynamic handling should log fetch metrics to the diagnostics directory",
        "app-dir static/dynamic handling should not cache correctly with POST method request init",
        "app-dir static/dynamic handling should not cache non-ok statusCode",
        "app-dir static/dynamic handling should not error with dynamic server usage with force-static",
        "app-dir static/dynamic handling should not error with force-dynamic and catch-all routes",
        "app-dir static/dynamic handling should not error with generateStaticParams and authed data on revalidate",
        "app-dir static/dynamic handling should not error with generateStaticParams and dynamic data",
        "app-dir static/dynamic handling should not have cache tags header for non-minimal mode",
        "app-dir static/dynamic handling should not throw Dynamic Server Usage error when using generateStaticParams with draftMode",
        "app-dir static/dynamic handling should output debug info for static bailouts",
        "app-dir static/dynamic handling should produce response with url from fetch",
        "app-dir static/dynamic handling should propagate unstable_cache tags correctly",
        "app-dir static/dynamic handling should properly error when dynamic = \"error\" page uses dynamic",
        "app-dir static/dynamic handling should render not found pages correctly and fallback to the default one",
        "app-dir static/dynamic handling should skip cache in draft mode",
        "app-dir static/dynamic handling should skip fetch cache when accessing request properties",
        "app-dir static/dynamic handling should skip fetch cache when an authorization header is present after dynamic usage",
        "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch cache option",
        "app-dir static/dynamic handling should ssr dynamically when forced via config",
        "app-dir static/dynamic handling should still cache even though the `traceparent` header was different",
        "app-dir static/dynamic handling should stream properly for /stale-cache-serving-edge/app-page",
        "app-dir static/dynamic handling should stream properly for /stale-cache-serving-edge/route-handler",
        "app-dir static/dynamic handling should stream properly for /stale-cache-serving/app-page",
        "app-dir static/dynamic handling should stream properly for /stale-cache-serving/route-handler",
        "app-dir static/dynamic handling should use auto no cache when no fetch config",
        "app-dir static/dynamic handling should warn for too many cache tags",
        "app-dir static/dynamic handling should work with dynamic path no generateStaticParams",
        "app-dir static/dynamic handling should work with forced dynamic path",
        "app-dir static/dynamic handling unstable-cache should work in pages/api/unstable-cache-edge",
        "app-dir static/dynamic handling unstable-cache should work in pages/api/unstable-cache-node",
        "app-dir static/dynamic handling unstable-cache should work in pages/unstable-cache-edge",
        "app-dir static/dynamic handling unstable-cache should work in pages/unstable-cache-node",
        "app-dir static/dynamic handling unstable_cache should bypass cache in draft mode",
        "app-dir static/dynamic handling unstable_cache should not cache new result in draft mode",
        "app-dir static/dynamic handling unstable_cache should not error when calling a fetch no-cache",
        "app-dir static/dynamic handling unstable_cache should not error when calling a fetch no-store",
        "app-dir static/dynamic handling unstable_cache should not error when retrieving the value undefined",
        "app-dir static/dynamic handling unstable_cache should retrieve the same value on second request",
        "app-dir static/dynamic handling unstable_noStore should not opt-out of static optimization when used in next/cache",
        "app-dir static/dynamic handling unstable_noStore should opt-out of static optimization",
        "app-dir static/dynamic handling usePathname should have the correct values",
        "app-dir static/dynamic handling usePathname should have values from canonical url on rewrite",
        "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - with suspense boundary",
        "app-dir static/dynamic handling useSearchParams client should have values from canonical url on rewrite",
        "app-dir static/dynamic handling useSearchParams server response should bailout to client rendering - with suspense boundary"
      ],
      "failed": [
        "app-dir static/dynamic handling should output HTML/RSC files for static paths"
      ],
      "pending": [
        "app-dir static/dynamic handling should correctly de-dupe fetch without next cache /react-fetch-deduping-edge",
        "app-dir static/dynamic handling should correctly de-dupe fetch without next cache /react-fetch-deduping-node",
        "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch revalidate option",
        "app-dir static/dynamic handling useSearchParams client should have empty search params on force-static",
        "app-dir static/dynamic handling useSearchParams server response should have empty search params on force-static"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-static/app-static.test.ts": {
      "passed": [
        "app-dir static/dynamic handling Incremental cache limits should load data only at build time even if response data size is greater than 2MB and FetchCache is possible",
        "app-dir static/dynamic handling fetch `cache` should supercede dynamic config when force-dynamic is used",
        "app-dir static/dynamic handling fetchCache config should supercede dynamic config when force-dynamic is used",
        "app-dir static/dynamic handling force-dynamic should supercede a \"default\" cache value",
        "app-dir static/dynamic handling it should revalidate correctly with edge route handler",
        "app-dir static/dynamic handling it should revalidate correctly with node route handler",
        "app-dir static/dynamic handling it should revalidate tag correctly with edge route handler",
        "app-dir static/dynamic handling it should revalidate tag correctly with node route handler",
        "app-dir static/dynamic handling should allow dynamic routes to access cookies",
        "app-dir static/dynamic handling should build dynamic param with edge runtime correctly",
        "app-dir static/dynamic handling should cache correctly for cache: no-store",
        "app-dir static/dynamic handling should cache correctly for fetchCache = default-cache",
        "app-dir static/dynamic handling should cache correctly for fetchCache = force-cache",
        "app-dir static/dynamic handling should cache correctly handle JSON body",
        "app-dir static/dynamic handling should cache correctly when accessing search params opts into dynamic rendering",
        "app-dir static/dynamic handling should cache correctly with POST method and revalidate",
        "app-dir static/dynamic handling should cache correctly with authorization header and revalidate",
        "app-dir static/dynamic handling should cache correctly with cookie header and revalidate",
        "app-dir static/dynamic handling should cache correctly with post method and revalidate",
        "app-dir static/dynamic handling should cache correctly with post method and revalidate edge",
        "app-dir static/dynamic handling should cache correctly with utf8 encoding",
        "app-dir static/dynamic handling should cache correctly with utf8 encoding edge",
        "app-dir static/dynamic handling should correctly error and not update cache for ISR",
        "app-dir static/dynamic handling should correctly handle fetchCache = \"force-no-store\"",
        "app-dir static/dynamic handling should correctly handle statusCode with notFound + ISR",
        "app-dir static/dynamic handling should correctly include headers instance in cache key",
        "app-dir static/dynamic handling should correctly skip caching POST fetch for POST handler",
        "app-dir static/dynamic handling should force SSR correctly for headers usage",
        "app-dir static/dynamic handling should handle dynamicParams: false correctly",
        "app-dir static/dynamic handling should handle dynamicParams: true correctly",
        "app-dir static/dynamic handling should handle partial-gen-params with default dynamicParams correctly",
        "app-dir static/dynamic handling should handle partial-gen-params with layout dynamicParams = false correctly",
        "app-dir static/dynamic handling should handle partial-gen-params with page dynamicParams = false correctly",
        "app-dir static/dynamic handling should have correct prerender-manifest entries",
        "app-dir static/dynamic handling should honor dynamic = \"force-static\" correctly",
        "app-dir static/dynamic handling should honor dynamic = \"force-static\" correctly (lazy)",
        "app-dir static/dynamic handling should honor fetch cache correctly",
        "app-dir static/dynamic handling should honor fetch cache correctly (edge)",
        "app-dir static/dynamic handling should honor fetch cache in generateStaticParams",
        "app-dir static/dynamic handling should honor force-static with fetch cache: no-store correctly",
        "app-dir static/dynamic handling should infer a fetchCache of force-no-store when force-dynamic is used",
        "app-dir static/dynamic handling should keep querystring on static page",
        "app-dir static/dynamic handling should log fetch metrics to the diagnostics directory",
        "app-dir static/dynamic handling should navigate to static path correctly",
        "app-dir static/dynamic handling should not cache correctly with POST method request init",
        "app-dir static/dynamic handling should not cache non-ok statusCode",
        "app-dir static/dynamic handling should not error with dynamic server usage with force-static",
        "app-dir static/dynamic handling should not error with force-dynamic and catch-all routes",
        "app-dir static/dynamic handling should not error with generateStaticParams and authed data on revalidate",
        "app-dir static/dynamic handling should not error with generateStaticParams and dynamic data",
        "app-dir static/dynamic handling should not have cache tags header for non-minimal mode",
        "app-dir static/dynamic handling should not revalidate / when revalidate is not used",
        "app-dir static/dynamic handling should not throw Dynamic Server Usage error when using generateStaticParams with draftMode",
        "app-dir static/dynamic handling should output debug info for static bailouts",
        "app-dir static/dynamic handling should produce response with url from fetch",
        "app-dir static/dynamic handling should propagate unstable_cache tags correctly",
        "app-dir static/dynamic handling should properly error when dynamic = \"error\" page uses dynamic",
        "app-dir static/dynamic handling should properly revalidate a route handler that triggers dynamic usage with force-static",
        "app-dir static/dynamic handling should render not found pages correctly and fallback to the default one",
        "app-dir static/dynamic handling should revalidate all fetches during on-demand revalidate",
        "app-dir static/dynamic handling should revalidate correctly with config and fetch revalidate",
        "app-dir static/dynamic handling should skip cache in draft mode",
        "app-dir static/dynamic handling should skip fetch cache when accessing request properties",
        "app-dir static/dynamic handling should skip fetch cache when an authorization header is present after dynamic usage",
        "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch cache option",
        "app-dir static/dynamic handling should ssr dynamically when forced via config",
        "app-dir static/dynamic handling should still cache even though the `traceparent` header was different",
        "app-dir static/dynamic handling should stream properly for /stale-cache-serving-edge/app-page",
        "app-dir static/dynamic handling should stream properly for /stale-cache-serving-edge/route-handler",
        "app-dir static/dynamic handling should stream properly for /stale-cache-serving/app-page",
        "app-dir static/dynamic handling should stream properly for /stale-cache-serving/route-handler",
        "app-dir static/dynamic handling should use auto no cache when no fetch config",
        "app-dir static/dynamic handling should warn for too many cache tags",
        "app-dir static/dynamic handling should work with dynamic path no generateStaticParams",
        "app-dir static/dynamic handling should work with forced dynamic path",
        "app-dir static/dynamic handling unstable-cache should work in pages/api/unstable-cache-edge",
        "app-dir static/dynamic handling unstable-cache should work in pages/api/unstable-cache-node",
        "app-dir static/dynamic handling unstable-cache should work in pages/unstable-cache-edge",
        "app-dir static/dynamic handling unstable-cache should work in pages/unstable-cache-node",
        "app-dir static/dynamic handling unstable_cache should bypass cache in draft mode",
        "app-dir static/dynamic handling unstable_cache should not cache new result in draft mode",
        "app-dir static/dynamic handling unstable_cache should not error when calling a fetch no-cache",
        "app-dir static/dynamic handling unstable_cache should not error when calling a fetch no-store",
        "app-dir static/dynamic handling unstable_cache should not error when retrieving the value undefined",
        "app-dir static/dynamic handling unstable_cache should retrieve the same value on second request",
        "app-dir static/dynamic handling unstable_noStore should not opt-out of static optimization when used in next/cache",
        "app-dir static/dynamic handling unstable_noStore should opt-out of static optimization",
        "app-dir static/dynamic handling usePathname should have the correct values",
        "app-dir static/dynamic handling usePathname should have values from canonical url on rewrite",
        "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - with suspense boundary",
        "app-dir static/dynamic handling useSearchParams client should have values from canonical url on rewrite",
        "app-dir static/dynamic handling useSearchParams server response should bailout to client rendering - with suspense boundary"
      ],
      "failed": [
        "app-dir static/dynamic handling should output HTML/RSC files for static paths"
      ],
      "pending": [
        "app-dir static/dynamic handling should correctly de-dupe fetch without next cache /react-fetch-deduping-edge",
        "app-dir static/dynamic handling should correctly de-dupe fetch without next cache /react-fetch-deduping-node",
        "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch revalidate option",
        "app-dir static/dynamic handling useSearchParams client should have empty search params on force-static",
        "app-dir static/dynamic handling useSearchParams server response should have empty search params on force-static"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app-validation/validation.test.ts": {
      "passed": [
        "app dir - validation should error when passing invalid router state tree"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app/experimental-compile.test.ts": {
      "passed": [
        "app dir - basic <Link /> should allow linking from app page to pages page",
        "app dir - basic <Link /> should be soft for back navigation",
        "app dir - basic <Link /> should be soft for forward navigation",
        "app dir - basic <Link /> should hard push",
        "app dir - basic <Link /> should hard replace",
        "app dir - basic <Link /> should navigate to pages dynamic route from pages page if it overlaps with an app page",
        "app dir - basic <Link /> should push to external url",
        "app dir - basic <Link /> should replace to external url",
        "app dir - basic <Link /> should soft push",
        "app dir - basic <Link /> should soft replace",
        "app dir - basic bootstrap scripts should only bootstrap with one script, prinitializing the rest",
        "app dir - basic bootstrap scripts should successfully bootstrap even when using CSP",
        "app dir - basic data fetch with response over 16KB with chunked encoding should load page when fetching a large amount of data",
        "app dir - basic known bugs should handle as on next/link",
        "app dir - basic known bugs should handle next/link back to initially loaded page",
        "app dir - basic known bugs should handle router.refresh without resetting state",
        "app dir - basic known bugs should not do additional pushState when already on the page",
        "app dir - basic known bugs should not share flight data between requests",
        "app dir - basic known bugs should support React cache client component",
        "app dir - basic known bugs should support React cache client component client-navigation",
        "app dir - basic known bugs should support React cache middleware overriding headers",
        "app dir - basic known bugs should support React cache server component",
        "app dir - basic known bugs should support React cache server component client-navigation",
        "app dir - basic known bugs should support React fetch instrumentation server component",
        "app dir - basic known bugs should support React fetch instrumentation server component client-navigation",
        "app dir - basic next/script should insert preload tags for beforeInteractive and afterInteractive scripts",
        "app dir - basic next/script should load stylesheets for next/scripts",
        "app dir - basic next/script should pass `nonce`",
        "app dir - basic next/script should pass nonce when using next/font",
        "app dir - basic next/script should pass on extra props for beforeInteractive scripts with a src prop",
        "app dir - basic next/script should pass on extra props for beforeInteractive scripts without a src prop",
        "app dir - basic next/script should support next/script and render in correct order",
        "app dir - basic outputs correct build-diagnostics.json",
        "app dir - basic rewrites should support rewrites on client-side navigation",
        "app dir - basic rewrites should support rewrites on client-side navigation from pages to app with existing pages path",
        "app dir - basic rewrites should support rewrites on initial load",
        "app dir - basic searchParams prop client component should have the correct search params",
        "app dir - basic searchParams prop client component should have the correct search params on middleware rewrite",
        "app dir - basic searchParams prop client component should have the correct search params on rewrite",
        "app dir - basic searchParams prop server component should have the correct search params",
        "app dir - basic searchParams prop server component should have the correct search params on middleware rewrite",
        "app dir - basic searchParams prop server component should have the correct search params on rewrite",
        "app dir - basic server components Loading should render loading.js in browser for slow layout",
        "app dir - basic server components Loading should render loading.js in browser for slow layout and page",
        "app dir - basic server components Loading should render loading.js in browser for slow page",
        "app dir - basic server components Loading should render loading.js in initial html for slow layout",
        "app dir - basic server components Loading should render loading.js in initial html for slow layout and page",
        "app dir - basic server components Loading should render loading.js in initial html for slow page",
        "app dir - basic server components catch-all routes should handle catch-all segments link",
        "app dir - basic server components catch-all routes should handle optional catch-all segments link",
        "app dir - basic server components catch-all routes should handle optional segments",
        "app dir - basic server components catch-all routes should handle optional segments root",
        "app dir - basic server components catch-all routes should handle required segments",
        "app dir - basic server components catch-all routes should handle required segments root as not found",
        "app dir - basic server components client components should have consistent query and params handling",
        "app dir - basic server components dynamic routes should only pass params that apply to the layout",
        "app dir - basic server components middleware should strip internal query parameters from requests to middleware for redirect",
        "app dir - basic server components middleware should strip internal query parameters from requests to middleware for rewrite",
        "app dir - basic server components next/router should support router.back and router.forward",
        "app dir - basic server components should include client component layout with server component route should include it client-side",
        "app dir - basic server components should include client component layout with server component route should include it server-side",
        "app dir - basic server components should not serve .client.js as a path",
        "app dir - basic server components should not serve .server.js as a path",
        "app dir - basic server components should serve client component should serve client-side",
        "app dir - basic server components should serve client component should serve server-side",
        "app dir - basic server components should serve shared component",
        "app dir - basic should contain framework.json",
        "app dir - basic should ensure the </body></html> suffix is at the end of the stream",
        "app dir - basic should handle hash in initial url",
        "app dir - basic should have correct searchParams and params (client)",
        "app dir - basic should have correct searchParams and params (server)",
        "app dir - basic should include document html and body",
        "app dir - basic should include layouts when no direct parent layout",
        "app dir - basic should include parent document when no direct parent layout",
        "app dir - basic should match redirects in pages correctly $path",
        "app dir - basic should not apply client router filter on shallow",
        "app dir - basic should not create new root layout when nested (optional)",
        "app dir - basic should not include parent when not in parent directory",
        "app dir - basic should not rerender layout when navigating between routes in the same layout",
        "app dir - basic should not serve when layout is provided but no folder index",
        "app dir - basic should not share edge workers",
        "app dir - basic should pass props from getServerSideProps in root layout",
        "app dir - basic should provide query for getStaticProps page correctly",
        "app dir - basic should return normalized dynamic route params for catch-all edge page",
        "app dir - basic should return the `vary` header from edge runtime",
        "app dir - basic should return the `vary` header from pages for flight requests",
        "app dir - basic should serve /index as separate page",
        "app dir - basic should serve dynamic parameter",
        "app dir - basic should serve dynamic route from pages",
        "app dir - basic should serve from app",
        "app dir - basic should serve from pages",
        "app dir - basic should serve from public",
        "app dir - basic should serve nested parent",
        "app dir - basic should serve page as a segment name correctly",
        "app dir - basic should serve polyfills for browsers that do not support modules",
        "app dir - basic should successfully detect app route during prefetch",
        "app dir - basic should use new root layout when provided",
        "app dir - basic should use text/x-component for flight",
        "app dir - basic should use text/x-component for flight with edge runtime",
        "app dir - basic should work for catch-all edge page",
        "app dir - basic template component should render the template that holds state in a client component and reset on navigation",
        "app dir - basic template component should render the template that is a server component and rerender on navigation"
      ],
      "failed": [
        "app dir - basic should encode chunk path correctly",
        "app dir - basic should generate build traces correctly"
      ],
      "pending": [
        "app dir - basic known bugs should support React fetch instrumentation client component",
        "app dir - basic known bugs should support React fetch instrumentation client component client-navigation",
        "app dir - basic should handle css imports in next/dynamic correctly",
        "app dir - basic should match partial parameters",
        "app dir - basic should not include parent when not in parent directory with route in directory"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app/flying-shuttle.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "should output updated trace files should hard navigate on chunk load failure",
        "should output updated trace files should have file hashes in trace files",
        "should output updated trace files should only rebuild a changed app and pages route correctly",
        "should output updated trace files should only rebuild just a changed app route correctly",
        "should output updated trace files should only rebuild just a changed pages route correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app/index.test.ts": {
      "passed": [
        "app dir - basic <Link /> should allow linking from app page to pages page",
        "app dir - basic <Link /> should be soft for back navigation",
        "app dir - basic <Link /> should be soft for forward navigation",
        "app dir - basic <Link /> should hard push",
        "app dir - basic <Link /> should hard replace",
        "app dir - basic <Link /> should navigate to pages dynamic route from pages page if it overlaps with an app page",
        "app dir - basic <Link /> should push to external url",
        "app dir - basic <Link /> should replace to external url",
        "app dir - basic <Link /> should soft push",
        "app dir - basic <Link /> should soft replace",
        "app dir - basic bootstrap scripts should only bootstrap with one script, prinitializing the rest",
        "app dir - basic bootstrap scripts should successfully bootstrap even when using CSP",
        "app dir - basic data fetch with response over 16KB with chunked encoding should load page when fetching a large amount of data",
        "app dir - basic known bugs should handle as on next/link",
        "app dir - basic known bugs should handle next/link back to initially loaded page",
        "app dir - basic known bugs should handle router.refresh without resetting state",
        "app dir - basic known bugs should not do additional pushState when already on the page",
        "app dir - basic known bugs should not share flight data between requests",
        "app dir - basic known bugs should support React cache client component",
        "app dir - basic known bugs should support React cache client component client-navigation",
        "app dir - basic known bugs should support React cache middleware overriding headers",
        "app dir - basic known bugs should support React cache server component",
        "app dir - basic known bugs should support React cache server component client-navigation",
        "app dir - basic known bugs should support React fetch instrumentation server component",
        "app dir - basic known bugs should support React fetch instrumentation server component client-navigation",
        "app dir - basic next/script should insert preload tags for beforeInteractive and afterInteractive scripts",
        "app dir - basic next/script should load stylesheets for next/scripts",
        "app dir - basic next/script should pass `nonce`",
        "app dir - basic next/script should pass nonce when using next/font",
        "app dir - basic next/script should pass on extra props for beforeInteractive scripts with a src prop",
        "app dir - basic next/script should pass on extra props for beforeInteractive scripts without a src prop",
        "app dir - basic next/script should support next/script and render in correct order",
        "app dir - basic outputs correct build-diagnostics.json",
        "app dir - basic rewrites should support rewrites on client-side navigation",
        "app dir - basic rewrites should support rewrites on client-side navigation from pages to app with existing pages path",
        "app dir - basic rewrites should support rewrites on initial load",
        "app dir - basic searchParams prop client component should have the correct search params",
        "app dir - basic searchParams prop client component should have the correct search params on middleware rewrite",
        "app dir - basic searchParams prop client component should have the correct search params on rewrite",
        "app dir - basic searchParams prop server component should have the correct search params",
        "app dir - basic searchParams prop server component should have the correct search params on middleware rewrite",
        "app dir - basic searchParams prop server component should have the correct search params on rewrite",
        "app dir - basic server components Loading should render loading.js in browser for slow layout",
        "app dir - basic server components Loading should render loading.js in browser for slow layout and page",
        "app dir - basic server components Loading should render loading.js in browser for slow page",
        "app dir - basic server components Loading should render loading.js in initial html for slow layout",
        "app dir - basic server components Loading should render loading.js in initial html for slow layout and page",
        "app dir - basic server components Loading should render loading.js in initial html for slow page",
        "app dir - basic server components catch-all routes should handle catch-all segments link",
        "app dir - basic server components catch-all routes should handle optional catch-all segments link",
        "app dir - basic server components catch-all routes should handle optional segments",
        "app dir - basic server components catch-all routes should handle optional segments root",
        "app dir - basic server components catch-all routes should handle required segments",
        "app dir - basic server components catch-all routes should handle required segments root as not found",
        "app dir - basic server components client components should have consistent query and params handling",
        "app dir - basic server components dynamic routes should only pass params that apply to the layout",
        "app dir - basic server components middleware should strip internal query parameters from requests to middleware for redirect",
        "app dir - basic server components middleware should strip internal query parameters from requests to middleware for rewrite",
        "app dir - basic server components next/router should support router.back and router.forward",
        "app dir - basic server components should include client component layout with server component route should include it client-side",
        "app dir - basic server components should include client component layout with server component route should include it server-side",
        "app dir - basic server components should not serve .client.js as a path",
        "app dir - basic server components should not serve .server.js as a path",
        "app dir - basic server components should serve client component should serve client-side",
        "app dir - basic server components should serve client component should serve server-side",
        "app dir - basic server components should serve shared component",
        "app dir - basic should contain framework.json",
        "app dir - basic should ensure the </body></html> suffix is at the end of the stream",
        "app dir - basic should handle hash in initial url",
        "app dir - basic should have correct preferredRegion values in manifest",
        "app dir - basic should have correct searchParams and params (client)",
        "app dir - basic should have correct searchParams and params (server)",
        "app dir - basic should have correct size in build output",
        "app dir - basic should include document html and body",
        "app dir - basic should include layouts when no direct parent layout",
        "app dir - basic should include parent document when no direct parent layout",
        "app dir - basic should match redirects in pages correctly $path",
        "app dir - basic should not apply client router filter on shallow",
        "app dir - basic should not create new root layout when nested (optional)",
        "app dir - basic should not include parent when not in parent directory",
        "app dir - basic should not rerender layout when navigating between routes in the same layout",
        "app dir - basic should not serve when layout is provided but no folder index",
        "app dir - basic should not share edge workers",
        "app dir - basic should pass props from getServerSideProps in root layout",
        "app dir - basic should return normalized dynamic route params for catch-all edge page",
        "app dir - basic should return the `vary` header from edge runtime",
        "app dir - basic should return the `vary` header from pages for flight requests",
        "app dir - basic should serve /index as separate page",
        "app dir - basic should serve dynamic parameter",
        "app dir - basic should serve dynamic route from pages",
        "app dir - basic should serve from app",
        "app dir - basic should serve from pages",
        "app dir - basic should serve from public",
        "app dir - basic should serve nested parent",
        "app dir - basic should serve page as a segment name correctly",
        "app dir - basic should serve polyfills for browsers that do not support modules",
        "app dir - basic should successfully detect app route during prefetch",
        "app dir - basic should use new root layout when provided",
        "app dir - basic should use text/x-component for flight",
        "app dir - basic should use text/x-component for flight with edge runtime",
        "app dir - basic should work for catch-all edge page",
        "app dir - basic template component should render the template that holds state in a client component and reset on navigation",
        "app dir - basic template component should render the template that is a server component and rerender on navigation"
      ],
      "failed": [
        "app dir - basic should encode chunk path correctly",
        "app dir - basic should generate build traces correctly",
        "app dir - basic should not have loader generated function for edge runtime"
      ],
      "pending": [
        "app dir - basic known bugs should support React fetch instrumentation client component",
        "app dir - basic known bugs should support React fetch instrumentation client component client-navigation",
        "app dir - basic should handle css imports in next/dynamic correctly",
        "app dir - basic should match partial parameters",
        "app dir - basic should not include parent when not in parent directory with route in directory"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app/standalone-gsp.test.ts": {
      "passed": [
        "output: standalone with getStaticProps should work correctly with output standalone"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app/standalone.test.ts": {
      "passed": [
        "output: standalone with app dir should handle trace files correctly for route groups (nodejs only)",
        "output: standalone with app dir should work correctly with output standalone"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/app/useReportWebVitals.test.ts": {
      "passed": ["useReportWebVitals hook should send web-vitals"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/asset-prefix-with-basepath/asset-prefix-with-basepath.test.ts": {
      "passed": [
        "app-dir assetPrefix with basePath handling bundles should return 200 on served assetPrefix",
        "app-dir assetPrefix with basePath handling rewrites rewrites that do not start with assetPrefix should still work",
        "app-dir assetPrefix with basePath handling rewrites should respect rewrites that start with assetPrefix",
        "app-dir assetPrefix with basePath handling should redirect route when clicking link",
        "app-dir assetPrefix with basePath handling should redirect route when requesting it directly",
        "app-dir assetPrefix with basePath handling should redirect route when requesting it directly by browser",
        "app-dir assetPrefix with basePath handling should render link"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/asset-prefix/asset-prefix.test.ts": {
      "passed": [
        "app-dir assetPrefix handling bundles should return 200 on served assetPrefix",
        "app-dir assetPrefix handling rewrites rewrites that do not start with assetPrefix should still work",
        "app-dir assetPrefix handling rewrites should respect rewrites that start with assetPrefix",
        "app-dir assetPrefix handling should redirect route when clicking link",
        "app-dir assetPrefix handling should redirect route when requesting it directly",
        "app-dir assetPrefix handling should redirect route when requesting it directly by browser",
        "app-dir assetPrefix handling should render link"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/async-component-preload/async-component-preload.test.ts": {
      "passed": [
        "async-component-preload should handle redirect in an async page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/autoscroll-with-css-modules/index.test.ts": {
      "passed": [
        "router autoscrolling on navigation with css modules vertical scroll when page imports css modules should scroll to top of document when navigating between to pages without layout when",
        "router autoscrolling on navigation with css modules vertical scroll when page imports css modules should scroll when clicking in JS"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/back-button-download-bug/back-button-download-bug.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "app-dir back button download bug app-dir back button download bug should redirect route when clicking link"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/binary/rsc-binary.test.ts": {
      "passed": [
        "RSC binary serialization should correctly encode/decode binaries and hydrate"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/build-size/index.test.ts": {
      "passed": ["app-dir build size should have correct size in build output"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/catchall-parallel-routes-group/catchall-parallel-routes-group.test.ts": {
      "passed": [
        "catchall-parallel-routes-group should work without throwing any errors about invalid pages"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/catchall-specificity/catchall-specificity.test.ts": {
      "passed": [
        "catchall-specificity should match the generic catchall correctly",
        "catchall-specificity should match the specific catchall correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/conflicting-page-segments/conflicting-page-segments.test.ts": {
      "passed": [],
      "failed": [
        "conflicting-page-segments should throw an error when a route groups causes a conflict with a parallel segment"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/create-root-layout/create-root-layout.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "app-dir create root layout build should break the build if a page is missing root layout"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/crypto-globally-available/crypto-globally-available.test.ts": {
      "passed": [
        "Web Crypto API is available globally should be available in Route Handlers",
        "Web Crypto API is available globally should be available in Server Components"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/css-client-side-nav-parallel-routes/css-client-side-nav-parallel-routes.test.ts": {
      "passed": [
        "css-client-side-nav-parallel-routes should apply styles after navigation"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/css-modules-scoping/css-modules-scoping.test.ts": {
      "passed": [
        "css-modules-scoping should not prefix grid areas",
        "css-modules-scoping should prefix animation"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/css-order/css-order.test.ts": {
      "passed": [
        "css-order turbo should load correct styles navigating back again interleaved-a -> interleaved-b -> interleaved-a -> interleaved-b",
        "css-order turbo should load correct styles navigating back again pages-interleaved-a -> pages-interleaved-b -> pages-interleaved-a -> pages-interleaved-b",
        "css-order turbo should load correct styles navigating big-interleaved-a -> big-interleaved-b",
        "css-order turbo should load correct styles navigating big-interleaved-b -> big-interleaved-a",
        "css-order turbo should load correct styles navigating first -> first-client",
        "css-order turbo should load correct styles navigating first -> second",
        "css-order turbo should load correct styles navigating first -> second-client",
        "css-order turbo should load correct styles navigating first -> third",
        "css-order turbo should load correct styles navigating first-client -> first",
        "css-order turbo should load correct styles navigating first-client -> second",
        "css-order turbo should load correct styles navigating first-client -> second-client",
        "css-order turbo should load correct styles navigating first-client -> third",
        "css-order turbo should load correct styles navigating global-first -> global-second",
        "css-order turbo should load correct styles navigating global-second -> global-first",
        "css-order turbo should load correct styles navigating interleaved-a -> interleaved-b",
        "css-order turbo should load correct styles navigating interleaved-b -> interleaved-a",
        "css-order turbo should load correct styles navigating partial-reversed-a -> partial-reversed-b",
        "css-order turbo should load correct styles navigating partial-reversed-b -> partial-reversed-a",
        "css-order turbo should load correct styles navigating reversed-a -> reversed-b",
        "css-order turbo should load correct styles navigating reversed-b -> reversed-a",
        "css-order turbo should load correct styles navigating second -> first",
        "css-order turbo should load correct styles navigating second -> first-client",
        "css-order turbo should load correct styles navigating second -> second-client",
        "css-order turbo should load correct styles navigating second -> third",
        "css-order turbo should load correct styles navigating second-client -> first",
        "css-order turbo should load correct styles navigating second-client -> first-client",
        "css-order turbo should load correct styles navigating second-client -> second",
        "css-order turbo should load correct styles navigating second-client -> third",
        "css-order turbo should load correct styles navigating third -> first",
        "css-order turbo should load correct styles navigating third -> first-client",
        "css-order turbo should load correct styles navigating third -> second",
        "css-order turbo should load correct styles navigating third -> second-client",
        "css-order turbo should load correct styles on big-interleaved-a",
        "css-order turbo should load correct styles on big-interleaved-b",
        "css-order turbo should load correct styles on first",
        "css-order turbo should load correct styles on first-client",
        "css-order turbo should load correct styles on global-first",
        "css-order turbo should load correct styles on global-second",
        "css-order turbo should load correct styles on interleaved-a",
        "css-order turbo should load correct styles on interleaved-b",
        "css-order turbo should load correct styles on pages-interleaved-a",
        "css-order turbo should load correct styles on partial-reversed-a",
        "css-order turbo should load correct styles on partial-reversed-b",
        "css-order turbo should load correct styles on reversed-a",
        "css-order turbo should load correct styles on reversed-b",
        "css-order turbo should load correct styles on second",
        "css-order turbo should load correct styles on second-client",
        "css-order turbo should load correct styles on third"
      ],
      "failed": [
        "css-order turbo should load correct styles navigating back again first -> first-client -> first -> first-client",
        "css-order turbo should load correct styles navigating back again first -> second -> first -> second",
        "css-order turbo should load correct styles navigating back again first -> second-client -> first -> second-client",
        "css-order turbo should load correct styles navigating back again first -> third -> first -> third",
        "css-order turbo should load correct styles navigating back again first-client -> first -> first-client -> first",
        "css-order turbo should load correct styles navigating back again first-client -> second -> first-client -> second",
        "css-order turbo should load correct styles navigating back again first-client -> second-client -> first-client -> second-client",
        "css-order turbo should load correct styles navigating back again first-client -> third -> first-client -> third",
        "css-order turbo should load correct styles navigating back again interleaved-b -> interleaved-a -> interleaved-b -> interleaved-a",
        "css-order turbo should load correct styles navigating back again pages-first -> pages-second -> pages-first -> pages-second",
        "css-order turbo should load correct styles navigating back again pages-first -> pages-third -> pages-first -> pages-third",
        "css-order turbo should load correct styles navigating back again pages-interleaved-b -> pages-interleaved-a -> pages-interleaved-b -> pages-interleaved-a",
        "css-order turbo should load correct styles navigating back again pages-partial-reversed-a -> pages-partial-reversed-b -> pages-partial-reversed-a -> pages-partial-reversed-b",
        "css-order turbo should load correct styles navigating back again pages-partial-reversed-b -> pages-partial-reversed-a -> pages-partial-reversed-b -> pages-partial-reversed-a",
        "css-order turbo should load correct styles navigating back again pages-reversed-a -> pages-reversed-b -> pages-reversed-a -> pages-reversed-b",
        "css-order turbo should load correct styles navigating back again pages-reversed-b -> pages-reversed-a -> pages-reversed-b -> pages-reversed-a",
        "css-order turbo should load correct styles navigating back again pages-second -> pages-first -> pages-second -> pages-first",
        "css-order turbo should load correct styles navigating back again pages-second -> pages-third -> pages-second -> pages-third",
        "css-order turbo should load correct styles navigating back again pages-third -> pages-first -> pages-third -> pages-first",
        "css-order turbo should load correct styles navigating back again pages-third -> pages-second -> pages-third -> pages-second",
        "css-order turbo should load correct styles navigating back again second -> first -> second -> first",
        "css-order turbo should load correct styles navigating back again second -> first-client -> second -> first-client",
        "css-order turbo should load correct styles navigating back again second -> second-client -> second -> second-client",
        "css-order turbo should load correct styles navigating back again second -> third -> second -> third",
        "css-order turbo should load correct styles navigating back again second-client -> first -> second-client -> first",
        "css-order turbo should load correct styles navigating back again second-client -> first-client -> second-client -> first-client",
        "css-order turbo should load correct styles navigating back again second-client -> second -> second-client -> second",
        "css-order turbo should load correct styles navigating back again second-client -> third -> second-client -> third",
        "css-order turbo should load correct styles navigating back again third -> first -> third -> first",
        "css-order turbo should load correct styles navigating back again third -> first-client -> third -> first-client",
        "css-order turbo should load correct styles navigating back again third -> second -> third -> second",
        "css-order turbo should load correct styles navigating back again third -> second-client -> third -> second-client",
        "css-order turbo should load correct styles navigating pages-first -> pages-second",
        "css-order turbo should load correct styles navigating pages-first -> pages-third",
        "css-order turbo should load correct styles navigating pages-partial-reversed-a -> pages-partial-reversed-b",
        "css-order turbo should load correct styles navigating pages-partial-reversed-b -> pages-partial-reversed-a",
        "css-order turbo should load correct styles navigating pages-reversed-a -> pages-reversed-b",
        "css-order turbo should load correct styles navigating pages-reversed-b -> pages-reversed-a",
        "css-order turbo should load correct styles navigating pages-second -> pages-first",
        "css-order turbo should load correct styles navigating pages-second -> pages-third",
        "css-order turbo should load correct styles navigating pages-third -> pages-first",
        "css-order turbo should load correct styles navigating pages-third -> pages-second",
        "css-order turbo should load correct styles on pages-first",
        "css-order turbo should load correct styles on pages-interleaved-b",
        "css-order turbo should load correct styles on pages-partial-reversed-a",
        "css-order turbo should load correct styles on pages-partial-reversed-b",
        "css-order turbo should load correct styles on pages-reversed-a",
        "css-order turbo should load correct styles on pages-reversed-b",
        "css-order turbo should load correct styles on pages-second",
        "css-order turbo should load correct styles on pages-third"
      ],
      "pending": [
        "css-order turbo should load correct styles navigating back again big-interleaved-a -> big-interleaved-b -> big-interleaved-a -> big-interleaved-b",
        "css-order turbo should load correct styles navigating back again big-interleaved-b -> big-interleaved-a -> big-interleaved-b -> big-interleaved-a",
        "css-order turbo should load correct styles navigating pages-interleaved-a -> pages-interleaved-b",
        "css-order turbo should load correct styles navigating pages-interleaved-b -> pages-interleaved-a"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/dedupe-rsc-error-log/dedupe-rsc-error-log.test.ts": {
      "passed": [
        "dedupe-rsc-error-log should only log RSC error once for edge runtime",
        "dedupe-rsc-error-log should only log RSC error once for nodejs runtime",
        "dedupe-rsc-error-log should only log SSR error once for edge runtime",
        "dedupe-rsc-error-log should only log SSR error once for nodejs runtime"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/disable-logging-route/disable-logging-route.test.ts": {
      "passed": [
        "app-dir - disable-logging-route should not log if disabled logging"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/draft-mode-middleware/draft-mode-middleware.test.ts": {
      "passed": [
        "app-dir - draft-mode-middleware should be able to disable draft mode with middleware present",
        "app-dir - draft-mode-middleware should be able to enable draft mode with middleware present"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/draft-mode/draft-mode.test.ts": {
      "passed": [
        "app dir - draft mode in edge runtime should be disabled from api route handler",
        "app dir - draft mode in edge runtime should be enabled from api route handler when draft mode enabled",
        "app dir - draft mode in edge runtime should generate rand when draft mode enabled",
        "app dir - draft mode in edge runtime should have set-cookie header on enable",
        "app dir - draft mode in edge runtime should have set-cookie header with redirect location",
        "app dir - draft mode in edge runtime should not perform full page navigation on router.refresh()",
        "app dir - draft mode in edge runtime should not read other cookies when draft mode disabled during next start",
        "app dir - draft mode in edge runtime should read other cookies when draft mode enabled",
        "app dir - draft mode in edge runtime should use initial rand when draft mode is disabled on /with-edge/index",
        "app dir - draft mode in edge runtime should use initial rand when draft mode is disabled on /with-edge/with-cookies",
        "app dir - draft mode in nodejs runtime should be disabled from api route handler",
        "app dir - draft mode in nodejs runtime should be enabled from api route handler when draft mode enabled",
        "app dir - draft mode in nodejs runtime should generate rand when draft mode enabled",
        "app dir - draft mode in nodejs runtime should have set-cookie header on enable",
        "app dir - draft mode in nodejs runtime should have set-cookie header with redirect location",
        "app dir - draft mode in nodejs runtime should not generate rand when draft mode disabled during next start",
        "app dir - draft mode in nodejs runtime should not perform full page navigation on router.refresh()",
        "app dir - draft mode in nodejs runtime should not read other cookies when draft mode disabled during next start",
        "app dir - draft mode in nodejs runtime should read other cookies when draft mode enabled",
        "app dir - draft mode in nodejs runtime should use initial rand when draft mode is disabled on /index",
        "app dir - draft mode in nodejs runtime should use initial rand when draft mode is disabled on /with-cookies"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/dynamic-css/index.test.ts": {
      "passed": [
        "app dir - dynamic css should not throw with accessing to ALS in preload css",
        "app dir - dynamic css should only apply corresponding css for page loaded in edge runtime",
        "app dir - dynamic css should only apply corresponding css for page loaded that /another",
        "app dir - dynamic css should only apply corresponding css for page loaded that /ssr",
        "app dir - dynamic css should preload all chunks of dynamic component during SSR"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/dynamic-data/dynamic-data.test.ts": {
      "passed": [
        "dynamic-data inside cache scope error when the build when accessing dynamic data inside a cache scope",
        "dynamic-data should render empty objects for dynamic APIs when rendering with force-static",
        "dynamic-data should render the dynamic apis dynamically when used in a top-level scope",
        "dynamic-data should render the dynamic apis dynamically when used in a top-level scope with force dynamic",
        "dynamic-data should track dynamic apis when rendering app routes",
        "dynamic-data should track searchParams access as dynamic when the Page is a client component",
        "dynamic-data with dynamic = \"error\" error when the build when `dynamic = \"error\"` and dynamic data is read"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/dynamic-href/dynamic-href.test.ts": {
      "passed": [
        "dynamic-href should not error on /object in prod",
        "dynamic-href should not error on /string in prod"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/dynamic-in-generate-params/index.test.ts": {
      "passed": [
        "app-dir - dynamic in generate params should be able to call fetch while generating multiple dynamic pages",
        "app-dir - dynamic in generate params should be able to call while generating multiple dynamic sitemaps"
      ],
      "failed": [
        "app-dir - dynamic in generate params should render sitemap with generateSitemaps in force-dynamic config dynamically"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/dynamic-interception-route-revalidate/dynamic-interception-route-revalidate.test.ts": {
      "passed": [
        "dynamic-interception-route-revalidate should refresh the dynamic intercepted route when the interception route is revalidated"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/dynamic-requests/dynamic-requests.test.ts": {
      "passed": [
        "dynamic-requests should not error for dynamic requests in pages",
        "dynamic-requests should not error for dynamic requests in routes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/dynamic/dynamic.test.ts": {
      "passed": [
        "app dir - next/dynamic no SSR should not render client component imported through ssr: false in client components",
        "app dir - next/dynamic no SSR should support dynamic import with accessing named exports from client component",
        "app dir - next/dynamic should generate correct client manifest for dynamic chunks",
        "app dir - next/dynamic should handle next/dynamic in SSR correctly",
        "app dir - next/dynamic should handle next/dynamic in hydration correctly",
        "app dir - next/dynamic should handle ssr: false in pages when appDir is enabled",
        "app dir - next/dynamic should not render loading by default",
        "app dir - next/dynamic should render loading by default if loading is specified and loader is slow"
      ],
      "failed": [
        "app dir - next/dynamic no SSR should not render client component imported through ssr: false in client components in edge runtime"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ecmascript-features/turbopack/ecmascript-features-turbopack.test.ts": {
      "passed": [
        "ecmascript-features turbopack should work using browser",
        "ecmascript-features turbopack should work using cheerio"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ecmascript-features/webpack/ecmascript-features-webpack.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "ecmascript-features webpack should work using browser",
        "ecmascript-features webpack should work using cheerio"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/edge-route-catchall/edge-route-catchall.test.ts": {
      "passed": [
        "edge-route-catchall should correctly normalize edge route catch-all with a single param",
        "edge-route-catchall should correctly normalize edge route catch-all with multiple params"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/edge-route-rewrite/edge-route-rewrite.test.ts": {
      "passed": [
        "edge-route-rewrite it should support a rewrite to a dynamic edge route",
        "edge-route-rewrite it should support a rewrite to an edge route"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/edge-runtime-node-compatibility/edge-runtime-node-compatibility.test.ts": {
      "passed": [
        "edge runtime node compatibility [app] supports node:buffer",
        "edge runtime node compatibility [pages/api] supports node:buffer"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/emotion-js/index.test.ts": {
      "passed": [
        "app dir - emotion-js should render emotion-js css with compiler.emotion option correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/error-boundary-navigation/index.test.ts": {
      "passed": [
        "app dir - not found navigation should allow navigating to a non-existent page",
        "app dir - not found navigation should allow navigating to a page calling notfound",
        "app dir - not found navigation should allow navigation back to route that was initially not-found",
        "app dir - not found navigation should allow navigation on error",
        "app dir - not found navigation should allow navigation on not-found",
        "app dir - not found navigation should allow navigation to other routes on route that was initially not-found",
        "app dir - not found navigation should be able to navigate to other page from root not-found page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/error-boundary-navigation/override-node-env.test.ts": {
      "passed": [
        "app dir - not found navigation - with overridden node env should allow navigating to a non-existent page",
        "app dir - not found navigation - with overridden node env should allow navigating to a page calling notfound",
        "app dir - not found navigation - with overridden node env should allow navigation back to route that was initially not-found",
        "app dir - not found navigation - with overridden node env should allow navigation on error",
        "app dir - not found navigation - with overridden node env should allow navigation on not-found",
        "app dir - not found navigation - with overridden node env should allow navigation to other routes on route that was initially not-found",
        "app dir - not found navigation - with overridden node env should be able to navigate to other page from root not-found page",
        "app dir - not found navigation should allow navigating to a non-existent page",
        "app dir - not found navigation should allow navigating to a page calling notfound",
        "app dir - not found navigation should allow navigation back to route that was initially not-found",
        "app dir - not found navigation should allow navigation on error",
        "app dir - not found navigation should allow navigation on not-found",
        "app dir - not found navigation should allow navigation to other routes on route that was initially not-found",
        "app dir - not found navigation should be able to navigate to other page from root not-found page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/errors/index.test.ts": {
      "passed": [
        "app-dir - errors error component should allow resetting error boundary",
        "app-dir - errors error component should display error digest for error in server component with default error boundary",
        "app-dir - errors error component should hydrate empty shell to handle server-side rendering errors",
        "app-dir - errors error component should log the original RSC error trace in production",
        "app-dir - errors error component should log the original Server Actions error trace in production",
        "app-dir - errors error component should trigger error component when an error happens during rendering",
        "app-dir - errors error component should trigger error component when an error happens during server components rendering",
        "app-dir - errors error component should use default error boundary for prod and overlay for dev when no error component specified"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/fallback-prefetch/fallback-prefetch.test.ts": {
      "passed": ["fallback-prefetch should prefetch the page without errors"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/front-redirect-issue/front-redirect-issue.test.ts": {
      "passed": ["app dir - front redirect issue should redirect"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/global-error/basic/index.test.ts": {
      "passed": [
        "app dir - global error should catch metadata error in error boundary if presented",
        "app dir - global error should catch metadata error in global-error if no error boundary is presented",
        "app dir - global error should catch the client error thrown in the nested routes",
        "app dir - global error should render global error for error in client components",
        "app dir - global error should render global error for error in server components",
        "app dir - global error should trigger error component when an error happens during rendering"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/global-error/catch-all/index.test.ts": {
      "passed": [
        "app dir - global error - with catch-all route should render 404 page correctly",
        "app dir - global error - with catch-all route should render catch-all route correctly",
        "app dir - global error - with catch-all route should render global error correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/global-error/layout-error/index.test.ts": {
      "passed": [
        "app dir - global error - layout error should render global error for error in server components"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/headers-static-bailout/headers-static-bailout.test.ts": {
      "passed": [
        "headers-static-bailout it provides a helpful link in case static generation bailout is uncaught",
        "headers-static-bailout should bailout when using an import from next/headers",
        "headers-static-bailout should not bailout when not using headers"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/hello-world/hello-world.test.ts": {
      "passed": [
        "hello-world should work using browser",
        "hello-world should work using cheerio",
        "hello-world should work with fetch",
        "hello-world should work with html"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/hooks/hooks.test.ts": {
      "passed": [
        "app dir - hooks from pages should have the correct hooks at /adapter-hooks/1",
        "app dir - hooks from pages should have the correct hooks at /adapter-hooks/1/account",
        "app dir - hooks from pages should have the correct hooks at /adapter-hooks/2",
        "app dir - hooks from pages should have the correct hooks at /adapter-hooks/static",
        "app dir - hooks useDraftMode should generate rand when draft mode enabled",
        "app dir - hooks useDraftMode should use initial rand when draft mode be disabled",
        "app dir - hooks usePathname should have the canonical url pathname on rewrite",
        "app dir - hooks usePathname should have the correct pathname",
        "app dir - hooks useRouter should allow access to the router",
        "app dir - hooks useSearchParams should have the canonical url search params on rewrite",
        "app dir - hooks useSearchParams should have the correct search params",
        "app dir - hooks useSelectedLayoutSegment should have the correct layout segment at /hooks/use-selected-layout-segment/first",
        "app dir - hooks useSelectedLayoutSegment should have the correct layout segment at /hooks/use-selected-layout-segment/first/slug1",
        "app dir - hooks useSelectedLayoutSegment should have the correct layout segment at /hooks/use-selected-layout-segment/first/slug2/second/a/b",
        "app dir - hooks useSelectedLayoutSegment should return null in pages",
        "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/first",
        "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/first/slug1",
        "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/first/slug2/second",
        "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/first/slug2/second/a/b",
        "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/rewritten",
        "app dir - hooks useSelectedLayoutSegments should have the correct layout segments at /hooks/use-selected-layout-segment/rewritten-middleware",
        "app dir - hooks useSelectedLayoutSegments should return an empty array in pages"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/i18n-hybrid/i18n-hybrid.test.js": {
      "passed": [
        "i18n-hybrid does not resolve /en-CA/blog/first-post",
        "i18n-hybrid does not resolve /en-US/blog/first-post",
        "i18n-hybrid does not resolve /fr-CA/blog/first-post",
        "i18n-hybrid does not resolve /fr-FR/blog/first-post",
        "i18n-hybrid does resolve /about",
        "i18n-hybrid does resolve /blog/first-post",
        "i18n-hybrid does resolve /en-CA/about",
        "i18n-hybrid does resolve /en-US/about",
        "i18n-hybrid does resolve /fr-CA/about",
        "i18n-hybrid does resolve /fr-FR/about"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/import/import.test.ts": {
      "passed": [
        "app dir - imports we can import all components from .js",
        "app dir - imports we can import all components from .jsx",
        "app dir - imports we can import all components from .ts",
        "app dir - imports we can import all components from .tsx"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/interception-dynamic-segment-middleware/interception-dynamic-segment-middleware.test.ts": {
      "passed": [
        "interception-dynamic-segment-middleware should work when interception route is paired with a dynamic segment & middleware"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/interception-dynamic-segment/interception-dynamic-segment.test.ts": {
      "passed": [
        "interception-dynamic-segment should work when interception route is paired with a dynamic segment"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/interception-middleware-rewrite/interception-middleware-rewrite.test.ts": {
      "passed": [
        "interception-middleware-rewrite should continue to show the intercepted page when revisiting it",
        "interception-middleware-rewrite should continue to work after using browser back button and following another intercepting route",
        "interception-middleware-rewrite should support intercepting routes with a middleware rewrite"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/interception-route-prefetch-cache/interception-route-prefetch-cache.test.ts": {
      "passed": [
        "interception-route-prefetch-cache runtime = edge should render the correct interception when two distinct layouts share the same path structure",
        "interception-route-prefetch-cache runtime = nodejs should render the correct interception when two distinct layouts share the same path structure"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/interception-routes-root-catchall/interception-routes-root-catchall.test.ts": {
      "passed": [
        "interception-routes-root-catchall should handle non-intercepted catch-all pages",
        "interception-routes-root-catchall should support having a root catch-all and a catch-all in a parallel route group"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/interception-segments-two-levels-above/interception-segments-two-levels-above.test.ts": {
      "passed": [
        "interception-segments-two-levels-above should work when interception route is paired with segments two levels above"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/interoperability-with-pages/navigation.test.ts": {
      "passed": [
        "navigation between pages and app dir It should be able to navigate app -> pages",
        "navigation between pages and app dir It should be able to navigate app -> pages and go back and forward",
        "navigation between pages and app dir It should be able to navigate pages -> app",
        "navigation between pages and app dir It should be able to navigate pages -> app and go back an forward"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/layout-params/layout-params.test.ts": {
      "passed": [
        "app dir - layout params basic params check layout renders just it's params",
        "app dir - layout params basic params check layout without params get no params",
        "app dir - layout params basic params check topmost layout renders all params",
        "app dir - layout params catchall params should give catchall params just to last layout",
        "app dir - layout params catchall params should give empty optional catchall params won't give params to any layout",
        "app dir - layout params catchall params should give optional catchall params just to last layout"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/loader-file-named-export-custom-loader-error/loader-file-named-export-custom-loader-error.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Error test if the loader file export a named function in Build and Start build and start only should show the build error",
        "Error test if the loader file export a named function in Development development only should show the error when using `Image` component",
        "Error test if the loader file export a named function in Development development only should show the error when using `getImageProps` method"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/logging/fetch-logging.test.ts": {
      "passed": [
        "app-dir - logging with default logging should not log fetch requests at all",
        "app-dir - logging with fetches default logging should only log requests in development mode",
        "app-dir - logging with fetches verbose logging should only log requests in development mode",
        "app-dir - logging with verbose logging for edge runtime should only log requests in development mode"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/logging/fetch-warning.test.ts": {
      "passed": [
        "app-dir - fetch warnings should not log fetch warnings in production"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/mdx/mdx.test.ts": {
      "passed": [
        "mdx with-mdx-rs app directory should allow importing client components",
        "mdx with-mdx-rs app directory should allow overriding components",
        "mdx with-mdx-rs app directory should work in initial html",
        "mdx with-mdx-rs app directory should work in initial html with mdx import",
        "mdx with-mdx-rs app directory should work using browser",
        "mdx with-mdx-rs app directory should work using browser with mdx import",
        "mdx with-mdx-rs app directory should work with next/image",
        "mdx with-mdx-rs pages directory should allow overriding components",
        "mdx with-mdx-rs pages directory should work in initial html",
        "mdx with-mdx-rs pages directory should work in initial html with mdx import",
        "mdx with-mdx-rs pages directory should work using browser",
        "mdx with-mdx-rs pages directory should work using browser with mdx import",
        "mdx without-mdx-rs app directory should allow importing client components",
        "mdx without-mdx-rs app directory should allow overriding components",
        "mdx without-mdx-rs app directory should work in initial html",
        "mdx without-mdx-rs app directory should work in initial html with mdx import",
        "mdx without-mdx-rs app directory should work using browser",
        "mdx without-mdx-rs app directory should work using browser with mdx import",
        "mdx without-mdx-rs app directory should work with next/image",
        "mdx without-mdx-rs pages directory should allow overriding components",
        "mdx without-mdx-rs pages directory should work in initial html",
        "mdx without-mdx-rs pages directory should work in initial html with mdx import",
        "mdx without-mdx-rs pages directory should work using browser",
        "mdx without-mdx-rs pages directory should work using browser with mdx import"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-dynamic-routes/index.test.ts": {
      "passed": [
        "app dir - metadata dynamic routes icon image routes should render apple icon with dynamic routes",
        "app dir - metadata dynamic routes icon image routes should render icon with dynamic routes",
        "app dir - metadata dynamic routes robots.txt should handle robots.[ext] dynamic routes",
        "app dir - metadata dynamic routes should generate unique path for image routes under group routes",
        "app dir - metadata dynamic routes should inject dynamic metadata properly to head",
        "app dir - metadata dynamic routes should pick configured metadataBase instead of deployment url for canonical url",
        "app dir - metadata dynamic routes should statically optimized single image route",
        "app dir - metadata dynamic routes should support edge runtime of image routes",
        "app dir - metadata dynamic routes should use localhost for local prod and fallback to deployment url when metadataBase is falsy",
        "app dir - metadata dynamic routes sitemap should generate static paths of dynamic sitemap in production",
        "app dir - metadata dynamic routes sitemap should handle sitemap.[ext] dynamic routes",
        "app dir - metadata dynamic routes sitemap should not throw if client components are imported but not used in sitemap",
        "app dir - metadata dynamic routes sitemap should optimize routes without multiple generation API as static routes",
        "app dir - metadata dynamic routes sitemap should support alternate.languages in sitemap",
        "app dir - metadata dynamic routes sitemap should support images in sitemap",
        "app dir - metadata dynamic routes sitemap should support videos in sitemap",
        "app dir - metadata dynamic routes sitemap should support generate multi sitemaps with generateSitemaps",
        "app dir - metadata dynamic routes sitemap should support images in sitemap",
        "app dir - metadata dynamic routes social image routes should fill params into dynamic routes url of metadata images",
        "app dir - metadata dynamic routes social image routes should fill params into routes groups url of static images",
        "app dir - metadata dynamic routes social image routes should handle custom fonts in both edge and nodejs runtime",
        "app dir - metadata dynamic routes social image routes should handle manifest.[ext] dynamic routes",
        "app dir - metadata dynamic routes social image routes should render og image with opengraph-image dynamic routes",
        "app dir - metadata dynamic routes social image routes should render og image with twitter-image dynamic routes",
        "app dir - metadata dynamic routes social image routes should support generate multi images with generateImageMetadata",
        "app dir - metadata dynamic routes social image routes should support params as argument in dynamic routes"
      ],
      "failed": [
        "app dir - metadata dynamic routes route segment config should generate dynamic route if dynamic config is force-dynamic",
        "app dir - metadata dynamic routes should include default og font files in file trace"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-edge/index.test.ts": {
      "passed": [
        "app dir - Metadata API on the Edge runtime should render OpenGraph image meta tag correctly"
      ],
      "failed": [
        "app dir - Metadata API on the Edge runtime OG image route should not bundle `ImageResponse` into the page worker"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-icons-parallel-routes/metadata-icons-parallel-routes.test.ts": {
      "passed": [
        "app-dir - metadata-icons-parallel-routes should inherit parent apple icon when child does not present but parent contain static apple icon",
        "app-dir - metadata-icons-parallel-routes should override parent icon when both static icon presented",
        "app-dir - metadata-icons-parallel-routes should present favicon with other icons when parallel routes are presented"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-icons/metadata-icons.test.ts": {
      "passed": [
        "app-dir - metadata-icons should only have 1 favicon link in nested page",
        "app-dir - metadata-icons should only have 1 favicon link in root page",
        "app-dir - metadata-icons should render custom icons along with favicon in nested page",
        "app-dir - metadata-icons should render custom icons along with favicon in root page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-json-manifest/index.test.ts": {
      "passed": [
        "app-dir metadata-json-manifest should support metadata.json manifest"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-navigation/metadata-navigation.test.ts": {
      "passed": [
        "app dir - metadata navigation navigation should render root not-found with default metadata",
        "app dir - metadata navigation navigation should support notFound in generateMetadata",
        "app dir - metadata navigation navigation should support redirect in generateMetadata"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-suspense/index.test.ts": {
      "passed": [
        "app dir - metadata dynamic routes suspense should render metadata in head even root layout is wrapped with Suspense"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-thrown/metadata-thrown.test.ts": {
      "passed": [
        "app dir - metadata thrown should not crash from error thrown during preloading nested generateMetadata"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-warnings/index.test.ts": {
      "passed": [
        "app dir - metadata missing metadataBase should not warn for viewport properties during manually merging metadata",
        "app dir - metadata missing metadataBase should show warning in vercel deployment output in default build output mode",
        "app dir - metadata missing metadataBase should warn for unsupported metadata properties"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata-warnings/standalone.test.ts": {
      "passed": [
        "app dir - metadata missing metadataBase should fallback to localhost if metadataBase is missing for absolute urls resolving",
        "app dir - metadata missing metadataBase should not warn for viewport properties during manually merging metadata",
        "app dir - metadata missing metadataBase should warn for unsupported metadata properties"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/metadata/metadata.test.ts": {
      "passed": [
        "app dir - metadata basic should apply metadata when navigating client-side",
        "app dir - metadata basic should handle metadataBase for urls resolved as only URL type",
        "app dir - metadata basic should not contain query in canonical url after client navigation",
        "app dir - metadata basic should relative canonical url",
        "app dir - metadata basic should support alternate tags",
        "app dir - metadata basic should support appLinks tags",
        "app dir - metadata basic should support apple related tags `itunes` and `appWebApp`",
        "app dir - metadata basic should support facebook related tags",
        "app dir - metadata basic should support generateMetadata dynamic props",
        "app dir - metadata basic should support other basic tags",
        "app dir - metadata basic should support other basic tags (edge)",
        "app dir - metadata basic should support robots tags",
        "app dir - metadata basic should support stashed title in one layer of page and layout",
        "app dir - metadata basic should support stashed title in two layers of page and layout",
        "app dir - metadata basic should support title and description",
        "app dir - metadata basic should support title template",
        "app dir - metadata basic should support verification tags",
        "app dir - metadata basic should use parent layout title when no title is defined in page",
        "app dir - metadata file based icons should not render if image file is not specified",
        "app dir - metadata file based icons should render icon and apple touch icon meta if their images are specified",
        "app dir - metadata icons should merge icons from layout if no static icons files are specified",
        "app dir - metadata icons should not hoist meta[itemProp] to head",
        "app dir - metadata icons should support basic complex descriptor icons field",
        "app dir - metadata icons should support basic object icons field",
        "app dir - metadata icons should support basic string icons field",
        "app dir - metadata icons should support root level of favicon.ico",
        "app dir - metadata opengraph should override file based images when opengraph-image and twitter-image specify images property",
        "app dir - metadata opengraph should pick up opengraph-image and twitter-image as static metadata files",
        "app dir - metadata opengraph should support opengraph tags",
        "app dir - metadata opengraph should support opengraph with article type",
        "app dir - metadata react cache should have same title and page value on initial load",
        "app dir - metadata react cache should have same title and page value when navigating",
        "app dir - metadata should not effect metadata images convention like files under pages directory",
        "app dir - metadata static optimization should build static files into static route",
        "app dir - metadata static routes should build favicon.ico as a custom route",
        "app dir - metadata static routes should have /favicon.ico as route",
        "app dir - metadata static routes should have icons as route",
        "app dir - metadata static routes should support root dir robots.txt",
        "app dir - metadata static routes should support sitemap.xml under every routes",
        "app dir - metadata static routes should support static manifest.webmanifest",
        "app dir - metadata twitter should render twitter card summary when image is not present",
        "app dir - metadata twitter should support default twitter app card",
        "app dir - metadata twitter should support default twitter player card",
        "app dir - metadata twitter should support twitter card summary_large_image when image present",
        "app dir - metadata viewport should support dynamic viewport export"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/middleware-sitemap/matcher-exclude-sitemap/index.test.ts": {
      "passed": [
        "middleware-sitemap should not be affected by middleware if sitemap.xml is excluded from the matcher"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/middleware-sitemap/no-matcher/index.test.ts": {
      "passed": [
        "middleware-sitemap should be affected by middleware for sitemap.xml if there is no matcher"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/missing-suspense-with-csr-bailout/missing-suspense-with-csr-bailout.test.ts": {
      "passed": [
        "missing-suspense-with-csr-bailout next/dynamic does not emit errors related to bailing out of client side rendering",
        "missing-suspense-with-csr-bailout useSearchParams should pass build if useSearchParams is wrapped in a suspense boundary"
      ],
      "failed": [
        "missing-suspense-with-csr-bailout useSearchParams should fail build if useSearchParams is not wrapped in a suspense boundary"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/mjs-as-extension/mjs-as-extension.test.ts": {
      "passed": ["mjs as extension should render the page correctly"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/modularizeimports/modularizeimports.test.ts": {
      "passed": [
        "modularizeImports should work",
        "modularizeImports should work with MDX"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/navigation-redirect-import/navigation-redirect-import.test.ts": {
      "passed": ["navigation-redirect-import should work using fetch"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/navigation/navigation.test.ts": {
      "passed": [
        "app dir - navigation SEO should contain default meta tags in error page",
        "app dir - navigation SEO should emit noindex meta tag for not found page when streaming",
        "app dir - navigation SEO should emit refresh meta tag (permanent) for redirect page when streaming",
        "app dir - navigation SEO should emit refresh meta tag for redirect page when streaming",
        "app dir - navigation SEO should not log 404 errors in ipc server",
        "app dir - navigation bots should block rendering for bots and return 404 status",
        "app dir - navigation browser back to a revalidated page should load the page",
        "app dir - navigation external push should push external url without affecting hooks",
        "app dir - navigation hash should not scroll to hash when scroll={false} is set",
        "app dir - navigation hash should scroll to the specified hash",
        "app dir - navigation hash-link-back-to-same-page should scroll to the specified hash",
        "app dir - navigation hash-with-scroll-offset should scroll to the specified hash",
        "app dir - navigation middleware redirect should change browser location when router.refresh() gets a redirect response",
        "app dir - navigation navigating to a page with async metadata should render the final state of the page with correct metadata",
        "app dir - navigation navigating to dynamic params & changing the casing should load the page correctly",
        "app dir - navigation navigation between pages and app should not contain _rsc query while navigating from app to pages",
        "app dir - navigation navigation between pages and app should not contain _rsc query while navigating from pages to app",
        "app dir - navigation navigation between pages and app should not continously initiate a mpa navigation to the same URL when router state changes",
        "app dir - navigation navigation between pages and app should not omit the hash while navigating from app to pages",
        "app dir - navigation navigations when attaching a Proxy to `window.Promise` should navigate without issue",
        "app dir - navigation nested navigation should load chunks correctly without double encoding of url",
        "app dir - navigation nested navigation should navigate to nested pages",
        "app dir - navigation not-found should trigger not-found client-side",
        "app dir - navigation not-found should trigger not-found in a client component",
        "app dir - navigation not-found should trigger not-found in a server component",
        "app dir - navigation not-found should trigger not-found while streaming",
        "app dir - navigation query string should handle unicode search params",
        "app dir - navigation query string should not reset shallow url updates on prefetch",
        "app dir - navigation query string should set query correctly",
        "app dir - navigation query string should set query with semicolon correctly",
        "app dir - navigation query string useParams identity between renders should be stable in app",
        "app dir - navigation query string useParams identity between renders should be stable in pages",
        "app dir - navigation redirect components should only trigger the redirect once (/redirect/servercomponent)",
        "app dir - navigation redirect components should only trigger the redirect once (redirect/redirect-with-loading)",
        "app dir - navigation redirect components should redirect client-side",
        "app dir - navigation redirect components should redirect in a client component",
        "app dir - navigation redirect components should redirect in a server component",
        "app dir - navigation redirect components should redirect to external url",
        "app dir - navigation redirect components should redirect to external url, initiating only once",
        "app dir - navigation redirect middleware redirects should redirect from middleware",
        "app dir - navigation redirect middleware redirects should redirect from middleware with link navigation",
        "app dir - navigation redirect next.config.js redirects should redirect from next.config.js",
        "app dir - navigation redirect next.config.js redirects should redirect from next.config.js with link navigation",
        "app dir - navigation redirect status code should respond with 307 status code in client component",
        "app dir - navigation redirect status code should respond with 307 status code in server component",
        "app dir - navigation redirect status code should respond with 308 status code if permanent flag is set",
        "app dir - navigation relative hashes and queries should work with a hash-only `router.push(...)`",
        "app dir - navigation relative hashes and queries should work with a hash-only href",
        "app dir - navigation relative hashes and queries should work with a query-only href",
        "app dir - navigation relative hashes and queries should work with both relative hashes and queries",
        "app dir - navigation scroll restoration should restore original scroll position when navigating back"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-after-app/index.test.ts": {
      "passed": [
        "after() in edge runtime does not allow modifying cookies in a callback",
        "after() in edge runtime interrupted RSC renders runs callbacks if a user error was thrown in the RSC render",
        "after() in edge runtime interrupted RSC renders runs callbacks if notFound() was called",
        "after() in edge runtime interrupted RSC renders runs callbacks if redirect() was called",
        "after() in edge runtime only runs callbacks after the response is fully sent",
        "after() in edge runtime runs callbacks from nested after calls",
        "after() in edge runtime runs in dynamic pages",
        "after() in edge runtime runs in dynamic route handlers",
        "after() in edge runtime runs in generateMetadata()",
        "after() in edge runtime runs in middleware",
        "after() in edge runtime runs in server actions",
        "after() in edge runtime uses waitUntil from request context if available",
        "after() in nodejs runtime does not allow modifying cookies in a callback",
        "after() in nodejs runtime interrupted RSC renders runs callbacks if a user error was thrown in the RSC render",
        "after() in nodejs runtime interrupted RSC renders runs callbacks if notFound() was called",
        "after() in nodejs runtime interrupted RSC renders runs callbacks if redirect() was called",
        "after() in nodejs runtime only runs callbacks after the response is fully sent",
        "after() in nodejs runtime runs callbacks from nested after calls",
        "after() in nodejs runtime runs in dynamic pages",
        "after() in nodejs runtime runs in dynamic route handlers",
        "after() in nodejs runtime runs in generateMetadata()",
        "after() in nodejs runtime runs in middleware",
        "after() in nodejs runtime runs in server actions",
        "after() in nodejs runtime uses waitUntil from request context if available"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-after-pages/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "after() - pages invalid usages errors at compile time when used in pages dir errors when used in getServerSideProps",
        "after() - pages invalid usages errors at compile time when used in pages dir errors when used in getStaticProps",
        "after() - pages invalid usages errors at compile time when used in pages dir errors when used in within a page component",
        "after() - pages runs in middleware"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/config-as-async-function/index.test.ts": {
      "passed": [
        "next-config-ts-config-as-async-function should support config as async function"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/export-as-default/index.test.ts": {
      "passed": [
        "next-config-ts-export-as-default should support export { x as default }"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/export-default/index.test.ts": {
      "passed": [
        "next-config-ts-export-default should support export default { ... }"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/import-alias/index.test.ts": {
      "passed": ["next-config-ts-import-alias should support import alias"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/import-from-node-modules/index.test.ts": {
      "passed": [
        "next-config-ts-import-from-node-modules should import from node_modules"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/import-json/index.test.ts": {
      "passed": ["next-config-ts-import-json should support import json"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/nested-imports/index.test.ts": {
      "passed": ["next-config-ts-nested-imports should handle nested imports"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/node-api/index.test.ts": {
      "passed": ["next-config-ts-node-api should be able to use Node.js API"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/pkg-commonjs/index.test.ts": {
      "passed": [
        "next-config-ts-pkg-commonjs should handle ESM modules in CommonJS project"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/pkg-module/index.test.ts": {
      "passed": [
        "next-config-ts-pkg-module should handle ESM modules in CommonJS project"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config-ts/type-error/index.test.ts": {
      "passed": [
        "next-config-ts-type-error should throw with type error on build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-config/index.test.ts": {
      "passed": [
        "app dir - next config should support importing webpack in next.config"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-dynamic-css/next-dynamic-css.test.ts": {
      "passed": [
        "next-dynamic-css should have correct order of global styles between layout and pages",
        "next-dynamic-css should have correct order of styles between global and css modules",
        "next-dynamic-css should have correct order of styles on next/dynamic loaded component"
      ],
      "failed": [
        "next-dynamic-css should have correct order of styles on client component that is sharing styles with next/dynamic"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-font/next-font.test.ts": {
      "passed": [
        "app dir - next/font app dir - next-font computed styles should have correct styles at /",
        "app dir - next/font app dir - next-font computed styles should have correct styles at /client",
        "app dir - next/font app dir - next-font import values should have correct values at /",
        "app dir - next/font app dir - next-font import values should have correct values at /client",
        "app dir - next/font app dir - next-font import values should transform code in node_modules",
        "app dir - next/font app dir - next-font navigation should not have duplicate preload tags on navigation",
        "app dir - next/font app dir - next-font preconnect should add preconnect when preloading is disabled in component",
        "app dir - next/font app dir - next-font preconnect should add preconnect when preloading is disabled in layout",
        "app dir - next/font app dir - next-font preconnect should add preconnect when preloading is disabled in page",
        "app dir - next/font app dir - next-font preconnect should not preconnect when css is used but no fonts",
        "app dir - next/font app dir - next-font preload should preload correctly with client components",
        "app dir - next/font app dir - next-font preload should preload correctly with layout using fonts",
        "app dir - next/font app dir - next-font preload should preload correctly with page using fonts",
        "app dir - next/font app dir - next-font preload should preload correctly with server components"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-form/basepath/next-form-basepath.test.ts": {
      "passed": [
        "app dir - form - with basepath should add basePath to `action`",
        "app dir - form - with basepath should not add basePath to a submitter's formAction"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-form/default/next-form.test.ts": {
      "passed": [
        "app dir - form does not navigate if preventDefault is called in onSubmit",
        "app dir - form does not push a new history entry if `replace` is passed",
        "app dir - form functions passed to action runs client action",
        "app dir - form functions passed to action runs server action",
        "app dir - form functions passed to action runs server action (closure)",
        "app dir - form functions passed to formAction runs client action from submitter and doesn't warn about unsupported attributes",
        "app dir - form functions passed to formAction runs server action (closure) from submitter and doesn't warn about unsupported attributes",
        "app dir - form functions passed to formAction runs server action from submitter and doesn't warn about unsupported attributes",
        "app dir - form should soft-navigate on submit and show the prefetched loading state",
        "app dir - form should soft-navigate to the formAction url of the submitter",
        "app dir - form unsupported attributes on submitter should warn if submitter sets \"formEncType\" to an unsupported value and fall back to default submit behavior",
        "app dir - form unsupported attributes on submitter should warn if submitter sets \"formMethod\" to an unsupported value and fall back to default submit behavior",
        "app dir - form unsupported attributes on submitter should warn if submitter sets \"formTarget\" to an unsupported value and fall back to default submit behavior",
        "app dir - form url-encodes file inputs, but warns about them"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-image/next-image-https.test.ts": {
      "passed": [
        "app dir - next-image (with https) only runs on CI as it requires administrator privileges"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-image/next-image-proxy.test.ts": {
      "passed": [
        "next-image-proxy loads images without any errors",
        "next-image-proxy should work with connection upgrade by removing it via filterReqHeaders()"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-image/next-image.test.ts": {
      "passed": [
        "app dir - next-image browser content should render images nested under page dir on /nested route",
        "app dir - next-image browser content should render images on / route",
        "app dir - next-image image content should render images nested under page dir on /nested route",
        "app dir - next-image image content should render images on / route",
        "app dir - next-image image content should render images on /client route",
        "app dir - next-image image content should render legacy images in edge runtime on /legacy-edge-runtime route",
        "app dir - next-image image content should render legacy images under /legacy route",
        "app dir - next-image ssr content should render images nested under page dir on /nested route",
        "app dir - next-image ssr content should render images on / route",
        "app dir - next-image ssr content should render images on /client route"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/next-script/next-script.test.ts": {
      "passed": [
        "Script component with crossOrigin props should be set crossOrigin also in preload link tag"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/not-found-default/index.test.ts": {
      "passed": [
        "app dir - not found with default 404 page should be able to navigate to page calling not-found",
        "app dir - not found with default 404 page should be able to navigate to page with calling not-found in metadata",
        "app dir - not found with default 404 page should error on client notFound from root layout in browser",
        "app dir - not found with default 404 page should error on server notFound from root layout on server-side",
        "app dir - not found with default 404 page should render default 404 with root layout for non-existent page",
        "app dir - not found with default 404 page should render default not found for group routes if not found is not defined",
        "app dir - not found with default 404 page should return 404 status code for default not-found page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/not-found/basic/index.test.ts": {
      "passed": [
        "app dir - not-found - basic should not output /404 in tree view logs",
        "app dir - not-found - basic should propagate notFound errors past a segment's error boundary",
        "app dir - not-found - basic should return 404 status code for custom not-found page",
        "app dir - not-found - basic should use root not-found content for 404 html",
        "app dir - not-found - basic with default runtime should create the 404 mapping and copy the file to pages",
        "app dir - not-found - basic with default runtime should escalate notFound to parent layout if no not-found boundary present in current layer",
        "app dir - not-found - basic with default runtime should match dynamic route not-found boundary correctly",
        "app dir - not-found - basic with default runtime should use the not-found page for non-matching routes",
        "app dir - not-found - basic with runtime = edge should escalate notFound to parent layout if no not-found boundary present in current layer",
        "app dir - not-found - basic with runtime = edge should match dynamic route not-found boundary correctly",
        "app dir - not-found - basic with runtime = edge should use the not-found page for non-matching routes",
        "app dir - not-found - basic should include not found client reference manifest in the file trace"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/not-found/conflict-route/index.test.ts": {
      "passed": [
        "app dir - not-found - conflict route with default runtime should allow to have a valid /not-found route",
        "app dir - not-found - conflict route with default runtime should use the not-found page for non-matching routes",
        "app dir - not-found - conflict route with runtime = edge should allow to have a valid /not-found route",
        "app dir - not-found - conflict route with runtime = edge should use the not-found page for non-matching routes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/not-found/css-precedence/index.test.ts": {
      "passed": [
        "not-found app dir css should load css while navigation between not-found and page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/not-found/default/default.test.ts": {
      "passed": [
        "app dir - not-found - default should contain noindex contain in the page",
        "app dir - not-found - default should has noindex in the head html"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/not-found/group-route-root-not-found/index.test.ts": {
      "passed": [
        "app dir - group routes with root not-found should render default 404 with root layout for non-existent page",
        "app dir - group routes with root not-found should render root not found for group routes if hit 404"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/not-found/group-route/index.test.ts": {
      "passed": [
        "app dir - not-found - group route with default runtime should use the not-found page under group routes",
        "app dir - not-found - group route with runtime = edge should use the not-found page under group routes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/options-request/options-request.test.ts": {
      "passed": [
        "options-request should 404 for an OPTIONS request to a non-existent route",
        "options-request should respond with a 200 + response body when invoking a pages API route with an OPTIONS request",
        "options-request should respond with a 204 No Content when invoking an app route handler with an OPTIONS request",
        "options-request should return a 400 status code when invoking /app-page with an OPTIONS request",
        "options-request should return a 400 status code when invoking /pages-page with an OPTIONS request"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/pages-to-app-routing/pages-to-app-routing.test.ts": {
      "passed": ["pages-to-app-routing should work using browser"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-route-not-found-params/parallel-route-not-found-params.test.ts": {
      "passed": [
        "parallel-route-not-found should behave correctly without any errors",
        "parallel-route-not-found should handle the not found case correctly without any errors"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-route-not-found/parallel-route-not-found.test.ts": {
      "passed": [
        "parallel-route-not-found should handle `notFound()` in a slot",
        "parallel-route-not-found should handle `notFound()` in generateMetadata on a page that also renders a parallel route",
        "parallel-route-not-found should handle a layout that attempts to render a missing parallel route",
        "parallel-route-not-found should handle multiple missing parallel routes",
        "parallel-route-not-found should render the page & slots if all parallel routes are found"
      ],
      "failed": [],
      "pending": [
        "parallel-route-not-found should handle `notFound()` in a slot with no `children` slot"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-and-interception-basepath/parallel-routes-and-interception-basepath.test.ts": {
      "passed": [
        "parallel-routes-and-interception-basepath should show normal route via direct link with basepath when parallel intercepted slot exist",
        "parallel-routes-and-interception-basepath should show parallel intercepted slot with basepath"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-and-interception/parallel-routes-and-interception.test.ts": {
      "passed": [
        "parallel-routes-and-interception parallel routes should apply the catch-all route to the parallel route if no matching route is found",
        "parallel-routes-and-interception parallel routes should display all parallel route params with useParams",
        "parallel-routes-and-interception parallel routes should handle a loading state",
        "parallel-routes-and-interception parallel routes should load CSS for a default page that exports another page",
        "parallel-routes-and-interception parallel routes should match parallel routes",
        "parallel-routes-and-interception parallel routes should match parallel routes in route groups",
        "parallel-routes-and-interception parallel routes should match the catch-all routes of the more specific path, if there is more than one catch-all route",
        "parallel-routes-and-interception parallel routes should navigate with a link with prefetch=false",
        "parallel-routes-and-interception parallel routes should only scroll to the parallel route that was navigated to",
        "parallel-routes-and-interception parallel routes should render nested parallel routes",
        "parallel-routes-and-interception parallel routes should support layout files in parallel routes",
        "parallel-routes-and-interception parallel routes should support parallel route tab bars",
        "parallel-routes-and-interception parallel routes should throw a 404 when no matching parallel route is found",
        "parallel-routes-and-interception route intercepting should intercept on routes that contain hyphenated/special dynamic params",
        "parallel-routes-and-interception route intercepting should not have /default paths in the prerender manifest",
        "parallel-routes-and-interception route intercepting should re-render the layout on the server when it had a default child route",
        "parallel-routes-and-interception route intercepting should render an intercepted route at the top level from a nested path",
        "parallel-routes-and-interception route intercepting should render an intercepted route from a slot",
        "parallel-routes-and-interception route intercepting should render intercepted route",
        "parallel-routes-and-interception route intercepting should render intercepted route from a nested route",
        "parallel-routes-and-interception route intercepting should render modal when paired with parallel routes",
        "parallel-routes-and-interception route intercepting should support intercepting local dynamic sibling routes",
        "parallel-routes-and-interception route intercepting should support intercepting with beforeFiles rewrites",
        "parallel-routes-and-interception route intercepting with dynamic catch-all routes should render intercepted route",
        "parallel-routes-and-interception route intercepting with dynamic optional catch-all routes should render intercepted route",
        "parallel-routes-and-interception route intercepting with dynamic routes should render intercepted route",
        "parallel-routes-and-interception-conflicting-pages should gracefully handle when two page segments match the `children` parallel slot"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-breadcrumbs/parallel-routes-breadcrumbs.test.ts": {
      "passed": [
        "parallel-routes-breadcrumbs should provide an unmatched catch-all route with params",
        "parallel-routes-breadcrumbs should render the breadcrumbs correctly with catchall route segments",
        "parallel-routes-breadcrumbs should render the breadcrumbs correctly with optional catchall route segments",
        "parallel-routes-breadcrumbs should render the breadcrumbs correctly with the non-dynamic route segments"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-catchall-children-slot/parallel-routes-catchall-children-slot.test.ts": {
      "passed": [
        "parallel-routes-catchall-children-slot should match the @children slot for a page before attempting to match the catchall"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-catchall-default/parallel-routes-catchall-default.test.ts": {
      "passed": [
        "parallel-routes-catchall-default should match default paths before catch-all"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-catchall-dynamic-segment/parallel-routes-catchall-dynamic-segment.test.ts": {
      "passed": [
        "parallel-routes-catchall-dynamic-segment should match default and dynamic segment paths before catch-all"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-catchall-groups/parallel-routes-catchall-groups.test.ts": {
      "passed": [
        "parallel-routes-catchall-groups should work without throwing any errors about conflicting paths"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-catchall-slotted-non-catchalls/parallel-routes-catchall-slotted-non-catchalls.test.ts": {
      "passed": [
        "parallel-routes-catchall-slotted-non-catchalls should match default and dynamic segment paths before catch-all"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-catchall-specificity/parallel-routes-catchall-specificity.test.ts": {
      "passed": [
        "parallel-routes-catchall-specificity should match the catch-all route when navigating from a page with a similar path depth as the previously matched slot"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-catchall/parallel-routes-catchall.test.ts": {
      "passed": [
        "parallel-routes-catchall should match both the catch-all page & slot",
        "parallel-routes-catchall should match correctly when defining an explicit page & slot",
        "parallel-routes-catchall should match correctly when defining an explicit page but no slot",
        "parallel-routes-catchall should match correctly when defining an explicit slot but no page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-css/parallel-routes-css.test.ts": {
      "passed": [],
      "failed": [
        "parallel-routes-catchall-css should properly load the Head content from multiple leaf segments"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-generate-static-params/parallel-routes-generate-static-params.test.ts": {
      "passed": [
        "parallel-routes-generate-static-params should render the intercepted/non-intercepted modal"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-layouts/parallel-routes-layouts.test.ts": {
      "passed": [
        "parallel-routes-layouts should properly render layouts for multiple slots"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-not-found/parallel-routes-not-found.test.ts": {
      "passed": [
        "parallel-routes-and-interception should not render the @children slot when the @slot is not found"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-revalidation/parallel-routes-revalidation.test.ts": {
      "passed": [
        "parallel-routes-revalidation router.refresh (dynamic) - searchParams: false should correctly refresh data for previously intercepted modal and active page slot",
        "parallel-routes-revalidation router.refresh (dynamic) - searchParams: false should correctly refresh data for the intercepted route and previously active page slot",
        "parallel-routes-revalidation router.refresh (dynamic) - searchParams: true should correctly refresh data for previously intercepted modal and active page slot",
        "parallel-routes-revalidation router.refresh (dynamic) - searchParams: true should correctly refresh data for the intercepted route and previously active page slot",
        "parallel-routes-revalidation router.refresh (regular) - searchParams: false should correctly refresh data for previously intercepted modal and active page slot",
        "parallel-routes-revalidation router.refresh (regular) - searchParams: false should correctly refresh data for the intercepted route and previously active page slot",
        "parallel-routes-revalidation router.refresh (regular) - searchParams: true should correctly refresh data for previously intercepted modal and active page slot",
        "parallel-routes-revalidation router.refresh (regular) - searchParams: true should correctly refresh data for the intercepted route and previously active page slot",
        "parallel-routes-revalidation server action revalidation handles refreshing when multiple parallel slots are active",
        "parallel-routes-revalidation server action revalidation should not trigger a refresh for the page that is being redirected to",
        "parallel-routes-revalidation should handle a redirect action when called in a slot",
        "parallel-routes-revalidation should handle router.refresh() when called in a slot",
        "parallel-routes-revalidation should not trigger full page when calling router.refresh() on an intercepted route",
        "parallel-routes-revalidation should not trigger interception when calling router.refresh() on an intercepted route (/catchall/foobar)",
        "parallel-routes-revalidation should not trigger interception when calling router.refresh() on an intercepted route (/detail-page)",
        "parallel-routes-revalidation should not trigger interception when calling router.refresh() on an intercepted route (/dynamic/foobar)",
        "parallel-routes-revalidation should not trigger the intercepted route when lazy-fetching missing data",
        "parallel-routes-revalidation should refresh the correct page when a server action triggers a redirect",
        "parallel-routes-revalidation should submit the action and revalidate the page data"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-root-slot/parallel-routes-root-slot.test.ts": {
      "passed": [
        "parallel-routes-root-slot Should render the root parallel route"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/parallel-routes-use-selected-layout-segment/parallel-routes-use-selected-layout-segment.test.ts": {
      "passed": [
        "parallel-routes-use-selected-layout-segment hard nav to parallel route",
        "parallel-routes-use-selected-layout-segment hard nav to router page and soft nav around other router pages",
        "parallel-routes-use-selected-layout-segment hard nav to router page and soft nav to parallel route and soft nav back to another router page",
        "parallel-routes-use-selected-layout-segment hard nav to router page and soft nav to parallel routes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/params-hooks-compat/index.test.ts": {
      "passed": [
        "app-dir - params hooks compat should only access path params with useParams",
        "app-dir - params hooks compat should only access search params with useSearchParams"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-errors/ppr-errors.test.ts": {
      "passed": [
        "ppr build errors production mode outside of a suspense boundary should fail the build for uncaught errors",
        "ppr build errors production mode when a postpone call is caught and logged it should should include a message telling why",
        "ppr build errors production mode within a suspense boundary should fail the build for uncaught prerender errors"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-full/ppr-full.test.ts": {
      "passed": [
        "ppr-full Dynamic Data pages Incidental postpones should initially render with optimistic UI",
        "ppr-full Dynamic Data pages Incidental postpones should render entirely dynamically when force-dynamic",
        "ppr-full Dynamic Data pages Incidental postpones should render entirely statically with force-static",
        "ppr-full Dynamic Data pages Optimistic UI should initially render with optimistic UI",
        "ppr-full Dynamic Data pages Optimistic UI should render entirely dynamically when force-dynamic",
        "ppr-full Dynamic Data pages Optimistic UI should render entirely statically with force-static",
        "ppr-full Dynamic RSC Response for / should contain dynamic content",
        "ppr-full Dynamic RSC Response for / should have correct headers",
        "ppr-full Dynamic RSC Response for /dynamic/force-dynamic should contain dynamic content",
        "ppr-full Dynamic RSC Response for /dynamic/force-dynamic should have correct headers",
        "ppr-full Dynamic RSC Response for /dynamic/force-dynamic/nested/a should contain dynamic content",
        "ppr-full Dynamic RSC Response for /dynamic/force-dynamic/nested/a should have correct headers",
        "ppr-full Dynamic RSC Response for /dynamic/force-dynamic/nested/b should contain dynamic content",
        "ppr-full Dynamic RSC Response for /dynamic/force-dynamic/nested/b should have correct headers",
        "ppr-full Dynamic RSC Response for /dynamic/force-dynamic/nested/c should contain dynamic content",
        "ppr-full Dynamic RSC Response for /dynamic/force-dynamic/nested/c should have correct headers",
        "ppr-full Dynamic RSC Response for /dynamic/force-static should have correct headers",
        "ppr-full Dynamic RSC Response for /dynamic/force-static should not contain dynamic content",
        "ppr-full Dynamic RSC Response for /loading/a should contain dynamic content",
        "ppr-full Dynamic RSC Response for /loading/a should have correct headers",
        "ppr-full Dynamic RSC Response for /loading/b should contain dynamic content",
        "ppr-full Dynamic RSC Response for /loading/b should have correct headers",
        "ppr-full Dynamic RSC Response for /loading/c should contain dynamic content",
        "ppr-full Dynamic RSC Response for /loading/c should have correct headers",
        "ppr-full Dynamic RSC Response for /metadata should contain dynamic content",
        "ppr-full Dynamic RSC Response for /metadata should have correct headers",
        "ppr-full Dynamic RSC Response for /nested/a should contain dynamic content",
        "ppr-full Dynamic RSC Response for /nested/a should have correct headers",
        "ppr-full Dynamic RSC Response for /nested/b should contain dynamic content",
        "ppr-full Dynamic RSC Response for /nested/b should have correct headers",
        "ppr-full Dynamic RSC Response for /nested/c should contain dynamic content",
        "ppr-full Dynamic RSC Response for /nested/c should have correct headers",
        "ppr-full Dynamic RSC Response for /no-suspense should contain dynamic content",
        "ppr-full Dynamic RSC Response for /no-suspense should have correct headers",
        "ppr-full Dynamic RSC Response for /no-suspense/nested/a should contain dynamic content",
        "ppr-full Dynamic RSC Response for /no-suspense/nested/a should have correct headers",
        "ppr-full Dynamic RSC Response for /no-suspense/nested/b should contain dynamic content",
        "ppr-full Dynamic RSC Response for /no-suspense/nested/b should have correct headers",
        "ppr-full Dynamic RSC Response for /no-suspense/nested/c should contain dynamic content",
        "ppr-full Dynamic RSC Response for /no-suspense/nested/c should have correct headers",
        "ppr-full Dynamic RSC Response for /on-demand/a should contain dynamic content",
        "ppr-full Dynamic RSC Response for /on-demand/a should have correct headers",
        "ppr-full Dynamic RSC Response for /on-demand/b should contain dynamic content",
        "ppr-full Dynamic RSC Response for /on-demand/b should have correct headers",
        "ppr-full Dynamic RSC Response for /on-demand/c should contain dynamic content",
        "ppr-full Dynamic RSC Response for /on-demand/c should have correct headers",
        "ppr-full Dynamic RSC Response for /static should have correct headers",
        "ppr-full Dynamic RSC Response for /static should not contain dynamic content",
        "ppr-full HTML Response for / should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for / should cache the static part",
        "ppr-full HTML Response for / should have correct headers",
        "ppr-full HTML Response for / should resume with dynamic content",
        "ppr-full HTML Response for /dynamic/force-dynamic should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /dynamic/force-dynamic should have correct headers",
        "ppr-full HTML Response for /dynamic/force-dynamic should resume with dynamic content",
        "ppr-full HTML Response for /dynamic/force-dynamic/nested/a should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /dynamic/force-dynamic/nested/a should have correct headers",
        "ppr-full HTML Response for /dynamic/force-dynamic/nested/a should resume with dynamic content",
        "ppr-full HTML Response for /dynamic/force-dynamic/nested/b should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /dynamic/force-dynamic/nested/b should have correct headers",
        "ppr-full HTML Response for /dynamic/force-dynamic/nested/b should resume with dynamic content",
        "ppr-full HTML Response for /dynamic/force-dynamic/nested/c should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /dynamic/force-dynamic/nested/c should have correct headers",
        "ppr-full HTML Response for /dynamic/force-dynamic/nested/c should resume with dynamic content",
        "ppr-full HTML Response for /dynamic/force-static should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /dynamic/force-static should have correct headers",
        "ppr-full HTML Response for /dynamic/force-static should not contain dynamic content",
        "ppr-full HTML Response for /loading/a should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /loading/a should cache the static part",
        "ppr-full HTML Response for /loading/a should have correct headers",
        "ppr-full HTML Response for /loading/a should resume with dynamic content",
        "ppr-full HTML Response for /loading/b should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /loading/b should cache the static part",
        "ppr-full HTML Response for /loading/b should have correct headers",
        "ppr-full HTML Response for /loading/b should resume with dynamic content",
        "ppr-full HTML Response for /loading/c should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /loading/c should cache the static part",
        "ppr-full HTML Response for /loading/c should have correct headers",
        "ppr-full HTML Response for /loading/c should resume with dynamic content",
        "ppr-full HTML Response for /metadata should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /metadata should cache the static part",
        "ppr-full HTML Response for /metadata should have correct headers",
        "ppr-full HTML Response for /metadata should resume with dynamic content",
        "ppr-full HTML Response for /nested/a should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /nested/a should cache the static part",
        "ppr-full HTML Response for /nested/a should have correct headers",
        "ppr-full HTML Response for /nested/a should resume with dynamic content",
        "ppr-full HTML Response for /nested/b should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /nested/b should cache the static part",
        "ppr-full HTML Response for /nested/b should have correct headers",
        "ppr-full HTML Response for /nested/b should resume with dynamic content",
        "ppr-full HTML Response for /nested/c should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /nested/c should cache the static part",
        "ppr-full HTML Response for /nested/c should have correct headers",
        "ppr-full HTML Response for /nested/c should resume with dynamic content",
        "ppr-full HTML Response for /no-suspense should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /no-suspense should cache the static part",
        "ppr-full HTML Response for /no-suspense should have correct headers",
        "ppr-full HTML Response for /no-suspense should resume with dynamic content",
        "ppr-full HTML Response for /no-suspense/nested/a should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /no-suspense/nested/a should cache the static part",
        "ppr-full HTML Response for /no-suspense/nested/a should have correct headers",
        "ppr-full HTML Response for /no-suspense/nested/a should resume with dynamic content",
        "ppr-full HTML Response for /no-suspense/nested/b should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /no-suspense/nested/b should cache the static part",
        "ppr-full HTML Response for /no-suspense/nested/b should have correct headers",
        "ppr-full HTML Response for /no-suspense/nested/b should resume with dynamic content",
        "ppr-full HTML Response for /no-suspense/nested/c should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /no-suspense/nested/c should cache the static part",
        "ppr-full HTML Response for /no-suspense/nested/c should have correct headers",
        "ppr-full HTML Response for /no-suspense/nested/c should resume with dynamic content",
        "ppr-full HTML Response for /on-demand/a should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /on-demand/a should cache the static part",
        "ppr-full HTML Response for /on-demand/a should have correct headers",
        "ppr-full HTML Response for /on-demand/a should resume with dynamic content",
        "ppr-full HTML Response for /on-demand/b should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /on-demand/b should cache the static part",
        "ppr-full HTML Response for /on-demand/b should have correct headers",
        "ppr-full HTML Response for /on-demand/b should resume with dynamic content",
        "ppr-full HTML Response for /on-demand/c should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /on-demand/c should cache the static part",
        "ppr-full HTML Response for /on-demand/c should have correct headers",
        "ppr-full HTML Response for /on-demand/c should resume with dynamic content",
        "ppr-full HTML Response for /static should allow navigations to and from a pages/ page",
        "ppr-full HTML Response for /static should have correct headers",
        "ppr-full HTML Response for /static should not contain dynamic content",
        "ppr-full Metadata should set the right metadata when generateMetadata uses dynamic APIs",
        "ppr-full Navigation Signals notFound() for /navigation/not-found should have correct headers",
        "ppr-full Navigation Signals notFound() for /navigation/not-found/dynamic should cache the static part",
        "ppr-full Navigation Signals notFound() for /navigation/not-found/dynamic should have correct headers",
        "ppr-full Navigation Signals redirect() for /navigation/redirect should have correct headers",
        "ppr-full Navigation Signals redirect() for /navigation/redirect/dynamic should cache the static part",
        "ppr-full Navigation Signals redirect() for /navigation/redirect/dynamic should have correct headers",
        "ppr-full Prefetch RSC Response for / should have correct headers",
        "ppr-full Prefetch RSC Response for / should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /dynamic/force-dynamic should have correct headers",
        "ppr-full Prefetch RSC Response for /dynamic/force-dynamic should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /dynamic/force-dynamic/nested/a should have correct headers",
        "ppr-full Prefetch RSC Response for /dynamic/force-dynamic/nested/a should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /dynamic/force-dynamic/nested/b should have correct headers",
        "ppr-full Prefetch RSC Response for /dynamic/force-dynamic/nested/b should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /dynamic/force-dynamic/nested/c should have correct headers",
        "ppr-full Prefetch RSC Response for /dynamic/force-dynamic/nested/c should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /dynamic/force-static should have correct headers",
        "ppr-full Prefetch RSC Response for /dynamic/force-static should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /loading/a should have correct headers",
        "ppr-full Prefetch RSC Response for /loading/a should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /loading/b should have correct headers",
        "ppr-full Prefetch RSC Response for /loading/b should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /loading/c should have correct headers",
        "ppr-full Prefetch RSC Response for /loading/c should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /metadata should have correct headers",
        "ppr-full Prefetch RSC Response for /metadata should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /nested/a should have correct headers",
        "ppr-full Prefetch RSC Response for /nested/a should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /nested/b should have correct headers",
        "ppr-full Prefetch RSC Response for /nested/b should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /nested/c should have correct headers",
        "ppr-full Prefetch RSC Response for /nested/c should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /no-suspense should have correct headers",
        "ppr-full Prefetch RSC Response for /no-suspense should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /no-suspense/nested/a should have correct headers",
        "ppr-full Prefetch RSC Response for /no-suspense/nested/a should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /no-suspense/nested/b should have correct headers",
        "ppr-full Prefetch RSC Response for /no-suspense/nested/b should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /no-suspense/nested/c should have correct headers",
        "ppr-full Prefetch RSC Response for /no-suspense/nested/c should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /on-demand/a should have correct headers",
        "ppr-full Prefetch RSC Response for /on-demand/a should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /on-demand/b should have correct headers",
        "ppr-full Prefetch RSC Response for /on-demand/b should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /on-demand/c should have correct headers",
        "ppr-full Prefetch RSC Response for /on-demand/c should not contain dynamic content",
        "ppr-full Prefetch RSC Response for /static should have correct headers",
        "ppr-full Prefetch RSC Response for /static should not contain dynamic content",
        "ppr-full Test Setup has all the test pathnames listed in the links component"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-history-replace-state/ppr-history-replace-state.test.ts": {
      "passed": ["ppr-history-replace-state should not remount component"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-incremental/ppr-incremental.test.ts": {
      "passed": [
        "ppr-incremental ppr disabled / should not have the dynamic content hidden /",
        "ppr-incremental ppr disabled / should render without the fallback in the initial load /",
        "ppr-incremental ppr disabled /disabled should not have the dynamic content hidden /disabled",
        "ppr-incremental ppr disabled /disabled should render without the fallback in the initial load /disabled",
        "ppr-incremental ppr disabled /dynamic/[slug] should not have the dynamic content hidden /dynamic/a",
        "ppr-incremental ppr disabled /dynamic/[slug] should not have the dynamic content hidden /dynamic/b",
        "ppr-incremental ppr disabled /dynamic/[slug] should not have the dynamic content hidden /dynamic/c",
        "ppr-incremental ppr disabled /dynamic/[slug] should render without the fallback in the initial load /dynamic/a",
        "ppr-incremental ppr disabled /dynamic/[slug] should render without the fallback in the initial load /dynamic/b",
        "ppr-incremental ppr disabled /dynamic/[slug] should render without the fallback in the initial load /dynamic/c",
        "ppr-incremental ppr disabled /dynamic/disabled/[slug] should not have the dynamic content hidden /dynamic/disabled/a",
        "ppr-incremental ppr disabled /dynamic/disabled/[slug] should not have the dynamic content hidden /dynamic/disabled/b",
        "ppr-incremental ppr disabled /dynamic/disabled/[slug] should not have the dynamic content hidden /dynamic/disabled/c",
        "ppr-incremental ppr disabled /dynamic/disabled/[slug] should render without the fallback in the initial load /dynamic/disabled/a",
        "ppr-incremental ppr disabled /dynamic/disabled/[slug] should render without the fallback in the initial load /dynamic/disabled/b",
        "ppr-incremental ppr disabled /dynamic/disabled/[slug] should render without the fallback in the initial load /dynamic/disabled/c",
        "ppr-incremental ppr disabled /nested/disabled/[slug] should not have the dynamic content hidden /nested/disabled/a",
        "ppr-incremental ppr disabled /nested/disabled/[slug] should not have the dynamic content hidden /nested/disabled/b",
        "ppr-incremental ppr disabled /nested/disabled/[slug] should not have the dynamic content hidden /nested/disabled/c",
        "ppr-incremental ppr disabled /nested/disabled/[slug] should render without the fallback in the initial load /nested/disabled/a",
        "ppr-incremental ppr disabled /nested/disabled/[slug] should render without the fallback in the initial load /nested/disabled/b",
        "ppr-incremental ppr disabled /nested/disabled/[slug] should render without the fallback in the initial load /nested/disabled/c",
        "ppr-incremental ppr disabled /nested/disabled/disabled/[slug] should not have the dynamic content hidden /nested/disabled/disabled/a",
        "ppr-incremental ppr disabled /nested/disabled/disabled/[slug] should not have the dynamic content hidden /nested/disabled/disabled/b",
        "ppr-incremental ppr disabled /nested/disabled/disabled/[slug] should not have the dynamic content hidden /nested/disabled/disabled/c",
        "ppr-incremental ppr disabled /nested/disabled/disabled/[slug] should render without the fallback in the initial load /nested/disabled/disabled/a",
        "ppr-incremental ppr disabled /nested/disabled/disabled/[slug] should render without the fallback in the initial load /nested/disabled/disabled/b",
        "ppr-incremental ppr disabled /nested/disabled/disabled/[slug] should render without the fallback in the initial load /nested/disabled/disabled/c",
        "ppr-incremental ppr disabled /nested/enabled/disabled/[slug] should not have the dynamic content hidden /nested/enabled/disabled/a",
        "ppr-incremental ppr disabled /nested/enabled/disabled/[slug] should not have the dynamic content hidden /nested/enabled/disabled/b",
        "ppr-incremental ppr disabled /nested/enabled/disabled/[slug] should not have the dynamic content hidden /nested/enabled/disabled/c",
        "ppr-incremental ppr disabled /nested/enabled/disabled/[slug] should render without the fallback in the initial load /nested/enabled/disabled/a",
        "ppr-incremental ppr disabled /nested/enabled/disabled/[slug] should render without the fallback in the initial load /nested/enabled/disabled/b",
        "ppr-incremental ppr disabled /nested/enabled/disabled/[slug] should render without the fallback in the initial load /nested/enabled/disabled/c",
        "ppr-incremental ppr disabled /omitted/[slug] should not have the dynamic content hidden /omitted/a",
        "ppr-incremental ppr disabled /omitted/[slug] should not have the dynamic content hidden /omitted/b",
        "ppr-incremental ppr disabled /omitted/[slug] should not have the dynamic content hidden /omitted/c",
        "ppr-incremental ppr disabled /omitted/[slug] should render without the fallback in the initial load /omitted/a",
        "ppr-incremental ppr disabled /omitted/[slug] should render without the fallback in the initial load /omitted/b",
        "ppr-incremental ppr disabled /omitted/[slug] should render without the fallback in the initial load /omitted/c",
        "ppr-incremental ppr disabled /omitted/disabled/[slug] should not have the dynamic content hidden /omitted/disabled/a",
        "ppr-incremental ppr disabled /omitted/disabled/[slug] should not have the dynamic content hidden /omitted/disabled/b",
        "ppr-incremental ppr disabled /omitted/disabled/[slug] should not have the dynamic content hidden /omitted/disabled/c",
        "ppr-incremental ppr disabled /omitted/disabled/[slug] should render without the fallback in the initial load /omitted/disabled/a",
        "ppr-incremental ppr disabled /omitted/disabled/[slug] should render without the fallback in the initial load /omitted/disabled/b",
        "ppr-incremental ppr disabled /omitted/disabled/[slug] should render without the fallback in the initial load /omitted/disabled/c",
        "ppr-incremental ppr disabled should not trigger a dynamic request for static pages",
        "ppr-incremental ppr enabled /dynamic/enabled/[slug] should have the dynamic content hidden /dynamic/enabled/a",
        "ppr-incremental ppr enabled /dynamic/enabled/[slug] should have the dynamic content hidden /dynamic/enabled/b",
        "ppr-incremental ppr enabled /dynamic/enabled/[slug] should have the dynamic content hidden /dynamic/enabled/c",
        "ppr-incremental ppr enabled /dynamic/enabled/[slug] should render with the fallback in the initial load /dynamic/enabled/a",
        "ppr-incremental ppr enabled /dynamic/enabled/[slug] should render with the fallback in the initial load /dynamic/enabled/b",
        "ppr-incremental ppr enabled /dynamic/enabled/[slug] should render with the fallback in the initial load /dynamic/enabled/c",
        "ppr-incremental ppr enabled /enabled should have the dynamic content hidden /enabled",
        "ppr-incremental ppr enabled /enabled should render with the fallback in the initial load /enabled",
        "ppr-incremental ppr enabled /nested/disabled/enabled/[slug] should have the dynamic content hidden /nested/disabled/enabled/a",
        "ppr-incremental ppr enabled /nested/disabled/enabled/[slug] should have the dynamic content hidden /nested/disabled/enabled/b",
        "ppr-incremental ppr enabled /nested/disabled/enabled/[slug] should have the dynamic content hidden /nested/disabled/enabled/c",
        "ppr-incremental ppr enabled /nested/disabled/enabled/[slug] should render with the fallback in the initial load /nested/disabled/enabled/a",
        "ppr-incremental ppr enabled /nested/disabled/enabled/[slug] should render with the fallback in the initial load /nested/disabled/enabled/b",
        "ppr-incremental ppr enabled /nested/disabled/enabled/[slug] should render with the fallback in the initial load /nested/disabled/enabled/c",
        "ppr-incremental ppr enabled /nested/enabled/[slug] should have the dynamic content hidden /nested/enabled/a",
        "ppr-incremental ppr enabled /nested/enabled/[slug] should have the dynamic content hidden /nested/enabled/b",
        "ppr-incremental ppr enabled /nested/enabled/[slug] should have the dynamic content hidden /nested/enabled/c",
        "ppr-incremental ppr enabled /nested/enabled/[slug] should render with the fallback in the initial load /nested/enabled/a",
        "ppr-incremental ppr enabled /nested/enabled/[slug] should render with the fallback in the initial load /nested/enabled/b",
        "ppr-incremental ppr enabled /nested/enabled/[slug] should render with the fallback in the initial load /nested/enabled/c",
        "ppr-incremental ppr enabled /nested/enabled/enabled/[slug] should have the dynamic content hidden /nested/enabled/enabled/a",
        "ppr-incremental ppr enabled /nested/enabled/enabled/[slug] should have the dynamic content hidden /nested/enabled/enabled/b",
        "ppr-incremental ppr enabled /nested/enabled/enabled/[slug] should have the dynamic content hidden /nested/enabled/enabled/c",
        "ppr-incremental ppr enabled /nested/enabled/enabled/[slug] should render with the fallback in the initial load /nested/enabled/enabled/a",
        "ppr-incremental ppr enabled /nested/enabled/enabled/[slug] should render with the fallback in the initial load /nested/enabled/enabled/b",
        "ppr-incremental ppr enabled /nested/enabled/enabled/[slug] should render with the fallback in the initial load /nested/enabled/enabled/c",
        "ppr-incremental ppr enabled /omitted/enabled/[slug] should have the dynamic content hidden /omitted/enabled/a",
        "ppr-incremental ppr enabled /omitted/enabled/[slug] should have the dynamic content hidden /omitted/enabled/b",
        "ppr-incremental ppr enabled /omitted/enabled/[slug] should have the dynamic content hidden /omitted/enabled/c",
        "ppr-incremental ppr enabled /omitted/enabled/[slug] should render with the fallback in the initial load /omitted/enabled/a",
        "ppr-incremental ppr enabled /omitted/enabled/[slug] should render with the fallback in the initial load /omitted/enabled/b",
        "ppr-incremental ppr enabled /omitted/enabled/[slug] should render with the fallback in the initial load /omitted/enabled/c"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-navigations/avoid-popstate-flash/avoid-popstate-flash.test.ts": {
      "passed": [
        "avoid-popstate-flash does not flash back to partial PPR data during back/forward navigation"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-navigations/incremental/incremental.test.ts": {
      "passed": [
        "ppr-navigations incremental can navigate between all the links and back without writing to disk"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-navigations/loading-tsx-no-partial-rendering/loading-tsx-no-partial-rendering.test.ts": {
      "passed": [
        "loading-tsx-no-partial-rendering when PPR is enabled, loading.tsx boundaries do not cause a partial prefetch"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-navigations/prefetch-navigation/prefetch-navigation.test.ts": {
      "passed": [
        "prefetch-navigation should render the prefetch without waiting for the RSC request"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-navigations/search-params/search-params.test.ts": {
      "passed": [
        "search-params updates page data during a nav even if no shared layouts have changed (e.g. updating a search param on the current page)"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-navigations/simple/simple.test.ts": {
      "passed": [
        "ppr-navigations simple can navigate between all the links and back"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-navigations/stale-prefetch-entry/stale-prefetch-entry.test.ts": {
      "passed": [
        "stale-prefetch-entry works if a prefetched route entry has become stale (too much time has elapsed since it was prefetched)"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr-unstable-cache/ppr-unstable-cache.test.ts": {
      "passed": ["ppr-unstable-cache should not cache inner fetch calls"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/ppr/ppr.test.ts": {
      "passed": [
        "ppr /no-suspense/node/gsp/[slug] should serve the static & dynamic parts",
        "ppr /suspense/node/gsp/[slug] should not have the dynamic part",
        "ppr /suspense/node/gsp/[slug] should serve the static part first",
        "ppr build output correctly marks pages as being partially prerendered in the build output",
        "ppr for /loading/nested/1 should not have the dynamic part",
        "ppr for /loading/nested/1 should serve the static part",
        "ppr for /loading/nested/2 should not have the dynamic part",
        "ppr for /loading/nested/2 should serve the static part",
        "ppr for /loading/nested/3 should not have the dynamic part",
        "ppr for /loading/nested/3 should serve the static part",
        "ppr for /suspense/node should not have the dynamic part",
        "ppr for /suspense/node should serve the static part",
        "ppr for /suspense/node/nested/1 should not have the dynamic part",
        "ppr for /suspense/node/nested/1 should serve the static part",
        "ppr for /suspense/node/nested/2 should not have the dynamic part",
        "ppr for /suspense/node/nested/2 should serve the static part",
        "ppr for /suspense/node/nested/3 should not have the dynamic part",
        "ppr for /suspense/node/nested/3 should serve the static part",
        "ppr search parameters should render the page with the search parameters",
        "ppr should indicate the feature is experimental",
        "ppr telemetry should send ppr feature usage event",
        "ppr with suspense for /suspense/edge should eventually render the dynamic part",
        "ppr with suspense for /suspense/node should eventually render the dynamic part",
        "ppr without suspense for /no-suspense should immediately render the dynamic part"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/prefetch-searchparam/prefetch-searchparam.test.ts": {
      "passed": [
        "prefetch-searchparam should set prefetch cache properly on different search params"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/prefetching-not-found/prefetching-not-found.test.ts": {
      "passed": [
        "prefetching-not-found should correctly navigate to/from a global 404 page when following links with prefetch=auto"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/react-max-headers-length/react-max-headers-length.test.ts": {
      "passed": [
        "react-max-headers-length reactMaxHeadersLength = 0 should respect reactMaxHeadersLength",
        "react-max-headers-length reactMaxHeadersLength = 10000 should respect reactMaxHeadersLength",
        "react-max-headers-length reactMaxHeadersLength = 400 should respect reactMaxHeadersLength",
        "react-max-headers-length reactMaxHeadersLength = undefined should respect reactMaxHeadersLength"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/react-owner-stacks-svgr/react-owner-stacks-svgr.test.ts": {
      "passed": [
        "react-owner-stacks-svgr renders an SVG that is transformed by @svgr/webpack into a React component"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/remove-console/remove-console.test.ts": {
      "passed": ["remove-console should remove console.log"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/resolve-extensions/resolve-extensions.test.ts": {
      "passed": [
        "turbo-resolve-extensions should SSR",
        "turbo-resolve-extensions should work using browser"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/resource-url-encoding/resource-url-encoding.test.ts": {
      "passed": [
        "scripts encodes characters in app router",
        "scripts encodes characters in pages router",
        "styles encodes characters in app router",
        "styles encodes characters in pages router"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/revalidate-dynamic/revalidate-dynamic.test.ts": {
      "passed": [
        "app-dir revalidate-dynamic should correctly mark a route handler that uses unstable_expireTag as dynamic",
        "app-dir revalidate-dynamic should revalidate the data with /api/revalidate-path",
        "app-dir revalidate-dynamic should revalidate the data with /api/revalidate-tag"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/rewrites-redirects/rewrites-redirects.test.ts": {
      "passed": [
        "redirects and rewrites navigation using button should redirect from middleware correctly",
        "redirects and rewrites navigation using button should redirect from next.config.js correctly",
        "redirects and rewrites navigation using button should redirect using catchall from next.config.js correctly",
        "redirects and rewrites navigation using button should rewrite from middleware correctly",
        "redirects and rewrites navigation using button should rewrite from next.config.js correctly",
        "redirects and rewrites navigation using link should redirect from middleware correctly",
        "redirects and rewrites navigation using link should redirect from next.config.js correctly",
        "redirects and rewrites navigation using link should redirect using catchall from next.config.js correctly",
        "redirects and rewrites navigation using link should rewrite from middleware correctly",
        "redirects and rewrites navigation using link should rewrite from next.config.js correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/root-layout-redirect/root-layout-redirect.test.ts": {
      "passed": ["root-layout-redirect should work using browser"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/root-layout-render-once/index.test.ts": {
      "passed": [
        "app-dir root layout render once should only render root layout once"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/root-layout/root-layout.test.ts": {
      "passed": [
        "app-dir root layout Should do a mpa navigation when switching root layout should work with basic routes",
        "app-dir root layout Should do a mpa navigation when switching root layout should work with dynamic catchall routes",
        "app-dir root layout Should do a mpa navigation when switching root layout should work with dynamic routes",
        "app-dir root layout Should do a mpa navigation when switching root layout should work with parallel routes",
        "app-dir root layout Should do a mpa navigation when switching root layout should work with route groups",
        "app-dir root layout Should do a mpa navigation when switching root layout should work with static routes",
        "app-dir root layout should correctly handle navigation between multiple root layouts"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/route-page-manifest-bug/route-page-manifest-bug.test.ts": {
      "passed": [
        "route-page-manifest-bug should work when requesting route handler after page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/router-autoscroll/router-autoscroll.test.ts": {
      "passed": [
        "router autoscrolling on navigation bugs Should apply scroll when loading.js is used",
        "router autoscrolling on navigation bugs Should scroll to the top of the layout when the first child is display none",
        "router autoscrolling on navigation bugs Should scroll to the top of the layout when the first child is position fixed",
        "router autoscrolling on navigation bugs Should scroll to the top of the layout when the first child is position sticky",
        "router autoscrolling on navigation horizontal scroll should't scroll horizontally",
        "router autoscrolling on navigation router.refresh() should not scroll when called alone",
        "router autoscrolling on navigation router.refresh() should not stop router.push() from scrolling",
        "router autoscrolling on navigation vertical scroll should not scroll to top of document if page in viewport",
        "router autoscrolling on navigation vertical scroll should not scroll when the top of the page is in the viewport",
        "router autoscrolling on navigation vertical scroll should scroll down to the navigated page when it's below viewort",
        "router autoscrolling on navigation vertical scroll should scroll to top of document if possible while giving focus to page",
        "router autoscrolling on navigation vertical scroll should scroll to top of document when navigating between to pages without layout",
        "router autoscrolling on navigation vertical scroll should scroll to top of page when scrolling to phe top of the document wouldn't have the page in the viewport"
      ],
      "failed": [],
      "pending": [
        "router autoscrolling on navigation router.refresh() should not scroll the page when we hot reload"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/router-stuck-dynamic-static-segment/router-stuck-dynamic-static-segment.test.ts": {
      "passed": [
        "router-stuck-dynamic-static-segment should allow navigation between dynamic parameter and static parameter of the same value"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/rsc-basic/rsc-basic.test.ts": {
      "passed": [
        "app dir - rsc basics next internal shared context should not error if just load next/navigation module in pages/api",
        "app dir - rsc basics next internal shared context should not error if just load next/router module in app page",
        "app dir - rsc basics react@experimental should opt into the react@experimental when enabling ppr",
        "app dir - rsc basics react@experimental should opt into the react@experimental when enabling taint",
        "app dir - rsc basics should be able to call legacy react-dom/server APIs in client components",
        "app dir - rsc basics should be able to navigate between rsc routes",
        "app dir - rsc basics should correctly render component returning null",
        "app dir - rsc basics should correctly render component returning undefined",
        "app dir - rsc basics should correctly render layout returning null",
        "app dir - rsc basics should correctly render layout returning undefined",
        "app dir - rsc basics should correctly render page returning null",
        "app dir - rsc basics should correctly render page returning undefined",
        "app dir - rsc basics should create client reference successfully for all file conventions",
        "app dir - rsc basics should escape streaming data correctly",
        "app dir - rsc basics should generate edge SSR manifests for Node.js",
        "app dir - rsc basics should handle client components imported as namespace",
        "app dir - rsc basics should handle named client components imported as page",
        "app dir - rsc basics should handle streaming server components correctly",
        "app dir - rsc basics should handle various kinds of exports correctly",
        "app dir - rsc basics should link correctly with next/link without mpa navigation to the page",
        "app dir - rsc basics should not apply rsc syntax checks in pages/api",
        "app dir - rsc basics should render built-in 404 page for missing route if pagesDir is not presented",
        "app dir - rsc basics should render css-in-js suspense boundary correctly",
        "app dir - rsc basics should render initial styles of css-in-js in edge SSR correctly",
        "app dir - rsc basics should render initial styles of css-in-js in nodejs SSR correctly",
        "app dir - rsc basics should render server components correctly",
        "app dir - rsc basics should resolve different kinds of components correctly",
        "app dir - rsc basics should reuse the inline flight response without sending extra requests",
        "app dir - rsc basics should stick to the url without trailing /page suffix",
        "app dir - rsc basics should support multi-level server component imports",
        "app dir - rsc basics should support native modules in server component",
        "app dir - rsc basics should support next/link in server components",
        "app dir - rsc basics should support partial hydration with inlined server data",
        "app dir - rsc basics should support streaming for flight response",
        "app dir - rsc basics should suspense next/image in server components",
        "app dir - rsc basics should suspense next/legacy/image in server components",
        "app dir - rsc basics should track client components in dynamic imports",
        "app dir - rsc basics should use canary react for app"
      ],
      "failed": [],
      "pending": [
        "app dir - rsc basics should not use bundled react for pages with app",
        "app dir - rsc basics should support partial hydration with inlined server data in browser"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/rsc-webpack-loader/rsc-webpack-loader.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "app dir - rsc webpack loader should support webpack loader rules"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/3rd-party-module/3rd-party-module.test.ts": {
      "passed": [
        "3rd Party CSS Module Support ({\"sass\": \"1.54.0\"}) should render the module",
        "3rd Party CSS Module Support ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/basic-module-additional-data/basic-module-additional-data.test.ts": {
      "passed": [
        "Basic Module Additional Data Support ({\"sass\": \"1.54.0\"}) should render the module",
        "Basic Module Additional Data Support ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/basic-module-include-paths/basic-module-include-paths.test.ts": {
      "passed": [
        "Basic Module Include Paths Support ({\"sass\": \"1.54.0\"}) should render the module",
        "Basic Module Include Paths Support ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/basic-module-prepend-data/basic-module-prepend-data.test.ts": {
      "passed": [
        "Basic Module Prepend Data Support ({\"sass\": \"1.54.0\"}) should render the module",
        "Basic Module Prepend Data Support ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/basic-module/basic-module.test.ts": {
      "passed": [
        "Basic SCSS Module Support ({\"sass\": \"1.54.0\"}) should render the module",
        "Basic SCSS Module Support ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/catch-all-module/catch-all-module.test.ts": {
      "passed": [
        "Catch-all Route CSS Module Usage ({\"sass\": \"1.54.0\"}) should render the module",
        "Catch-all Route CSS Module Usage ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/compilation-and-prefixing/compilation-and-prefixing.test.ts": {
      "passed": [
        "SCSS Support ({\"sass\": \"1.54.0\"}) Production only CSS Compilation and Prefixing should've compiled and prefixed",
        "SCSS Support ({\"sass-embedded\": \"1.75.0\"}) Production only CSS Compilation and Prefixing should've compiled and prefixed"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/composes-basic/composes-basic.test.ts": {
      "passed": [
        "CSS Module Composes Usage (Basic) ({\"sass\": \"1.54.0\"}) should render the module",
        "CSS Module Composes Usage (Basic) ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/composes-external/composes-external.test.ts": {
      "passed": [
        "CSS Module Composes Usage (External) ({\"sass\": \"1.54.0\"}) should render the module",
        "CSS Module Composes Usage (External) ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/data-url/data-url.test.ts": {
      "passed": [
        "SCSS Support loader handling Data Urls ({\"sass\": \"1.54.0\"}) should render the module",
        "SCSS Support loader handling Data Urls ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/dev-module/dev-module.test.ts": {
      "passed": [
        "Has CSS Module in computed styles in Development ({\"sass\": \"1.54.0\"}) should have CSS for page",
        "Has CSS Module in computed styles in Development ({\"sass-embedded\": \"1.75.0\"}) should have CSS for page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/dynamic-route-module/dynamic-route-module.test.ts": {
      "passed": [
        "Dynamic Route CSS Module Usage ({\"sass\": \"1.54.0\"}) should apply styles correctly",
        "Dynamic Route CSS Module Usage ({\"sass-embedded\": \"1.75.0\"}) should apply styles correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/external-url/external-url.test.ts": {
      "passed": [
        "SCSS Support loader handling External imports ({\"sass\": \"1.54.0\"}) should include font on the page",
        "SCSS Support loader handling External imports ({\"sass-embedded\": \"1.75.0\"}) should include font on the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/hmr-module/hmr-module.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Can hot reload CSS Module without losing state ({\"sass\": \"1.54.0\"}) development only should update CSS color without remounting <input>",
        "Can hot reload CSS Module without losing state ({\"sass-embedded\": \"1.75.0\"}) development only should update CSS color without remounting <input>"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/invalid-global-module/invalid-global-module.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Invalid CSS Global Module Usage in node_modules production only should fail to build"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/invalid-global-with-app/invalid-global-with-app.test.ts": {
      "passed": [],
      "failed": [
        "Invalid Global CSS with Custom App production only should fail to build"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/invalid-global/invalid-global.test.ts": {
      "passed": [],
      "failed": ["Invalid Global CSS production only should fail to build"],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/invalid-module-document/invalid-module-document.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Invalid SCSS in _document production only should fail to build"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/invalid-module/invalid-module.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Invalid CSS Module Usage in node_modules production only should fail to build"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/loader-order/loader-order.test.ts": {
      "passed": [
        "SCSS Support loader handling Preprocessor loader order ({\"sass\": \"1.54.0\"}) should render the module",
        "SCSS Support loader handling Preprocessor loader order ({\"sass-embedded\": \"1.75.0\"}) should render the module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/multi-global-reversed/multi-global-reversed.test.ts": {
      "passed": [
        "(SCSS) Multi Global Support (reversed) ({\"sass\": \"1.54.0\"}) should render the page",
        "(SCSS) Multi Global Support (reversed) ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/multi-global/multi-global.test.ts": {
      "passed": [
        "Multi Global Support ({\"sass\": \"1.54.0\"}) should render the page",
        "Multi Global Support ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/multi-page/multi-page.test.ts": {
      "passed": [
        "SCSS Support ({\"sass\": \"1.54.0\"}) Has CSS in computed styles in Development should have CSS for page",
        "SCSS Support ({\"sass\": \"1.54.0\"}) Has CSS in computed styles in Production should have CSS for page",
        "SCSS Support ({\"sass-embedded\": \"1.75.0\"}) Has CSS in computed styles in Development should have CSS for page",
        "SCSS Support ({\"sass-embedded\": \"1.75.0\"}) Has CSS in computed styles in Production should have CSS for page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/nested-global/nested-global.test.ts": {
      "passed": [
        "Nested @import() Global Support ({\"sass\": \"1.54.0\"}) should render the page",
        "Nested @import() Global Support ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/nm-module-nested/nm-module-nested.test.ts": {
      "passed": [
        "Valid Nested CSS Module Usage from within node_modules ({\"sass\": \"1.54.0\"}) should render the page",
        "Valid Nested CSS Module Usage from within node_modules ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/nm-module/nm-module.test.ts": {
      "passed": [
        "Valid CSS Module Usage from within node_modules ({\"sass\": \"1.54.0\"}) should render the page",
        "Valid CSS Module Usage from within node_modules ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/npm-import-bad/npm-import-bad.test.ts": {
      "passed": [
        "CSS Import from node_modules production only should fail the build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/npm-import-nested/npm-import-nested.test.ts": {
      "passed": [
        "Good Nested CSS Import from node_modules ({\"sass\": \"1.54.0\"}) should render the page",
        "Good Nested CSS Import from node_modules ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/npm-import-tilde/npm-import-tilde.test.ts": {
      "passed": [
        "Good CSS Import from node_modules with tilde ({\"sass\": \"1.54.0\"}) should render the page",
        "Good CSS Import from node_modules with tilde ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/npm-import/npm-import.test.ts": {
      "passed": [
        "Good CSS Import from node_modules ({\"sass\": \"1.54.0\"}) should render the page",
        "Good CSS Import from node_modules ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/prod-module/prod-module.test.ts": {
      "passed": [
        "Has CSS Module in computed styles in Production ({\"sass\": \"1.54.0\"}) should render the page",
        "Has CSS Module in computed styles in Production ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/scss-mixins/scss-mixins.test.ts": {
      "passed": ["Scss Mixins should work using browser"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/single-global-src/single-global-src.test.ts": {
      "passed": [
        "Basic Global Support with src/ dir ({\"sass\": \"1.54.0\"}) should render the page",
        "Basic Global Support with src/ dir ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/single-global/single-global.test.ts": {
      "passed": [
        "Basic Global Support scss ({\"sass\": \"1.54.0\"}) should render the page",
        "Basic Global Support scss ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/unused/unused.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "unused scss Body is not hidden when broken in Development development only should have body visible",
        "unused scss Body is not hidden when unused in Development ($dependencies) development only should have body visible"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/url-global-asset-prefix-1/url-global-asset-prefix-1.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "SCSS Support loader handling CSS URL via `file-loader` and asset prefix (1) ({\"sass\": \"1.54.0\"}) should render the page",
        "SCSS Support loader handling CSS URL via `file-loader` and asset prefix (1) ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/url-global-asset-prefix-2/url-global-asset-prefix-2.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "SCSS Support loader handling CSS URL via `file-loader` and asset prefix (2) ({\"sass\": \"1.54.0\"}) should render the page",
        "SCSS Support loader handling CSS URL via `file-loader` and asset prefix (2) ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/url-global-partial/url-global-partial.test.ts": {
      "passed": [
        "SCSS Support loader handling CSS URL via file-loader sass partial ({\"sass\": \"1.54.0\"}) should render the page",
        "SCSS Support loader handling CSS URL via file-loader sass partial ({\"sass-embedded\": \"1.75.0\"}) should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/url-global/url-global.test.ts": {
      "passed": [
        "SCSS Support loader handling ({\"sass\": \"1.54.0\"}) CSS URL via `file-loader` should render the page",
        "SCSS Support loader handling ({\"sass-embedded\": \"1.75.0\"}) CSS URL via `file-loader` should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/valid-and-invalid-global/valid-and-invalid-global.test.ts": {
      "passed": [],
      "failed": [
        "Valid and Invalid Global CSS with Custom App production only should fail to build"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/webpack-error/webpack-error.test.ts": {
      "passed": [],
      "failed": [
        "SCSS Support Friendly Webpack Error should be a friendly error successfully"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/scss/with-styled-jsx/with-styled-jsx.test.ts": {
      "passed": [
        "Ordering with styled-jsx ({\"sass\": \"1.54.0\"}) should have the correct color (css ordering)",
        "Ordering with styled-jsx ({\"sass-embedded\": \"1.75.0\"}) should have the correct color (css ordering)"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/search-params-react-key/layout-params.test.ts": {
      "passed": [
        "app dir - search params keys should keep the React router instance the same when changing the search params"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/searchparams-reuse-loading/searchparams-reuse-loading.test.ts": {
      "passed": [
        "searchparams-reuse-loading With Middleware should correctly return different RSC data for full prefetches with different searchParam values",
        "searchparams-reuse-loading Without Middleware should correctly return different RSC data for full prefetches with different searchParam values",
        "searchparams-reuse-loading should re-use loading from \"full\" prefetch for param-full URL when navigating to param-full route",
        "searchparams-reuse-loading should re-use loading from \"full\" prefetch for param-full URL when navigating to param-less route",
        "searchparams-reuse-loading should re-use loading from \"full\" prefetch for param-less URL when navigating to param-full route",
        "searchparams-reuse-loading should re-use the prefetched loading state when navigating to a new searchParam value"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/searchparams-static-bailout/searchparams-static-bailout.test.ts": {
      "passed": [
        "searchparams-static-bailout client component should bailout when using searchParams",
        "searchparams-static-bailout client component should bailout when using searchParams is passed to client component",
        "searchparams-static-bailout client component should not bailout when not using searchParams",
        "searchparams-static-bailout server component should bailout when using searchParams",
        "searchparams-static-bailout server component should not bailout when not using searchParams"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/self-importing-package-monorepo/self-importing-package-monorepo.test.ts": {
      "passed": [
        "self-importing-package-monorepo should resolve self-imports inside a monorepo"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/self-importing-package/self-importing-package.test.ts": {
      "passed": [
        "self-importing-package should resolve self-imports in an external package"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/server-actions-redirect-middleware-rewrite/server-actions-redirect-middleware-rewrite.test.ts": {
      "passed": [
        "app-dir - server-actions-redirect-middleware-rewrite.test should redirect correctly in edge runtime with middleware rewrite",
        "app-dir - server-actions-redirect-middleware-rewrite.test should redirect correctly in nodejs runtime with middleware rewrite"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/server-actions-relative-redirect/server-actions-relative-redirect.test.ts": {
      "passed": [
        "server-actions-relative-redirect should work with absolute redirect",
        "server-actions-relative-redirect should work with relative redirect"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/server-components-externals/index.test.ts": {
      "passed": [
        "app-dir - server components externals should have externals for those in config.serverExternalPackages",
        "app-dir - server components externals uses externals for predefined list in server-external-packages.json"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/set-cookies/set-cookies.test.ts": {
      "passed": [
        "set-cookies for edge runtime for /app should set two set-cookie headers",
        "set-cookies for edge runtime for /pages should set two set-cookie headers",
        "set-cookies for experimental-edge runtime for /app should set two set-cookie headers",
        "set-cookies for experimental-edge runtime for /pages should set two set-cookie headers",
        "set-cookies for node runtime for /app should set two set-cookie headers",
        "set-cookies for node runtime for /pages should set two set-cookie headers"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/shallow-routing/shallow-routing.test.ts": {
      "passed": [
        "shallow-routing back and forward client-side navigation should support setting a different pathname reflected on usePathname and then still support navigating back and forward",
        "shallow-routing back and forward mpa navigation should support hash navigations while continuing to work for pushState/replaceState APIs",
        "shallow-routing back and forward mpa navigation should support setting data and then still support navigating back and forward",
        "shallow-routing pushState should support setting a different pathname reflected on usePathname",
        "shallow-routing pushState should support setting a different searchParam reflected on useSearchParams",
        "shallow-routing pushState should support setting a different url using a string",
        "shallow-routing pushState should support setting data",
        "shallow-routing pushState should work when given a null state value",
        "shallow-routing replaceState should support setting a different pathname reflected on usePathname",
        "shallow-routing replaceState should support setting a different searchParam reflected on useSearchParams",
        "shallow-routing replaceState should support setting a different url using a string",
        "shallow-routing replaceState should support setting data",
        "shallow-routing replaceState should work when given a null state value",
        "shallow-routing replaceState should work when given an undefined state value",
        "shallow-routing should work when given an undefined state value"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/similar-pages-paths/similar-pages-paths.test.ts": {
      "passed": [
        "app-dir similar pages paths should not have conflicts for similar pattern page paths between app and pages"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/static-generation-status/index.test.ts": {
      "passed": [
        "app-dir static-generation-status should render the non existed route redirect with status 404",
        "app-dir static-generation-status should render the page using notFound with status 404",
        "app-dir static-generation-status should render the page using redirect with status 307"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/static-shell-debugging/static-shell-debugging.test.ts": {
      "passed": [
        "static-shell-debugging ppr = false, debugging = false should render the full page",
        "static-shell-debugging ppr = false, debugging = true should render the full page",
        "static-shell-debugging ppr = true, debugging = false should render the full page",
        "static-shell-debugging ppr = true, debugging = true should only render the static shell"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/syntax-highlighter-crash/syntax-highlighter-crash.test.ts": {
      "passed": ["syntax-highlighter-crash should render the page"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/tailwind-css/tailwind-css.test.ts": {
      "passed": ["tailwind-css works when importing tailwind/tailwind.css"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/taint/process-taint.test.ts": {
      "passed": [
        "app dir - taint should error when passing process env to client component"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/test-template/{{ toFileName name }}/{{ toFileName name }}.test.ts": {
      "passed": [
        "{{name}} should work using browser",
        "{{name}} should work using cheerio",
        "{{name}} should work with fetch",
        "{{name}} should work with html"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/third-parties/basic.test.ts": {
      "passed": [
        "@next/third-parties basic usage renders GA",
        "@next/third-parties basic usage renders GTM",
        "@next/third-parties basic usage renders GoogleMapsEmbed",
        "@next/third-parties basic usage renders YoutubeEmbed"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/trailingslash/trailingslash.test.ts": {
      "passed": [
        "app-dir trailingSlash handling should contain trailing slash to canonical url",
        "app-dir trailingSlash handling should not add trailing slash to external url or relative url with query",
        "app-dir trailingSlash handling should redirect route when clicking link",
        "app-dir trailingSlash handling should redirect route when requesting it directly",
        "app-dir trailingSlash handling should redirect route when requesting it directly by browser",
        "app-dir trailingSlash handling should render link with trailing slash"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/turbopack-reports/turbopack-reports.test.ts": {
      "passed": ["turbopack-reports should render page importing sqlite3"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/typeof-window/typeof-window.test.ts": {
      "passed": ["typeof-window should work using cheerio"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/underscore-ignore-app-paths/underscore-ignore-app-paths.test.ts": {
      "passed": [],
      "failed": [
        "underscore-ignore-app-paths should not serve app path with underscore",
        "underscore-ignore-app-paths should serve app path with %5F",
        "underscore-ignore-app-paths should serve pages path with underscore"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/unstable-rethrow/unstable-rethrow.test.ts": {
      "passed": [
        "unstable-rethrow should correctly mark the dynamic page as dynamic",
        "unstable-rethrow should correctly trigger the not found page as not found",
        "unstable-rethrow should handle an internal error that gets propagated to the `cause` field",
        "unstable-rethrow should not log any errors at build time"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/use-params/use-params.test.ts": {
      "passed": [
        "use-params should work for catch all params",
        "use-params should work for nested dynamic params",
        "use-params should work for nested dynamic params client navigating",
        "use-params should work for single dynamic param",
        "use-params should work for single dynamic param client navigating",
        "use-params should work on pages router",
        "use-params shouldn't rerender host component when prefetching"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/use-selected-layout-segment-s/use-selected-layout-segment-s.test.ts": {
      "passed": [
        "useSelectedLayoutSegment(s) should correctly update when changing catchall segment",
        "useSelectedLayoutSegment(s) should correctly update when changing param segment",
        "useSelectedLayoutSegment(s) should correctly update when changing static segment",
        "useSelectedLayoutSegment(s) should return correct values for root layout",
        "useSelectedLayoutSegment(s) should return correct values in layout after last segment",
        "useSelectedLayoutSegment(s) should return correct values in layout before catchall segment",
        "useSelectedLayoutSegment(s) should return correct values in layout before param segment",
        "useSelectedLayoutSegment(s) should return correct values in layout before static segment"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/webpack-loader-conditions/webpack-loader-conditions.test.ts": {
      "passed": [
        "webpack-loader-conditions should render correctly on client side",
        "webpack-loader-conditions should render correctly on server site"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/webpack-loader-ts-transform/webpack-loader-ts-transform.test.ts": {
      "passed": [
        "webpack-loader-ts-transform should accept Typescript returned from Webpack loaders"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/with-babel/with-babel.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "with babel with babel should contain og package files in middleware",
        "with babel with babel should support babel in app dir"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/with-exported-function-config/with-exported-function-config.test.ts": {
      "passed": [
        "with-exported-function-config should have correct values in function config manifest"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/app-dir/x-forwarded-headers/x-forwarded-headers.test.ts": {
      "passed": [
        "x-forwarded-headers already assigned should not override existing x-forwarded-* headers",
        "x-forwarded-headers already assigned should work with multiple x-forwarded-* headers",
        "x-forwarded-headers host header exists should include x-forwarded-* headers relative to host",
        "x-forwarded-headers should include x-forwarded-* headers"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/async-modules-app/index.test.ts": {
      "passed": ["Async modules app router server component async module"],
      "failed": [],
      "pending": ["Async modules app router client component async module"],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/async-modules/index.test.ts": {
      "passed": [
        "Async modules can render async 404 pages",
        "Async modules can render async error page",
        "Async modules csr async page modules",
        "Async modules ssr async page modules",
        "Async modules works on async api routes",
        "Async modules works with getServerSideProps",
        "Async modules works with getStaticProps"
      ],
      "failed": [],
      "pending": ["Async modules can render async AMP pages"],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/basepath-trailing-slash.test.ts": {
      "passed": [
        "basePath + trailingSlash should allow URL query strings on index without refresh",
        "basePath + trailingSlash should allow URL query strings without refresh",
        "basePath + trailingSlash should correctly replace state when same asPath but different url"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/basepath.test.ts": {
      "passed": [
        "basePath should 404 for public file without basePath",
        "basePath should 404 when manually adding basePath with <Link>",
        "basePath should 404 when manually adding basePath with router.push",
        "basePath should 404 when manually adding basePath with router.replace",
        "basePath should add basePath to routes-manifest",
        "basePath should add header with basePath by default",
        "basePath should add header without basePath when set to false",
        "basePath should allow URL query strings on index without refresh",
        "basePath should allow URL query strings without refresh",
        "basePath should correctly replace state when same asPath but different url",
        "basePath should fetch data for getServerSideProps without reloading",
        "basePath should fetch data for getStaticProps without reloading",
        "basePath should handle 404 urls that start with basePath",
        "basePath should handle query/hash correctly during query updating ## $search",
        "basePath should handle query/hash correctly during query updating ##? $search",
        "basePath should handle query/hash correctly during query updating ##hello $search",
        "basePath should handle query/hash correctly during query updating ##hello? $search",
        "basePath should handle query/hash correctly during query updating #? $search",
        "basePath should handle query/hash correctly during query updating #a ?hello",
        "basePath should handle query/hash correctly during query updating #a ?hello=",
        "basePath should handle query/hash correctly during query updating #a ?hello=world",
        "basePath should handle query/hash correctly during query updating #hello? $search",
        "basePath should handle query/hash correctly during query updating #hello?world $search",
        "basePath should have basePath field on Router",
        "basePath should have correct href for a link",
        "basePath should have correct href for a link to /",
        "basePath should have correct router paths on first load of /",
        "basePath should have correct router paths on first load of /hello",
        "basePath should navigate an absolute local url with basePath",
        "basePath should navigate an absolute local url without basePath",
        "basePath should navigate an absolute url",
        "basePath should navigate back correctly to a dynamic route",
        "basePath should navigate to /404 correctly client-side",
        "basePath should navigate to /_error correctly client-side",
        "basePath should navigate to external site and back",
        "basePath should navigate to index page with getStaticProps",
        "basePath should navigate to the page without refresh",
        "basePath should not add header with basePath when set to false",
        "basePath should not add header without basePath without disabling",
        "basePath should not redirect with basePath when set to false",
        "basePath should not redirect without basePath without disabling",
        "basePath should not rewrite with basePath when set to false",
        "basePath should not rewrite without basePath without disabling",
        "basePath should not update URL for a 404",
        "basePath should prefetch pages correctly when manually called",
        "basePath should redirect trailing slash correctly",
        "basePath should redirect trailing slash on root correctly",
        "basePath should redirect with basePath by default",
        "basePath should redirect without basePath when set to false",
        "basePath should respect basePath in amphtml link rel",
        "basePath should rewrite with basePath by default",
        "basePath should rewrite without basePath when set to false",
        "basePath should serve public file with basePath correctly",
        "basePath should show 404 for page not under the /docs prefix",
        "basePath should show the hello page under the /docs prefix",
        "basePath should show the other-page page under the /docs prefix",
        "basePath should update dynamic params after mount correctly",
        "basePath should use urls with basepath in router events",
        "basePath should use urls with basepath in router events for cancelled routes",
        "basePath should use urls with basepath in router events for failed route change",
        "basePath should use urls with basepath in router events for hash changes",
        "basePath should work with catch-all page",
        "basePath should work with hash links",
        "basePath should work with nested folder with same name as basePath",
        "basePath should work with normal dynamic page"
      ],
      "failed": [
        "basePath should prefetch pages correctly in viewport with <Link>"
      ],
      "pending": [
        "basePath should navigate back to a non-basepath 404 that starts with basepath",
        "basePath should navigate to nested index page with getStaticProps"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/browserslist-extends/index.test.ts": {
      "passed": ["browserslist-extends should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/browserslist/browserslist.test.ts": {
      "passed": [],
      "failed": [],
      "pending": ["Browserslist should apply browserslist target"],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/browserslist/default-target.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "default browserslist target should apply default browserslist target"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/cancel-request/stream-cancel.test.ts": {
      "passed": [
        "streaming responses cancel inner stream after disconnect edge app route handler cancels stalled stream",
        "streaming responses cancel inner stream after disconnect edge app route handler cancels stream making progress",
        "streaming responses cancel inner stream after disconnect edge app route handler cancels stream that never sent data",
        "streaming responses cancel inner stream after disconnect edge pages api cancels stalled stream",
        "streaming responses cancel inner stream after disconnect edge pages api cancels stream making progress",
        "streaming responses cancel inner stream after disconnect edge pages api cancels stream that never sent data",
        "streaming responses cancel inner stream after disconnect middleware cancels stalled stream",
        "streaming responses cancel inner stream after disconnect middleware cancels stream making progress",
        "streaming responses cancel inner stream after disconnect middleware cancels stream that never sent data",
        "streaming responses cancel inner stream after disconnect node app route handler cancels stalled stream",
        "streaming responses cancel inner stream after disconnect node app route handler cancels stream making progress",
        "streaming responses cancel inner stream after disconnect node app route handler cancels stream that never sent data",
        "streaming responses cancel inner stream after disconnect node pages api cancels stalled stream",
        "streaming responses cancel inner stream after disconnect node pages api cancels stream making progress",
        "streaming responses cancel inner stream after disconnect node pages api cancels stream that never sent data"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/children-page/index.test.ts": {
      "passed": [
        "children-page with app dir should show the content if you have a page named children",
        "children-page with pages dir should show the content if you have a page named children"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/config-promise-export/async-function.test.ts": {
      "passed": ["async export should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/config-promise-export/promise.test.ts": {
      "passed": ["promise export should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/config-schema-check/index.test.ts": {
      "passed": [
        "next.config.js schema validating - defaultConfig should validate against defaultConfig",
        "next.config.js schema validating - invalid config should warn the invalid next config"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/conflicting-app-page-error/index.test.ts": {
      "passed": [
        "Conflict between app file and pages file should print error for conflicting app/page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/custom-app-render/custom-app-render.test.ts": {
      "passed": [
        "custom-app-render should render /",
        "custom-app-render should render /render"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/disable-js-preload/test/index.test.js": {
      "passed": [
        "disabled JS preloads should not have JS preload links",
        "disabled JS preloads should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/dynamic-route-interpolation/index.test.ts": {
      "passed": [
        "Dynamic Route Interpolation should bust data cache",
        "Dynamic Route Interpolation should bust data cache with symbol",
        "Dynamic Route Interpolation should work",
        "Dynamic Route Interpolation should work with brackets",
        "Dynamic Route Interpolation should work with brackets in API routes",
        "Dynamic Route Interpolation should work with parameter itself",
        "Dynamic Route Interpolation should work with parameter itself in API routes"
      ],
      "failed": [
        "Dynamic Route Interpolation should support both encoded and decoded nextjs reserved path convention characters in path"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-api-endpoints-can-receive-body/index.test.ts": {
      "passed": [
        "Edge API endpoints can receive body reads the body as text",
        "Edge API endpoints can receive body reads the body from index"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-async-local-storage/index.test.ts": {
      "passed": [
        "edge api can use async local storage cans use a single instance per request",
        "edge api can use async local storage cans use multiple instances per request"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-can-read-request-body/index.test.ts": {
      "passed": [
        "Edge can read request body middleware reads a JSON body",
        "Edge can read request body middleware reads a multipart form data",
        "Edge can read request body middleware reads a text body",
        "Edge can read request body middleware reads an URL encoded form data",
        "Edge can read request body renders the static page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-can-use-wasm-files/index.test.ts": {
      "passed": [
        "edge api endpoints can use wasm files uses the wasm file",
        "middleware can use wasm files can be called twice",
        "middleware can use wasm files lists the necessary wasm bindings in the manifest",
        "middleware can use wasm files uses the wasm file",
        "middleware can use wasm files with the experimental modes on uses the wasm file"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-compiler-can-import-blob-assets/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Edge Compiler can import asset assets allows to assets from node_modules",
        "Edge Compiler can import asset assets allows to fetch a remote URL",
        "Edge Compiler can import asset assets allows to fetch a remote URL with a path and basename",
        "Edge Compiler can import asset assets allows to fetch image assets",
        "Edge Compiler can import asset assets allows to fetch text assets",
        "Edge Compiler can import asset assets extracts all the assets from the bundle"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-compiler-module-exports-preference/index.test.ts": {
      "passed": [
        "Edge compiler module exports preference favors the browser export"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-configurable-runtime/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Configurable runtime for pages and API routes In start mode builds with API route on the edge runtime and page on the experimental edge runtime",
        "Configurable runtime for pages and API routes In start mode does not build with page on the edge runtime",
        "Configurable runtime for src/pages and API routes In start mode builds with API route on the edge runtime and page on the experimental edge runtime",
        "Configurable runtime for src/pages and API routes In start mode does not build with page on the edge runtime"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-pages-support/edge-document.test.ts": {
      "passed": [],
      "failed": [
        "edge render - custom _document with edge runtime should render page properly"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-pages-support/index.test.ts": {
      "passed": [
        "edge-render-getserversideprops should have correct query for pages/api",
        "edge-render-getserversideprops should have correct query for pages/api dynamic",
        "edge-render-getserversideprops should have correct query/params on /[id]",
        "edge-render-getserversideprops should have correct query/params on dynamic rewrite",
        "edge-render-getserversideprops should have correct query/params on index",
        "edge-render-getserversideprops should have correct query/params on rewrite",
        "edge-render-getserversideprops should have data routes in routes-manifest",
        "edge-render-getserversideprops should respond to _next/data for [id] correctly",
        "edge-render-getserversideprops should respond to _next/data for index correctly",
        "edge-render-getserversideprops should not output trace files for edge routes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-runtime-pages-api-route/edge-runtime-pages-api-route.test.ts": {
      "passed": [
        "Edge runtime pages-api route should work edge runtime",
        "Edge runtime pages-api route should work with node runtime"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/edge-runtime-uses-edge-light-import-specifier-for-packages/edge-runtime-uses-edge-light-import-specifier-for-packages.test.ts": {
      "passed": [
        "edge-runtime uses edge-light import specifier for packages app-dir imports the correct module",
        "edge-runtime uses edge-light import specifier for packages pages import the correct module",
        "edge-runtime uses edge-light import specifier for packages pages/api endpoints import the correct module"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/esm-externals/esm-externals.test.ts": {
      "passed": [
        "esm-externals app dir url /client should render the correct page",
        "esm-externals app dir url /client should return the correct SSR HTML",
        "esm-externals app dir url /server should render the correct page",
        "esm-externals app dir url /server should return the correct SSR HTML",
        "esm-externals pages url /ssg should render the correct page",
        "esm-externals pages url /ssg should return the correct SSR HTML",
        "esm-externals pages url /ssr should render the correct page",
        "esm-externals pages url /ssr should return the correct SSR HTML",
        "esm-externals pages url /static should render the correct page",
        "esm-externals pages url /static should return the correct SSR HTML"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/favicon-short-circuit/favicon-short-circuit.test.ts": {
      "passed": [
        "favicon-short-circuit should not short circuit the favicon in production"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/fetch-failures-have-good-stack-traces-in-edge-runtime/fetch-failures-have-good-stack-traces-in-edge-runtime.test.ts": {
      "passed": [],
      "failed": [
        "fetch failures have good stack traces in edge runtime when awaiting `fetch` using an unknown domain, stack traces are preserved"
      ],
      "pending": [
        "fetch failures have good stack traces in edge runtime when returning `fetch` using an unknown domain, stack traces are preserved"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/geist-font/geist-font.test.ts": {
      "passed": ["geist-font should work with geist font in pages router"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/getserversideprops/test/index.test.ts": {
      "passed": [
        "getServerSideProps should SSR getServerSideProps page correctly",
        "getServerSideProps should SSR normal page correctly",
        "getServerSideProps should allow POST request for getServerSideProps page",
        "getServerSideProps should always call getServerSideProps without caching",
        "getServerSideProps should dedupe server data requests",
        "getServerSideProps should handle throw ENOENT correctly",
        "getServerSideProps should have correct req.url and query for direct visit",
        "getServerSideProps should have correct req.url and query for direct visit dynamic page",
        "getServerSideProps should have correct req.url and query for direct visit dynamic page rewrite direct",
        "getServerSideProps should have correct req.url and query for direct visit dynamic page rewrite direct with internal query",
        "getServerSideProps should have correct req.url and query for direct visit dynamic page rewrite param",
        "getServerSideProps should have correct req.url and query for direct visit dynamic page with query",
        "getServerSideProps should have gssp in __NEXT_DATA__",
        "getServerSideProps should have original req.url for /_next/data request",
        "getServerSideProps should have original req.url for /_next/data request dynamic page",
        "getServerSideProps should have original req.url for /_next/data request dynamic page with query",
        "getServerSideProps should have original req.url for /_next/data request with query",
        "getServerSideProps should load a fast refresh page",
        "getServerSideProps should navigate between pages successfully",
        "getServerSideProps should navigate to a normal page and back",
        "getServerSideProps should not fetch data on mount",
        "getServerSideProps should not have gssp in __NEXT_DATA__ for non-GSSP page",
        "getServerSideProps should not re-call getServerSideProps when updating query",
        "getServerSideProps should not show error for accessing res after gssp returns",
        "getServerSideProps should not show error for invalid JSON returned from getServerSideProps",
        "getServerSideProps should not show error for invalid JSON returned from getStaticProps on CST",
        "getServerSideProps should not warn for accessing res after gssp returns",
        "getServerSideProps should output routes-manifest correctly",
        "getServerSideProps should parse query values on mount correctly",
        "getServerSideProps should pass query for data request",
        "getServerSideProps should pass query for data request on navigation",
        "getServerSideProps should provide correct query value for dynamic page",
        "getServerSideProps should reload page on failed data request",
        "getServerSideProps should render 404 correctly when notFound is returned (dynamic)",
        "getServerSideProps should render 404 correctly when notFound is returned (non-dynamic)",
        "getServerSideProps should render 404 correctly when notFound is returned client-transition (dynamic)",
        "getServerSideProps should render 404 correctly when notFound is returned client-transition (non-dynamic)",
        "getServerSideProps should render correctly when notFound is false (dynamic)",
        "getServerSideProps should render correctly when notFound is false (non-dynamic)",
        "getServerSideProps should respect custom caching header",
        "getServerSideProps should return data correctly",
        "getServerSideProps should return data correctly for dynamic page",
        "getServerSideProps should return data correctly when props is a promise",
        "getServerSideProps should set default caching header",
        "getServerSideProps should supply params values for catchall correctly",
        "getServerSideProps should supply query values SSR",
        "getServerSideProps should work with early request ending"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/handle-non-hoisted-swc-helpers/index.test.ts": {
      "passed": ["handle-non-hoisted-swc-helpers should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/hello-world/hello-world.test.ts": {
      "passed": [
        "hello-world should work using browser",
        "hello-world should work using cheerio",
        "hello-world should work with fetch",
        "hello-world should work with html"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-api-support/index.test.ts": {
      "passed": [
        "i18n API support should fallback rewrite non-matching API request",
        "i18n API support should respond to normal API request",
        "i18n API support should respond to normal dynamic API request"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-data-fetching-redirect/index.test.ts": {
      "passed": [
        "i18n-data-fetching-redirect Redirect to another locale gsp-blocking-redirect en -> sv",
        "i18n-data-fetching-redirect Redirect to another locale gsp-blocking-redirect sv -> en",
        "i18n-data-fetching-redirect Redirect to another locale gsp-fallback-redirect en -> sv",
        "i18n-data-fetching-redirect Redirect to another locale gsp-fallback-redirect sv -> en",
        "i18n-data-fetching-redirect Redirect to another locale gssp-redirect en -> sv",
        "i18n-data-fetching-redirect Redirect to another locale gssp-redirect sv -> en",
        "i18n-data-fetching-redirect Redirect to another locale next/link gsp-blocking-redirect en -> sv",
        "i18n-data-fetching-redirect Redirect to another locale next/link gsp-blocking-redirect sv -> en",
        "i18n-data-fetching-redirect Redirect to another locale next/link gsp-fallback-redirect en -> sv",
        "i18n-data-fetching-redirect Redirect to another locale next/link gsp-fallback-redirect sv -> en",
        "i18n-data-fetching-redirect Redirect to another locale next/link gssp-redirect en -> sv",
        "i18n-data-fetching-redirect Redirect to another locale next/link gssp-redirect sv -> en",
        "i18n-data-fetching-redirect Redirect to locale from context gsp-blocking-redirect en",
        "i18n-data-fetching-redirect Redirect to locale from context gsp-blocking-redirect sv",
        "i18n-data-fetching-redirect Redirect to locale from context gsp-fallback-redirect en",
        "i18n-data-fetching-redirect Redirect to locale from context gsp-fallback-redirect sv",
        "i18n-data-fetching-redirect Redirect to locale from context gssp-redirect en",
        "i18n-data-fetching-redirect Redirect to locale from context gssp-redirect sv",
        "i18n-data-fetching-redirect Redirect to locale from context next/link gsp-blocking-redirect en",
        "i18n-data-fetching-redirect Redirect to locale from context next/link gsp-blocking-redirect sv",
        "i18n-data-fetching-redirect Redirect to locale from context next/link gsp-fallback-redirect en",
        "i18n-data-fetching-redirect Redirect to locale from context next/link gsp-fallback-redirect sv",
        "i18n-data-fetching-redirect Redirect to locale from context next/link gssp-redirect en",
        "i18n-data-fetching-redirect Redirect to locale from context next/link gssp-redirect sv"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-data-route/i18n-data-route.test.ts": {
      "passed": [
        "i18n-data-route with locale prefix /en-CA should render /[slug]/about via /en-CA/blog/about",
        "i18n-data-route with locale prefix /en-CA should render /about via /en-CA/about",
        "i18n-data-route with locale prefix /en-CA should serve data for /[slug]/about",
        "i18n-data-route with locale prefix /en-CA should serve data for /about",
        "i18n-data-route with locale prefix /fr-CA should render /[slug]/about via /fr-CA/blog/about",
        "i18n-data-route with locale prefix /fr-CA should render /about via /fr-CA/about",
        "i18n-data-route with locale prefix /fr-CA should serve data for /[slug]/about",
        "i18n-data-route with locale prefix /fr-CA should serve data for /about",
        "i18n-data-route without locale prefix should render /[slug]/about via /blog/about",
        "i18n-data-route without locale prefix should render /about via /about",
        "i18n-data-route without locale prefix should serve data for /[slug]/about",
        "i18n-data-route without locale prefix should serve data for /about"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-default-locale-redirect/i18n-default-locale-redirect.test.ts": {
      "passed": [
        "i18-default-locale-redirect should not request a path prefixed with default locale",
        "i18-default-locale-redirect should request a path prefixed with non-default locale"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-disallow-multiple-locales/i18n-disallow-multiple-locales.test.ts": {
      "passed": [
        "i18n-disallow-multiple-locales /en should 200",
        "i18n-disallow-multiple-locales /en-US should 200",
        "i18n-disallow-multiple-locales /en-US/en should 404",
        "i18n-disallow-multiple-locales /en-US/en-US should 404",
        "i18n-disallow-multiple-locales /en-US/fr should 404",
        "i18n-disallow-multiple-locales /en-US/fr-BE should 404",
        "i18n-disallow-multiple-locales /en-US/nl should 404",
        "i18n-disallow-multiple-locales /en-US/nl-BE should 404",
        "i18n-disallow-multiple-locales /en-US/nl-NL should 404",
        "i18n-disallow-multiple-locales /en/en should 404",
        "i18n-disallow-multiple-locales /en/en-US should 404",
        "i18n-disallow-multiple-locales /en/fr should 404",
        "i18n-disallow-multiple-locales /en/fr-BE should 404",
        "i18n-disallow-multiple-locales /en/nl should 404",
        "i18n-disallow-multiple-locales /en/nl-BE should 404",
        "i18n-disallow-multiple-locales /en/nl-NL should 404",
        "i18n-disallow-multiple-locales /fr should 200",
        "i18n-disallow-multiple-locales /fr-BE should 200",
        "i18n-disallow-multiple-locales /fr-BE/en should 404",
        "i18n-disallow-multiple-locales /fr-BE/en-US should 404",
        "i18n-disallow-multiple-locales /fr-BE/fr should 404",
        "i18n-disallow-multiple-locales /fr-BE/fr-BE should 404",
        "i18n-disallow-multiple-locales /fr-BE/nl should 404",
        "i18n-disallow-multiple-locales /fr-BE/nl-BE should 404",
        "i18n-disallow-multiple-locales /fr-BE/nl-NL should 404",
        "i18n-disallow-multiple-locales /fr/en should 404",
        "i18n-disallow-multiple-locales /fr/en-US should 404",
        "i18n-disallow-multiple-locales /fr/fr should 404",
        "i18n-disallow-multiple-locales /fr/fr-BE should 404",
        "i18n-disallow-multiple-locales /fr/nl should 404",
        "i18n-disallow-multiple-locales /fr/nl-BE should 404",
        "i18n-disallow-multiple-locales /fr/nl-NL should 404",
        "i18n-disallow-multiple-locales /nl should 200",
        "i18n-disallow-multiple-locales /nl-BE should 200",
        "i18n-disallow-multiple-locales /nl-BE/en should 404",
        "i18n-disallow-multiple-locales /nl-BE/en-US should 404",
        "i18n-disallow-multiple-locales /nl-BE/fr should 404",
        "i18n-disallow-multiple-locales /nl-BE/fr-BE should 404",
        "i18n-disallow-multiple-locales /nl-BE/nl should 404",
        "i18n-disallow-multiple-locales /nl-BE/nl-BE should 404",
        "i18n-disallow-multiple-locales /nl-BE/nl-NL should 404",
        "i18n-disallow-multiple-locales /nl-NL should 200",
        "i18n-disallow-multiple-locales /nl-NL/en should 404",
        "i18n-disallow-multiple-locales /nl-NL/en-US should 404",
        "i18n-disallow-multiple-locales /nl-NL/fr should 404",
        "i18n-disallow-multiple-locales /nl-NL/fr-BE should 404",
        "i18n-disallow-multiple-locales /nl-NL/nl should 404",
        "i18n-disallow-multiple-locales /nl-NL/nl-BE should 404",
        "i18n-disallow-multiple-locales /nl-NL/nl-NL should 404",
        "i18n-disallow-multiple-locales /nl/en should 404",
        "i18n-disallow-multiple-locales /nl/en-US should 404",
        "i18n-disallow-multiple-locales /nl/fr should 404",
        "i18n-disallow-multiple-locales /nl/fr-BE should 404",
        "i18n-disallow-multiple-locales /nl/nl should 404",
        "i18n-disallow-multiple-locales /nl/nl-BE should 404",
        "i18n-disallow-multiple-locales /nl/nl-NL should 404",
        "i18n-disallow-multiple-locales should verify the default locale works"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-ignore-redirect-source-locale/redirects-with-basepath.test.ts": {
      "passed": [
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from and to: ",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from and to: /en",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from and to: /nl",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from and to: /sv",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from:  to: /",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from:  to: en",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from:  to: sv",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /en to: /",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /en to: en",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /en to: sv",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /nl to: /",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /nl to: en",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /nl to: sv",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /sv to: /",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /sv to: en",
        "i18n-ignore-redirect-source-locale with basepath get redirected to the new page, from: /sv to: sv"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-ignore-redirect-source-locale/redirects.test.ts": {
      "passed": [
        "i18n-ignore-redirect-source-locale get redirected to the new page, from and to: ",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from and to: /en",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from and to: /nl",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from and to: /sv",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from:  to: /",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from:  to: en",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from:  to: sv",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from: /en to: /",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from: /en to: en",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from: /en to: sv",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from: /nl to: /",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from: /nl to: en",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from: /nl to: sv",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from: /sv to: /",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from: /sv to: en",
        "i18n-ignore-redirect-source-locale get redirected to the new page, from: /sv to: sv"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-ignore-rewrite-source-locale/rewrites-with-basepath.test.ts": {
      "passed": [
        "i18n-ignore-rewrite-source-locale with basepath call api by skipping locale in rewrite, locale: ",
        "i18n-ignore-rewrite-source-locale with basepath call api by skipping locale in rewrite, locale: /en",
        "i18n-ignore-rewrite-source-locale with basepath call api by skipping locale in rewrite, locale: /nl",
        "i18n-ignore-rewrite-source-locale with basepath call api by skipping locale in rewrite, locale: /sv",
        "i18n-ignore-rewrite-source-locale with basepath get public file by skipping locale in rewrite, locale: ",
        "i18n-ignore-rewrite-source-locale with basepath get public file by skipping locale in rewrite, locale: /en",
        "i18n-ignore-rewrite-source-locale with basepath get public file by skipping locale in rewrite, locale: /nl",
        "i18n-ignore-rewrite-source-locale with basepath get public file by skipping locale in rewrite, locale: /sv"
      ],
      "failed": [],
      "pending": [
        "i18n-ignore-rewrite-source-locale with basepath get _next/static/ files by skipping locale in rewrite, locale: ",
        "i18n-ignore-rewrite-source-locale with basepath get _next/static/ files by skipping locale in rewrite, locale: /en",
        "i18n-ignore-rewrite-source-locale with basepath get _next/static/ files by skipping locale in rewrite, locale: /nl",
        "i18n-ignore-rewrite-source-locale with basepath get _next/static/ files by skipping locale in rewrite, locale: /sv"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-ignore-rewrite-source-locale/rewrites.test.ts": {
      "passed": [
        "i18n-ignore-rewrite-source-locale call api by skipping locale in rewrite, locale: ",
        "i18n-ignore-rewrite-source-locale call api by skipping locale in rewrite, locale: /en",
        "i18n-ignore-rewrite-source-locale call api by skipping locale in rewrite, locale: /nl",
        "i18n-ignore-rewrite-source-locale call api by skipping locale in rewrite, locale: /sv",
        "i18n-ignore-rewrite-source-locale get public file by skipping locale in rewrite, locale: ",
        "i18n-ignore-rewrite-source-locale get public file by skipping locale in rewrite, locale: /en",
        "i18n-ignore-rewrite-source-locale get public file by skipping locale in rewrite, locale: /nl",
        "i18n-ignore-rewrite-source-locale get public file by skipping locale in rewrite, locale: /sv"
      ],
      "failed": [],
      "pending": [
        "i18n-ignore-rewrite-source-locale get _next/static/ files by skipping locale in rewrite, locale: ",
        "i18n-ignore-rewrite-source-locale get _next/static/ files by skipping locale in rewrite, locale: /en",
        "i18n-ignore-rewrite-source-locale get _next/static/ files by skipping locale in rewrite, locale: /nl",
        "i18n-ignore-rewrite-source-locale get _next/static/ files by skipping locale in rewrite, locale: /sv"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-navigations-middleware/i18n-navigations-middleware.test.ts": {
      "passed": [
        "i18n-navigations-middleware should respect selected locale when navigating to a dynamic route",
        "i18n-navigations-middleware should respect selected locale when navigating to a static route"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/i18n-preferred-locale-detection/i18n-preferred-locale-detection.test.ts": {
      "passed": [
        "i18-preferred-locale-redirect should not request a path prefixed with my preferred detected locale when clicking link to index from a non-locale-prefixed path",
        "i18-preferred-locale-redirect should request a path prefixed with my preferred detected locale when accessing index",
        "i18-preferred-locale-redirect should request a path prefixed with my preferred detected locale when clicking link to index from a locale-prefixed path"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/ignore-invalid-popstateevent/with-i18n.test.ts": {
      "passed": [
        "i18n: Event with stale state - static route previously was dynamic Don't ignore event with different locale",
        "i18n: Event with stale state - static route previously was dynamic Ignore event with query param",
        "i18n: Event with stale state - static route previously was dynamic Ignore event without query param"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/ignore-invalid-popstateevent/without-i18n.test.ts": {
      "passed": [
        "Event with stale state - static route previously was dynamic Ignore event with query param",
        "Event with stale state - static route previously was dynamic Ignore event without query param"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/import-conditions/import-conditions.test.ts": {
      "passed": [
        "react version App Router Route Handler with edge runtime",
        "react version App Router Route Handler with nodejs runtime",
        "react version App Router page headers with edge runtime",
        "react version App Router page headers with nodejs runtime",
        "react version App Router page with edge runtime",
        "react version App Router page with nodejs runtime",
        "react version Pages Router page headers with edge runtime",
        "react version Pages Router page headers with nodejs runtime",
        "react version Pages Router page with edge runtime",
        "react version Pages Router page with nodejs runtime after hydration"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/import-meta/import-meta.test.ts": {
      "passed": [
        "import-meta import.meta.url should work in browser",
        "import-meta import.meta.url should work on the server"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/instrumentation-hook-src/instrumentation-hook-src.test.ts": {
      "passed": [
        "instrumentation-hook-rsc instrumentation should not overlap with a instrumentation page",
        "instrumentation-hook-rsc instrumentation should run the edge instrumentation compiled version with the edge runtime",
        "instrumentation-hook-rsc instrumentation should run the instrumentation hook"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/instrumentation-hook/flying-shuttle/flying-shuttle.test.ts": {
      "passed": [
        "instrumentation-hook - flying-shuttle should only register without errors"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/instrumentation-hook/instrumentation-hook.test.ts": {
      "passed": [
        "Instrumentation Hook general should not overlap with a instrumentation page",
        "Instrumentation Hook with-async-edge-page with-async-edge-page should run the instrumentation hook",
        "Instrumentation Hook with-async-node-page with-async-node-page should run the instrumentation hook",
        "Instrumentation Hook with-edge-api with-edge-api should run the instrumentation hook",
        "Instrumentation Hook with-edge-page with-edge-page should run the instrumentation hook",
        "Instrumentation Hook with-esm-import with-esm-import should run the instrumentation hook",
        "Instrumentation Hook with-middleware with-middleware should run the instrumentation hook",
        "Instrumentation Hook with-node-api with-node-api should run the instrumentation hook",
        "Instrumentation Hook with-node-page with-node-page should run the instrumentation hook"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/instrumentation-hook/register-once/register-once.test.ts": {
      "passed": [
        "instrumentation-hook - register-once should not error when concurrent requests are made",
        "instrumentation-hook - register-once should only register once"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/link-with-api-rewrite/index.test.ts": {
      "passed": [
        "link-with-api-rewrite should perform hard navigation for direct urls",
        "link-with-api-rewrite should perform hard navigation for rewritten urls"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/manual-client-base-path/index.test.ts": {
      "passed": [
        "manual-client-base-path should navigate correctly from another",
        "manual-client-base-path should navigate correctly from index",
        "manual-client-base-path should not update with basePath on mount /",
        "manual-client-base-path should not update with basePath on mount /another",
        "manual-client-base-path should not update with basePath on mount /dynamic/first",
        "manual-client-base-path should not update with basePath on mount /dynamic/second",
        "manual-client-base-path should not warn for flag in output"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-base-path/test/index.test.ts": {
      "passed": [
        "Middleware base tests router.query must exist when Link clicked page routing",
        "Middleware base tests should execute from absolute paths"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-custom-matchers-basepath/test/index.test.ts": {
      "passed": [
        "Middleware custom matchers basePath should not match",
        "Middleware custom matchers basePath should match",
        "Middleware custom matchers basePath should match has query on client routing"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-custom-matchers-i18n/test/index.test.ts": {
      "passed": [
        "Middleware custom matchers i18n should not match",
        "Middleware custom matchers with root should not match"
      ],
      "failed": [
        "Middleware custom matchers i18n should match",
        "Middleware custom matchers i18n should match has query on client routing"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-custom-matchers/test/index.test.ts": {
      "passed": [
        "Middleware custom matchers should match has cookie",
        "Middleware custom matchers should match has cookie on client routing",
        "Middleware custom matchers should match has header",
        "Middleware custom matchers should match has header value",
        "Middleware custom matchers should match has host",
        "Middleware custom matchers should match has query",
        "Middleware custom matchers should match has query on client routing",
        "Middleware custom matchers should match missing header correctly",
        "Middleware custom matchers should match missing query correctly",
        "Middleware custom matchers should match source path"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-dynamic-basepath-matcher/test/index.test.ts": {
      "passed": [
        "Middleware custom matchers basePath should match",
        "Middleware custom matchers basePath should match query path",
        "Middleware custom matchers basePath should not match"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-fetches-with-any-http-method/index.test.ts": {
      "passed": [
        "Middleware fetches with any HTTP method passes the method on a direct fetch request",
        "Middleware fetches with any HTTP method passes the method when providing a Request object"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-fetches-with-body/index.test.ts": {
      "passed": [
        "Middleware fetches with body should return 413 for body equal to 10mb",
        "Middleware fetches with body with bodyParser = false should be able to send and return with body greater than 16KiB",
        "Middleware fetches with body with bodyParser = false should be able to send and return with body size equal to 16KiB",
        "Middleware fetches with body with custom bodyParser sizeLimit (5kb) should be able to send and return body size equal to 5kb",
        "Middleware fetches with body with custom bodyParser sizeLimit (5kb) should return 413 for body greater than 5kb",
        "Middleware fetches with body with custom bodyParser sizeLimit (5mb) should be able to send and return body size equal to 5mb",
        "Middleware fetches with body with custom bodyParser sizeLimit (5mb) should return 413 for body greater than 5mb",
        "Middleware fetches with body with default bodyParser sizeLimit (1mb) should be able to send and return body greater than default highWaterMark (16KiB)",
        "Middleware fetches with body with default bodyParser sizeLimit (1mb) should be able to send and return body size equal to 1mb",
        "Middleware fetches with body with default bodyParser sizeLimit (1mb) should return 413 for body greater than 1mb"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-general/test/index.test.ts": {
      "passed": [
        "Middleware Runtime with i18n allows shallow linking with middleware",
        "Middleware Runtime with i18n allows to access env variables",
        "Middleware Runtime with i18n hard-navigates when the data request failed",
        "Middleware Runtime with i18n passes search params with rewrites",
        "Middleware Runtime with i18n should accept a URL instance for fetch",
        "Middleware Runtime with i18n should add a rewrite header on data requests for rewrites",
        "Middleware Runtime with i18n should allow to abort a fetch request",
        "Middleware Runtime with i18n should be able to rewrite on _next/static/chunks/pages/ 404",
        "Middleware Runtime with i18n should contain `globalThis`",
        "Middleware Runtime with i18n should contain crypto APIs",
        "Middleware Runtime with i18n should have correct dynamic route params for middleware rewrite to dynamic route",
        "Middleware Runtime with i18n should have correct dynamic route params on client-transition to dynamic route",
        "Middleware Runtime with i18n should have correct query values for rewrite to ssg page",
        "Middleware Runtime with i18n should have correct route params for chained rewrite from middleware to config rewrite",
        "Middleware Runtime with i18n should have correct route params for rewrite from config dynamic route",
        "Middleware Runtime with i18n should have correct route params for rewrite from config non-dynamic route",
        "Middleware Runtime with i18n should have init header for NextResponse.redirect",
        "Middleware Runtime with i18n should keep non data requests in their original shape",
        "Middleware Runtime with i18n should normalize data requests into page requests",
        "Middleware Runtime with i18n should not run middleware for on-demand revalidate",
        "Middleware Runtime with i18n should redirect the same for direct visit and client-transition",
        "Middleware Runtime with i18n should respond with 400 on decode failure",
        "Middleware Runtime with i18n should rewrite correctly for non-SSG/SSP page",
        "Middleware Runtime with i18n should rewrite the same for direct visit and client-transition",
        "Middleware Runtime with i18n should set fetch user agent correctly",
        "Middleware Runtime with i18n should throw when using NextRequest with a relative URL",
        "Middleware Runtime with i18n should throw when using NextResponse.rewrite with a relative URL",
        "Middleware Runtime with i18n should throw when using Request with a relative URL",
        "Middleware Runtime with i18n should throw when using URL with a relative URL",
        "Middleware Runtime with i18n should trigger middleware for data requests",
        "Middleware Runtime with i18n should validate & parse request url from a dynamic route with params",
        "Middleware Runtime with i18n should validate & parse request url from a dynamic route with params and no query",
        "Middleware Runtime with i18n should validate & parse request url from a dynamic route with params and query",
        "Middleware Runtime with i18n should validate & parse request url from any route",
        "Middleware Runtime with i18n should warn when using NextResponse.redirect with a relative URL",
        "Middleware Runtime with i18n should warn when using Response.redirect with a relative URL",
        "Middleware Runtime with i18n should work with notFound: true correctly",
        "Middleware Runtime without i18n allows shallow linking with middleware",
        "Middleware Runtime without i18n allows to access env variables",
        "Middleware Runtime without i18n hard-navigates when the data request failed",
        "Middleware Runtime without i18n passes search params with rewrites",
        "Middleware Runtime without i18n should accept a URL instance for fetch",
        "Middleware Runtime without i18n should add a rewrite header on data requests for rewrites",
        "Middleware Runtime without i18n should allow to abort a fetch request",
        "Middleware Runtime without i18n should be able to rewrite on _next/static/chunks/pages/ 404",
        "Middleware Runtime without i18n should contain `globalThis`",
        "Middleware Runtime without i18n should contain crypto APIs",
        "Middleware Runtime without i18n should have correct dynamic route params for middleware rewrite to dynamic route",
        "Middleware Runtime without i18n should have correct dynamic route params on client-transition to dynamic route",
        "Middleware Runtime without i18n should have correct query values for rewrite to ssg page",
        "Middleware Runtime without i18n should have correct route params for chained rewrite from middleware to config rewrite",
        "Middleware Runtime without i18n should have correct route params for rewrite from config dynamic route",
        "Middleware Runtime without i18n should have correct route params for rewrite from config non-dynamic route",
        "Middleware Runtime without i18n should have init header for NextResponse.redirect",
        "Middleware Runtime without i18n should keep non data requests in their original shape",
        "Middleware Runtime without i18n should normalize data requests into page requests",
        "Middleware Runtime without i18n should not run middleware for on-demand revalidate",
        "Middleware Runtime without i18n should redirect the same for direct visit and client-transition",
        "Middleware Runtime without i18n should respond with 400 on decode failure",
        "Middleware Runtime without i18n should rewrite correctly for non-SSG/SSP page",
        "Middleware Runtime without i18n should rewrite the same for direct visit and client-transition",
        "Middleware Runtime without i18n should set fetch user agent correctly",
        "Middleware Runtime without i18n should throw when using NextRequest with a relative URL",
        "Middleware Runtime without i18n should throw when using NextResponse.rewrite with a relative URL",
        "Middleware Runtime without i18n should throw when using Request with a relative URL",
        "Middleware Runtime without i18n should throw when using URL with a relative URL",
        "Middleware Runtime without i18n should trigger middleware for data requests",
        "Middleware Runtime without i18n should validate & parse request url from a dynamic route with params and query",
        "Middleware Runtime without i18n should validate & parse request url from any route",
        "Middleware Runtime without i18n should warn when using NextResponse.redirect with a relative URL",
        "Middleware Runtime without i18n should warn when using Response.redirect with a relative URL",
        "Middleware Runtime without i18n should work with notFound: true correctly",
        "Middleware Runtime with i18n should have valid middleware field in manifest",
        "Middleware Runtime without i18n should have valid middleware field in manifest",
        "Middleware Runtime with i18n should have correct files in manifest",
        "Middleware Runtime without i18n should have correct files in manifest"
      ],
      "failed": [
        "Middleware Runtime with i18n should have the custom config in the manifest",
        "Middleware Runtime without i18n should have the custom config in the manifest"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-matcher/index.test.ts": {
      "passed": [
        "Middleware can set the matcher in its config adds the header for a matched data path (with header)",
        "Middleware can set the matcher in its config adds the header for a matched data path (without header)",
        "Middleware can set the matcher in its config adds the header for a matched path",
        "Middleware can set the matcher in its config adds the header for another matched data path",
        "Middleware can set the matcher in its config adds the header for another matched path",
        "Middleware can set the matcher in its config does add the header for root data request",
        "Middleware can set the matcher in its config does add the header for root request",
        "Middleware can set the matcher in its config should load matches in client matchers correctly",
        "Middleware can set the matcher in its config should navigate correctly with matchers",
        "using a single matcher adds the header for a matched data path (without header)",
        "using a single matcher adds the header for a matched path",
        "using a single matcher adds the headers for a matched data path (with header)",
        "using a single matcher does not add the header for an unmatched path",
        "using a single matcher does not add the header for root data request",
        "using a single matcher does not add the header for root request",
        "using a single matcher with i18n and basePath and trailingSlash does not add the header for an unmatched path",
        "using a single matcher with i18n and basePath does not add the header for an unmatched path",
        "using a single matcher with i18n and trailingSlash does not add the header for an unmatched path",
        "using a single matcher with i18n does not add the header for an unmatched path",
        "using root matcher adds the header for a matched data path (with header)",
        "using root matcher adds the header for a matched data path (without header)",
        "using root matcher adds the header to the /",
        "using a single matcher with i18n adds the header for a matched path",
        "using a single matcher with i18n adds the header for a mathed root path with /index",
        "using a single matcher with i18n adds the headers for a matched data path",
        "using a single matcher with i18n and basePath adds the header for a matched path",
        "using a single matcher with i18n and basePath adds the header for a mathed root path with /index",
        "using a single matcher with i18n and basePath adds the headers for a matched data path",
        "using a single matcher with i18n and basePath and trailingSlash adds the header for a matched path",
        "using a single matcher with i18n and basePath and trailingSlash adds the header for a mathed root path with /index",
        "using a single matcher with i18n and basePath and trailingSlash adds the headers for a matched data path",
        "using a single matcher with i18n and trailingSlash adds the header for a matched path",
        "using a single matcher with i18n and trailingSlash adds the header for a mathed root path with /index",
        "using a single matcher with i18n and trailingSlash adds the headers for a matched data path",
        "using root matcher adds the header to the /index"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-redirects/test/index.test.ts": {
      "passed": [
        "Middleware Redirect /fr should implement internal redirects",
        "Middleware Redirect /fr should redirect",
        "Middleware Redirect /fr should redirect (infinite-loop)",
        "Middleware Redirect /fr should redirect cleanly with the original url param",
        "Middleware Redirect /fr should redirect multiple times",
        "Middleware Redirect /fr should redirect to api route with locale",
        "Middleware Redirect /fr should redirect with a fragment",
        "Middleware Redirect does not include the locale in redirects by default",
        "Middleware Redirect should implement internal redirects",
        "Middleware Redirect should redirect",
        "Middleware Redirect should redirect (infinite-loop)",
        "Middleware Redirect should redirect cleanly with the original url param",
        "Middleware Redirect should redirect correctly with redirect in next.config.js",
        "Middleware Redirect should redirect multiple times",
        "Middleware Redirect should redirect to api route with locale",
        "Middleware Redirect should redirect to data urls with data requests and internal redirects",
        "Middleware Redirect should redirect to external urls with data requests and external redirects",
        "Middleware Redirect should redirect with a fragment"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-request-header-overrides/test/index.test.ts": {
      "passed": [
        "Middleware Request Headers Overrides Edge Functions Backend Adds new headers",
        "Middleware Request Headers Overrides Edge Functions Backend Deletes headers",
        "Middleware Request Headers Overrides Edge Functions Backend Updates headers",
        "Middleware Request Headers Overrides Serverless Functions Backend Adds new headers",
        "Middleware Request Headers Overrides Serverless Functions Backend Deletes headers",
        "Middleware Request Headers Overrides Serverless Functions Backend Updates headers",
        "Middleware Request Headers Overrides getServerSideProps Backend Adds new headers",
        "Middleware Request Headers Overrides getServerSideProps Backend Deletes headers",
        "Middleware Request Headers Overrides getServerSideProps Backend Updates headers"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-responses/test/index.test.ts": {
      "passed": [
        "Middleware Responses /fr responds with multiple cookies",
        "Middleware Responses /fr should not fail when returning a stream",
        "Middleware Responses /fr should not fail when returning a text body",
        "Middleware Responses /fr should respond appending headers headers",
        "Middleware Responses /fr should respond with a 401 status code",
        "Middleware Responses /fr should respond with one header",
        "Middleware Responses /fr should respond with two headers",
        "Middleware Responses responds with multiple cookies",
        "Middleware Responses should not fail when returning a stream",
        "Middleware Responses should not fail when returning a text body",
        "Middleware Responses should respond appending headers headers",
        "Middleware Responses should respond with a 401 status code",
        "Middleware Responses should respond with one header",
        "Middleware Responses should respond with two headers"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-rewrites/test/index.test.ts": {
      "passed": [
        "Middleware Rewrite /fr can rewrite from path with colon",
        "Middleware Rewrite /fr can rewrite from path with colon and retain query parameter",
        "Middleware Rewrite /fr can rewrite to path with colon",
        "Middleware Rewrite /fr can rewrite to path with colon and retain query parameter",
        "Middleware Rewrite /fr should add a cookie and rewrite to a/b test",
        "Middleware Rewrite /fr should clear query parameters",
        "Middleware Rewrite /fr should correctly rewriting to a different dynamic path",
        "Middleware Rewrite /fr should not call middleware with shallow push",
        "Middleware Rewrite /fr should rewrite to Vercel",
        "Middleware Rewrite /fr should rewrite to about page",
        "Middleware Rewrite /fr should rewrite when not using localhost",
        "Middleware Rewrite /fr should rewrite without hard navigation",
        "Middleware Rewrite /fr support colons in path",
        "Middleware Rewrite can rewrite from path with colon",
        "Middleware Rewrite can rewrite from path with colon and retain query parameter",
        "Middleware Rewrite can rewrite to path with colon",
        "Middleware Rewrite can rewrite to path with colon and retain query parameter",
        "Middleware Rewrite should add a cookie and rewrite to a/b test",
        "Middleware Rewrite should allow to opt-out prefetch caching",
        "Middleware Rewrite should allow to rewrite keeping the locale in pathname",
        "Middleware Rewrite should allow to rewrite to a `afterFiles` rewrite config",
        "Middleware Rewrite should allow to rewrite to a `beforeFiles` rewrite config",
        "Middleware Rewrite should allow to rewrite to a different locale",
        "Middleware Rewrite should allow to switch locales",
        "Middleware Rewrite should behave consistently on recursive rewrites",
        "Middleware Rewrite should clear query parameters",
        "Middleware Rewrite should correctly rewriting to a different dynamic path",
        "Middleware Rewrite should handle middleware rewrite with body correctly",
        "Middleware Rewrite should handle next.config.js rewrite with body correctly",
        "Middleware Rewrite should handle shallow navigation correctly (dynamic page)",
        "Middleware Rewrite should handle shallow navigation correctly (non-dynamic page)",
        "Middleware Rewrite should handle static dynamic rewrite from middleware correctly",
        "Middleware Rewrite should handle static rewrite from next.config.js correctly",
        "Middleware Rewrite should hard navigate on 404 for data request",
        "Middleware Rewrite should have correct query info for dynamic route after query hydration",
        "Middleware Rewrite should have props for afterFiles rewrite to SSG page",
        "Middleware Rewrite should not call middleware with shallow push",
        "Middleware Rewrite should not have un-necessary data request on rewrite",
        "Middleware Rewrite should not have unexpected errors",
        "Middleware Rewrite should not mix component cache when navigating between dynamic routes",
        "Middleware Rewrite should not prefetch non-SSG routes",
        "Middleware Rewrite should opt out of prefetch caching for dynamic routes",
        "Middleware Rewrite should override with rewrite externally correctly",
        "Middleware Rewrite should override with rewrite internally correctly",
        "Middleware Rewrite should resolve dynamic route after rewrite correctly",
        "Middleware Rewrite should return HTML/data correctly for pre-rendered page",
        "Middleware Rewrite should rewrite correctly when navigating via history",
        "Middleware Rewrite should rewrite correctly when navigating via history after query update",
        "Middleware Rewrite should rewrite to Vercel",
        "Middleware Rewrite should rewrite to about page",
        "Middleware Rewrite should rewrite to data urls for incoming data request internally rewritten",
        "Middleware Rewrite should rewrite to fallback: true page successfully",
        "Middleware Rewrite should rewrite to the external url for incoming data request externally rewritten",
        "Middleware Rewrite should rewrite when not using localhost",
        "Middleware Rewrite should rewrite without hard navigation",
        "Middleware Rewrite support colons in path"
      ],
      "failed": [
        "Middleware Rewrite should handle catch-all rewrite correctly"
      ],
      "pending": [
        "Middleware Rewrite includes the locale in rewrites by default"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-shallow-link/index.test.ts": {
      "passed": ["browser-shallow-navigation should render the correct page"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/middleware-trailing-slash/test/index.test.ts": {
      "passed": [
        "Middleware Runtime trailing slash allows shallow linking with middleware",
        "Middleware Runtime trailing slash should add a rewrite header on data requests for rewrites",
        "Middleware Runtime trailing slash should have correct dynamic route params for middleware rewrite to dynamic route",
        "Middleware Runtime trailing slash should have correct dynamic route params on client-transition to dynamic route",
        "Middleware Runtime trailing slash should have correct query values for rewrite to ssg page",
        "Middleware Runtime trailing slash should have correct route params for chained rewrite from middleware to config rewrite",
        "Middleware Runtime trailing slash should have correct route params for rewrite from config dynamic route",
        "Middleware Runtime trailing slash should have correct route params for rewrite from config non-dynamic route",
        "Middleware Runtime trailing slash should have init header for NextResponse.redirect",
        "Middleware Runtime trailing slash should keep non data requests in their original shape",
        "Middleware Runtime trailing slash should normalize data requests into page requests",
        "Middleware Runtime trailing slash should not run middleware for on-demand revalidate",
        "Middleware Runtime trailing slash should redirect the same for direct visit and client-transition",
        "Middleware Runtime trailing slash should respond with 400 on decode failure",
        "Middleware Runtime trailing slash should rewrite correctly for non-SSG/SSP page",
        "Middleware Runtime trailing slash should rewrite the same for direct visit and client-transition",
        "Middleware Runtime trailing slash should trigger middleware for data requests",
        "Middleware Runtime trailing slash should validate & parse request url from any route",
        "Middleware Runtime trailing slash with .html extension should work using browser",
        "Middleware Runtime trailing slash with .html extension should work when navigating",
        "Middleware Runtime trailing slash with .html extension should work when requesting the page directly",
        "Middleware Runtime trailing slash without .html extension should work using browser",
        "Middleware Runtime trailing slash without .html extension should work when navigating",
        "Middleware Runtime trailing slash without .html extension should work when requesting the page directly",
        "Middleware Runtime trailing slash should have correct files in manifest",
        "Middleware Runtime trailing slash should have valid middleware field in manifest"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/module-layer/module-layer.test.ts": {
      "passed": [
        "module layer with server-only in server targets should contain client react exports for pages api",
        "module layer with server-only in server targets should log the build info properly",
        "module layer with server-only in server targets should render installed react-server condition for middleware",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /api/default",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /api/default-edge",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /api/mixed",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /api/server-only",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /api/server-only-edge",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /app/client",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /app/client-edge",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /app/route",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /app/route-edge",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /app/server",
        "module layer with server-only in server targets should render routes marked with restriction marks without errors /app/server-edge"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/multi-zone/multi-zone.test.ts": {
      "passed": [
        "multi-zone should correctly respond for /",
        "multi-zone should correctly respond for /blog/post-1",
        "multi-zone should correctly respond for /guest",
        "multi-zone should correctly respond for /guest/another/post-1",
        "multi-zone should correctly respond for /guest/blog/post-1"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/new-link-behavior/child-a-tag-error.test.ts": {
      "passed": [
        "New Link Behavior with <a> child should throw error with <a> child"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/new-link-behavior/index.test.ts": {
      "passed": [
        "New Link Behavior should handle onclick",
        "New Link Behavior should handle preventdefault",
        "New Link Behavior should navigate to /about",
        "New Link Behavior should render link with <a>",
        "New Link Behavior should render link with classname",
        "New Link Behavior should render link with id",
        "New Link Behavior should render link with multiple children"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/new-link-behavior/material-ui.test.ts": {
      "passed": [
        "New Link Behavior with material-ui should render MuiLink with <a>"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/new-link-behavior/stitches.test.ts": {
      "passed": ["New Link Behavior with stitches should render <a>"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/new-link-behavior/typescript.test.ts": {
      "passed": [
        "New Link Behavior should apply ref on link",
        "New Link Behavior should render link with <a>"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-config-warnings/esm-externals-false/esm-externals-false.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "next-config-warnings - esm-externals-false should contain esmExternals feature usage in telemetry",
        "next-config-warnings - esm-externals-false should warn when using ESM externals: false"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-font/basepath.test.ts": {
      "passed": ["next/font/google basepath preload correct files"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-font/google-fetch-error.test.ts": {
      "passed": [],
      "failed": ["next/font/google fetch error should error when not in dev"],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-font/index.test.ts": {
      "passed": [
        "next/font Fallback fontfaces google Fraunces",
        "next/font Fallback fontfaces google Indie flower",
        "next/font Fallback fontfaces local Fraunces",
        "next/font Fallback fontfaces local Indie flower",
        "next/font Fallback fontfaces local Roboto multiple weights and styles",
        "next/font Fallback fontfaces local Roboto multiple weights and styles - variable 1",
        "next/font Fallback fontfaces local Roboto multiple weights and styles - variable 2",
        "next/font computed styles page using fallback fonts",
        "next/font computed styles page using variables",
        "next/font computed styles page with fonts",
        "next/font import values Variable font without weight range",
        "next/font import values page with font",
        "next/font import values page with local fonts",
        "next/font preload font without preloadable subsets",
        "next/font preload font without size adjust",
        "next/font preload google fonts with multiple weights/styles",
        "next/font preload page with fonts",
        "next/font preload page with local fonts",
        "next/font preload page without fonts"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-font/with-font-declarations-file.test.ts": {
      "passed": [],
      "failed": [
        "next/font/google with-font-declarations-file preload correct files at /inter",
        "next/font/google with-font-declarations-file preload correct files at /local-font",
        "next/font/google with-font-declarations-file preload correct files at /roboto"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-font/with-proxy.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "next/font/google with proxy should use a proxy agent when proxy environment variable is set"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-font/without-preloaded-fonts.test.ts": {
      "passed": [
        "next/font/google no preloads with _app without fonts",
        "next/font/google no preloads with _app without preload",
        "next/font/google without-preloaded-fonts without _app without fonts",
        "next/font/google without-preloaded-fonts without _app without preload"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-head/index.test.ts": {
      "passed": [
        "next/head should have correct head tags after hydration",
        "next/head should have correct head tags from a fragment",
        "next/head should have correct head tags in initial document",
        "next/head should have current head tags from a _document getInitialProps",
        "next/head should place charset element at the top of <head>"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-image-forward-ref/index.test.ts": {
      "passed": [
        "next-image-forward-ref allows framer-motion to animate opacity"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-phase/index.test.ts": {
      "passed": ["next-phase should render page with next phase correctly"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-script/index.test.ts": {
      "passed": [
        "beforeInteractive in document Head Script is injected server-side",
        "beforeInteractive in document body Script is injected server-side",
        "empty strategy in document Head Script is injected server-side",
        "empty strategy in document body Script is injected server-side"
      ],
      "failed": [],
      "pending": [
        "experimental.nextScriptWorkers experimental.nextScriptWorkers: false with no Partytown dependency Partytown snippet is not injected to head if not enabled in configuration",
        "experimental.nextScriptWorkers experimental.nextScriptWorkers: true with config override Partytown config script is overwritten",
        "experimental.nextScriptWorkers experimental.nextScriptWorkers: true with required Partytown dependency for external script Partytown snippets are injected to head if enabled in configuration",
        "experimental.nextScriptWorkers experimental.nextScriptWorkers: true with required Partytown dependency for external script Worker scripts are modified by Partytown to execute on a worker thread",
        "experimental.nextScriptWorkers experimental.nextScriptWorkers: true with required Partytown dependency for inline script Inline worker script through children is modified by Partytown to execute on a worker thread",
        "experimental.nextScriptWorkers experimental.nextScriptWorkers: true with required Partytown dependency for inline script Inline worker script through dangerouslySetInnerHtml is modified by Partytown to execute on a worker thread"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/next-test/next-test.test.ts": {
      "passed": [
        "next test first time setup should correctly install missing dependencies and generate missing configuration file for first-time-setup-js",
        "next test first time setup should correctly install missing dependencies and generate missing configuration file for first-time-setup-ts",
        "next test first time setup should fail if next.js config is missing experimental#testProxy",
        "next test should pass args to test runner",
        "next test test runner validation should validate configured/specified test runner"
      ],
      "failed": [],
      "pending": ["next test should execute playwright tests"],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/no-eslint-warn-with-no-eslint-config/index.test.ts": {
      "passed": [
        "no-eslint-warn-with-no-eslint-config should not have eslint warnings when no eslint config",
        "no-eslint-warn-with-no-eslint-config should not warn with eslint config in package.json",
        "no-eslint-warn-with-no-eslint-config should render",
        "no-eslint-warn-with-no-eslint-config should warn with empty eslint config in package.json",
        "no-eslint-warn-with-no-eslint-config should warn with empty eslintrc"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/nonce-head-manager/index.test.ts": {
      "passed": [
        "nonce head manager should not re-execute the script when re-rendering",
        "nonce head manager should not re-execute the script when re-rendering with CSP header"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/og-api/index.test.ts": {
      "passed": [
        "og-api should respond from index",
        "og-api should work in app route",
        "og-api should work in app route in node runtime",
        "og-api should work in pages/api"
      ],
      "failed": ["og-api should copy files correctly"],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/og-routes-custom-font/og-routes-custom-font.test.ts": {
      "passed": [
        "og-routes-custom-font should render og with custom font for app routes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/on-request-error/basic/basic.test.ts": {
      "passed": [
        "on-request-error - basic app router should catch app routes error in edge runtime",
        "on-request-error - basic app router should catch app routes error in node runtime",
        "on-request-error - basic app router should catch client component page error in edge runtime",
        "on-request-error - basic app router should catch client component page error in node runtime",
        "on-request-error - basic app router should catch server component page error in edge runtime",
        "on-request-error - basic app router should catch server component page error in node runtime",
        "on-request-error - basic middleware should catch middleware error",
        "on-request-error - basic pages router should catch pages router api error in edge runtime",
        "on-request-error - basic pages router should catch pages router api error in node runtime",
        "on-request-error - basic pages router should catch pages router page error in edge runtime",
        "on-request-error - basic pages router should catch pages router page error in node runtime"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/on-request-error/dynamic-routes/dynamic-routes.test.ts": {
      "passed": [
        "on-request-error - dynamic-routes app router should catch app router dynamic page error with search params",
        "on-request-error - dynamic-routes app router should catch app router dynamic routes error with search params",
        "on-request-error - dynamic-routes app router should catch suspense rendering page error in node runtime",
        "on-request-error - dynamic-routes pages router should catch pages router dynamic API route error with search params",
        "on-request-error - dynamic-routes pages router should catch pages router dynamic page error with search params"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/on-request-error/isr/isr.test.ts": {
      "passed": [
        "on-request-error - isr app router ISR should capture correct reason for build errored route",
        "on-request-error - isr app router ISR should capture correct reason for on-demand revalidated page",
        "on-request-error - isr app router ISR should capture correct reason for on-demand revalidated route",
        "on-request-error - isr app router ISR should capture correct reason for stale errored page",
        "on-request-error - isr app router ISR should capture revalidate from server action",
        "on-request-error - isr pages router ISR should capture correct reason for on-demand revalidated page",
        "on-request-error - isr pages router ISR should capture correct reason for stale errored page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/on-request-error/server-action-error/server-action-error.test.ts": {
      "passed": [
        "on-request-error - server-action-error should catch server action error in listener callback in edge runtime",
        "on-request-error - server-action-error should catch server action error in listener callback in nodejs runtime",
        "on-request-error - server-action-error should catch the server action form error in edge runtime",
        "on-request-error - server-action-error should catch the server action form error in nodejs runtime"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/on-request-error/skip-next-internal-error/skip-next-internal-error.test.ts": {
      "passed": [
        "on-request-error - skip-next-internal-error app router API should not catch server component not-found errors",
        "on-request-error - skip-next-internal-error app router API should not catch server component redirect errors",
        "on-request-error - skip-next-internal-error app router render should not catch client component dynamic usage errors",
        "on-request-error - skip-next-internal-error app router render should not catch client component not-found errors",
        "on-request-error - skip-next-internal-error app router render should not catch client component redirect errors",
        "on-request-error - skip-next-internal-error app router render should not catch next dynamic no-ssr errors",
        "on-request-error - skip-next-internal-error app router render should not catch server action not-found errors",
        "on-request-error - skip-next-internal-error app router render should not catch server action redirect errors",
        "on-request-error - skip-next-internal-error app router render should not catch server component dynamic usage errors",
        "on-request-error - skip-next-internal-error app router render should not catch server component not-found errors",
        "on-request-error - skip-next-internal-error app router render should not catch server component redirect errors"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/opentelemetry/client-trace-metadata/client-trace-metadata.test.ts": {
      "passed": [
        "clientTraceMetadata hard loading a dynamic page twice should yield different dynamic trace data",
        "clientTraceMetadata next start only should inject propagation data for a statically server-side-rendered page",
        "clientTraceMetadata next start only soft navigating to a dynamic page should not transform previous propagation data",
        "clientTraceMetadata next start only soft navigating to a static page should not transform previous propagation data",
        "clientTraceMetadata should inject propagation data for a dynamically server-side-rendered page",
        "clientTraceMetadata should only insert the client trace metadata once"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/opentelemetry/instrumentation/instrumentation-pages-app-only.test.ts": {
      "passed": [
        "instrumentation app should start and serve correctly",
        "instrumentation app src/ should start and serve correctly",
        "instrumentation pages should start and serve correctly",
        "instrumentation pages src/ should start and serve correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/opentelemetry/instrumentation/opentelemetry.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "opentelemetry incoming context propagation app router should handle RSC with fetch",
        "opentelemetry incoming context propagation app router should handle RSC with fetch in RSC mode",
        "opentelemetry incoming context propagation app router should handle RSC with fetch on edge",
        "opentelemetry incoming context propagation app router should handle route handlers in app router",
        "opentelemetry incoming context propagation app router should handle route handlers in app router on edge",
        "opentelemetry incoming context propagation app router should propagate custom context without span",
        "opentelemetry incoming context propagation app router should trace middleware",
        "opentelemetry incoming context propagation pages should handle api routes in pages",
        "opentelemetry incoming context propagation pages should handle api routes in pages on edge",
        "opentelemetry incoming context propagation pages should handle getServerSideProps",
        "opentelemetry incoming context propagation pages should handle getServerSideProps on edge",
        "opentelemetry incoming context propagation pages should handle getStaticProps when fallback: 'blocking'",
        "opentelemetry root context app router should handle RSC with fetch",
        "opentelemetry root context app router should handle RSC with fetch in RSC mode",
        "opentelemetry root context app router should handle RSC with fetch on edge",
        "opentelemetry root context app router should handle route handlers in app router",
        "opentelemetry root context app router should handle route handlers in app router on edge",
        "opentelemetry root context app router should propagate custom context without span",
        "opentelemetry root context app router should trace middleware",
        "opentelemetry root context pages should handle api routes in pages",
        "opentelemetry root context pages should handle api routes in pages on edge",
        "opentelemetry root context pages should handle getServerSideProps",
        "opentelemetry root context pages should handle getServerSideProps on edge",
        "opentelemetry root context pages should handle getStaticProps when fallback: 'blocking'",
        "opentelemetry with disabled fetch tracing root context app router with disabled fetch should handle RSC with disabled fetch"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/optimized-loading/test/index.test.ts": {
      "passed": [
        "Optimized loading page / should load scripts with defer in head",
        "Optimized loading page / should not have JS preload links",
        "Optimized loading page / should render the page /",
        "Optimized loading page /page1 should load scripts with defer in head",
        "Optimized loading page /page1 should not have JS preload links",
        "Optimized loading page /page1 should render the page /page1"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/pages-performance-mark/index.test.ts": {
      "passed": [
        "pages performance mark should render the page correctly without crashing with performance mark"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/postcss-config-cjs/index.test.ts": {
      "passed": ["postcss-config-cjs works with postcss.config.cjs files"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/prerender-crawler.test.ts": {
      "passed": [
        "Prerender crawler handling should block for crawler correctly",
        "Prerender crawler handling should return fallback for non-crawler correctly",
        "Prerender crawler handling should return prerendered page for correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/prerender-native-module.test.ts": {
      "passed": [
        "prerender native module should render /blog/first correctly",
        "prerender native module should render /blog/second correctly",
        "prerender native module should render index correctly",
        "prerender native module should output traces"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/prerender.test.ts": {
      "passed": [
        "Prerender outputs a prerender-manifest correctly",
        "Prerender outputs dataRoutes in routes-manifest correctly",
        "Prerender outputs prerendered files correctly",
        "Prerender should 404 for a missing catchall explicit route",
        "Prerender should 404 for an invalid data url",
        "Prerender should SSR blocking path correctly (blocking)",
        "Prerender should SSR blocking path correctly (pre-rendered)",
        "Prerender should SSR catch-all page with brackets in param as object",
        "Prerender should SSR catch-all page with brackets in param as string",
        "Prerender should SSR dynamic page with brackets in param as object",
        "Prerender should SSR dynamic page with brackets in param as string",
        "Prerender should SSR incremental page correctly",
        "Prerender should SSR normal page correctly",
        "Prerender should allow rewriting to SSG page with fallback: 'blocking'",
        "Prerender should allow rewriting to SSG page with fallback: false",
        "Prerender should automatically reset cache TTL when an error occurs and build cache was available",
        "Prerender should automatically reset cache TTL when an error occurs and runtime cache was available",
        "Prerender should fetch /_next/data correctly with mismatched href and as",
        "Prerender should handle de-duping correctly",
        "Prerender should handle fallback only page correctly data",
        "Prerender should handle on-demand revalidate for fallback: blocking",
        "Prerender should handle on-demand revalidate for fallback: false",
        "Prerender should handle revalidating HTML correctly",
        "Prerender should handle revalidating HTML correctly with blocking",
        "Prerender should handle revalidating HTML correctly with blocking and seed",
        "Prerender should handle revalidating JSON correctly",
        "Prerender should handle revalidating JSON correctly with blocking",
        "Prerender should handle revalidating JSON correctly with blocking and seed",
        "Prerender should have gsp in __NEXT_DATA__",
        "Prerender should navigate between pages successfully",
        "Prerender should navigate to a normal page and back",
        "Prerender should navigate to catch-all page with brackets in param as object",
        "Prerender should navigate to catch-all page with brackets in param as string",
        "Prerender should navigate to dynamic page with brackets in param as object",
        "Prerender should navigate to dynamic page with brackets in param as string",
        "Prerender should not error when flushing cache files",
        "Prerender should not error when rewriting to fallback dynamic SSG page",
        "Prerender should not fail to update incremental cache",
        "Prerender should not fetch prerender data on mount",
        "Prerender should not have attempted sending invalid payload",
        "Prerender should not have experimental undici warning",
        "Prerender should not have gsp in __NEXT_DATA__ for non-GSP page",
        "Prerender should not on-demand revalidate for fallback: blocking with onlyGenerated if not generated",
        "Prerender should not return data for fallback: false and missing dynamic page",
        "Prerender should not revalidate when set to false",
        "Prerender should not revalidate when set to false in blocking fallback mode",
        "Prerender should not show error for invalid JSON returned from getStaticProps on CST",
        "Prerender should not show error for invalid JSON returned from getStaticProps on SSR",
        "Prerender should not supply query values to params in /_next/data request",
        "Prerender should not supply query values to params or useRouter dynamic page SSR",
        "Prerender should not supply query values to params or useRouter non-dynamic page SSR",
        "Prerender should not throw error for on-demand revalidate for SSR path",
        "Prerender should of formatted build output correctly",
        "Prerender should on-demand revalidate for fallback: blocking with onlyGenerated if generated",
        "Prerender should on-demand revalidate for revalidate: false",
        "Prerender should on-demand revalidate that returns notFound: true",
        "Prerender should only show warning once per page when large amount of page data is returned",
        "Prerender should parse query values on mount correctly",
        "Prerender should reload page on failed data request",
        "Prerender should render correctly for SSG pages that starts with api-docs",
        "Prerender should respond for catch-all deep folder",
        "Prerender should respond with 405 for POST to static page",
        "Prerender should return data correctly",
        "Prerender should return data correctly for SSG pages that starts with api-docs",
        "Prerender should return data correctly for dynamic page",
        "Prerender should return data correctly for dynamic page (non-seeded)",
        "Prerender should revalidate on-demand revalidate with preview cookie",
        "Prerender should server prerendered path correctly for SSG pages that starts with api-docs",
        "Prerender should show warning when large amount of page data is returned",
        "Prerender should support lazy catchall route",
        "Prerender should support nested lazy catchall route",
        "Prerender should support prerendered catchall route",
        "Prerender should support prerendered catchall-explicit route (nested)",
        "Prerender should support prerendered catchall-explicit route (single)",
        "Prerender should use correct caching headers for a no-revalidate page",
        "Prerender should use correct caching headers for a revalidate page",
        "Prerender should output traces"
      ],
      "failed": ["Prerender should handle fallback only page correctly HTML"],
      "pending": [
        "Prerender should reload page on failed data request, and retry"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/proxy-request-with-middleware/test/index.test.ts": {
      "passed": [
        "Requests not effected when middleware used should proxy GET request ",
        "Requests not effected when middleware used should proxy POST request with body"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/react-compiler/react-compiler.test.ts": {
      "passed": [
        "react-compiler default should render",
        "react-compiler default should show an experimental warning"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/react-dnd-compile/react-dnd-compile.test.ts": {
      "passed": [
        "react-dnd-compile should work",
        "react-dnd-compile should work on react-dnd import page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/react-version/react-version.test.ts": {
      "passed": [
        "react version should use default react condition for pages router apis",
        "react version should use default react condition for pages router pages",
        "react version should use react-server condition for app router client components pages",
        "react version should use react-server condition for app router custom routes",
        "react version should use react-server condition for app router server components pages"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/reload-scroll-backforward-restoration/index.test.ts": {
      "passed": [
        "reload-scroll-back-restoration should restore the scroll position on navigating back",
        "reload-scroll-back-restoration should restore the scroll position on navigating forward"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/repeated-forward-slashes-error/repeated-forward-slashes-error.test.ts": {
      "passed": [
        "repeated-forward-slashes-error should log error when href has repeated forward-slashes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/revalidate-reason/revalidate-reason.test.ts": {
      "passed": [
        "revalidate-reason should support revalidateReason: \"build\"",
        "revalidate-reason should support revalidateReason: \"on-demand\"",
        "revalidate-reason should support revalidateReason: \"stale\""
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/rsc-layers-transform/rsc-layers-transform.test.ts": {
      "passed": [
        "rsc layers transform should call instrumentation hook without errors",
        "rsc layers transform should render installed react-server condition for middleware"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/skip-trailing-slash-redirect/index.test.ts": {
      "passed": [
        "skip-trailing-slash-redirect app dir - skip trailing slash redirect should navigate client side correctly",
        "skip-trailing-slash-redirect app dir - skip trailing slash redirect should not apply trailing slash redirect (with slash)",
        "skip-trailing-slash-redirect app dir - skip trailing slash redirect should not apply trailing slash redirect (without slash)",
        "skip-trailing-slash-redirect app dir - skip trailing slash redirect should preserve original trailing slashes to links on client",
        "skip-trailing-slash-redirect app dir - skip trailing slash redirect should respond to dynamic route correctly",
        "skip-trailing-slash-redirect app dir - skip trailing slash redirect should respond to index correctly",
        "skip-trailing-slash-redirect pages dir should navigate client side correctly",
        "skip-trailing-slash-redirect pages dir should not apply trailing slash redirect (with slash)",
        "skip-trailing-slash-redirect pages dir should not apply trailing slash redirect (without slash)",
        "skip-trailing-slash-redirect pages dir should preserve original trailing slashes to links on client",
        "skip-trailing-slash-redirect pages dir should respond to dynamic route correctly",
        "skip-trailing-slash-redirect pages dir should respond to index correctly",
        "skip-trailing-slash-redirect should allow response body from middleware with flag",
        "skip-trailing-slash-redirect should allow rewriting invalid buildId correctly",
        "skip-trailing-slash-redirect should apply config redirect correctly",
        "skip-trailing-slash-redirect should apply config rewrites correctly",
        "skip-trailing-slash-redirect should be able to redirect locale casing $1",
        "skip-trailing-slash-redirect should correct skip URL normalizing in middleware",
        "skip-trailing-slash-redirect should handle external rewrite correctly /chained-rewrite-ssg",
        "skip-trailing-slash-redirect should handle external rewrite correctly /chained-rewrite-ssr",
        "skip-trailing-slash-redirect should handle external rewrite correctly /chained-rewrite-static",
        "skip-trailing-slash-redirect should handle external rewrite correctly /docs-auto-static/first",
        "skip-trailing-slash-redirect should handle external rewrite correctly /docs-ssr/first",
        "skip-trailing-slash-redirect should handle external rewrite correctly /docs/first",
        "skip-trailing-slash-redirect should merge cookies from middleware and API routes correctly",
        "skip-trailing-slash-redirect should merge cookies from middleware and edge API routes correctly",
        "skip-trailing-slash-redirect should not apply trailing slash on load on client",
        "skip-trailing-slash-redirect should not have trailing slash redirects in manifest",
        "skip-trailing-slash-redirect should parse locale info for data request correctly",
        "skip-trailing-slash-redirect should provide original _next/data URL with skipMiddlewareUrlNormalize"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/socket-io/index.test.js": {
      "passed": [
        "socket-io should support socket.io without falling back to polling"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/ssr-react-context/index.test.ts": {
      "passed": [
        "React Context should render a page with context",
        "React Context should render correctly with context consumer"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/streaming-ssr/index.test.ts": {
      "passed": [
        "react 18 streaming SSR in minimal mode with node runtime should generate html response by streaming correctly",
        "react 18 streaming SSR in minimal mode with node runtime should have generated a static 404 page",
        "streaming SSR with custom next configs should match more specific route along with dynamic routes",
        "streaming SSR with custom next configs should redirect paths without trailing-slash and render when slash is appended",
        "streaming SSR with custom next configs should render multi-byte characters correctly in streaming",
        "streaming SSR with custom next configs should render next/router correctly in edge runtime",
        "streaming SSR with custom next configs should render styled-jsx styles in streaming",
        "streaming SSR with custom server should render page correctly under custom server"
      ],
      "failed": [],
      "pending": [
        "react 18 streaming SSR in minimal mode with node runtime should pass correct nextRuntime values"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/styled-jsx/index.test.ts": {
      "passed": [
        "styled-jsx should contain styled-jsx styles during SSR",
        "styled-jsx should render styles during CSR",
        "styled-jsx should render styles during CSR (AMP)",
        "styled-jsx should render styles during SSR (AMP)"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/swc-warnings/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "can force swc should not have warning",
        "swc warnings by default should have warning"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/switchable-runtime/index.test.ts": {
      "passed": [
        "Switchable runtime Switchable runtime (prod) should build /api/hello and /api/edge as an api route with edge runtime",
        "Switchable runtime Switchable runtime (prod) should build /app-valid-runtime as a dynamic page with the edge runtime",
        "Switchable runtime Switchable runtime (prod) should build /edge as a dynamic page with the edge runtime",
        "Switchable runtime Switchable runtime (prod) should build /node-ssr as a dynamic page with the nodejs runtime",
        "Switchable runtime Switchable runtime (prod) should build /static as a static page with the nodejs runtime",
        "Switchable runtime Switchable runtime (prod) should support etag header in the web server"
      ],
      "failed": [],
      "pending": [
        "Switchable runtime Switchable runtime (prod) should build /edge-rsc as a dynamic page with the edge runtime",
        "Switchable runtime Switchable runtime (prod) should build /node as a static page with the nodejs runtime",
        "Switchable runtime Switchable runtime (prod) should build /node-rsc as a static page with the nodejs runtime",
        "Switchable runtime Switchable runtime (prod) should build /node-rsc-isr as an isr page with the nodejs runtime",
        "Switchable runtime Switchable runtime (prod) should build /node-rsc-ssg as a static page with the nodejs runtime",
        "Switchable runtime Switchable runtime (prod) should build /node-rsc-ssr as a dynamic page with the nodejs runtime",
        "Switchable runtime Switchable runtime (prod) should build /node-ssg as a static page with the nodejs runtime",
        "Switchable runtime Switchable runtime (prod) should display correct tree view with page types in terminal",
        "Switchable runtime Switchable runtime (prod) should prefetch data for static pages",
        "Switchable runtime Switchable runtime (prod) should support client side navigation to ssg rsc pages",
        "Switchable runtime Switchable runtime (prod) should support client side navigation to ssr rsc pages",
        "Switchable runtime Switchable runtime (prod) should support client side navigation to static rsc pages"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/test-template/{{ toFileName name }}/{{ toFileName name }}.test.ts": {
      "passed": [
        "{{name}} should work using browser",
        "{{name}} should work using cheerio",
        "{{name}} should work with fetch",
        "{{name}} should work with html"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/test-utils-tests/basic/basic.test.ts": {
      "passed": ["nextTestSetup should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/testmode/testmode.test.ts": {
      "passed": [
        "testmode app router should avoid fetch cache",
        "testmode app router should fetch real data when Next-Test-* headers are not present",
        "testmode app router should handle API with fetch in edge function",
        "testmode app router should handle API with fetch in serverless function",
        "testmode app router should handle API with http.get in serverless function",
        "testmode app router should handle RSC with fetch in edge function",
        "testmode app router should handle RSC with fetch in serverless function",
        "testmode app router should handle RSC with http.get in serverless function",
        "testmode middleware should intercept fetchs in middleware",
        "testmode page router should handle API with fetch",
        "testmode page router should handle API with http.get",
        "testmode page router should handle getServerSideProps with fetch",
        "testmode page router should handle getServerSideProps with http.get",
        "testmode rewrites should handle rewrites"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/third-parties/index.test.ts": {
      "passed": [
        "@next/third-parties basic usage renders GA",
        "@next/third-parties basic usage renders GTM",
        "@next/third-parties basic usage renders GoogleMapsEmbed",
        "@next/third-parties basic usage renders YoutubeEmbed"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/trailingslash-with-rewrite/index.test.ts": {
      "passed": [
        "trailingSlash:true with rewrites and getStaticProps should work"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/transpile-packages/index.test.ts": {
      "passed": [
        "transpile packages css should handle css modules imports inside transpiled modules",
        "transpile packages css should handle global css imports inside transpiled modules",
        "transpile packages css should handle global scss imports inside transpiled modules",
        "transpile packages css should handle scss modules imports inside transpiled modules",
        "transpile packages optional deps should hide dynammic module dependency errors from node_modules",
        "transpile packages optional deps should not throw an error when optional deps are not installed"
      ],
      "failed": [],
      "pending": [
        "transpile packages should handle optional peer dependencies"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/tsconfig-module-preserve/index.test.ts": {
      "passed": [
        "tsconfig module: preserve allows you to skip moduleResolution, esModuleInterop and resolveJsonModule when using \"module: preserve\""
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/type-module-interop/index.test.ts": {
      "passed": [
        "Type module interop should render client-side",
        "Type module interop should render client-side with modules",
        "Type module interop should render server-side",
        "Type module interop should render server-side with modules"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/typescript-version-no-warning/typescript-version-no-warning.test.ts": {
      "passed": [
        "typescript-version-no-warning should not print warning when new typescript version is used with next build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/typescript-version-warning/typescript-version-warning.test.ts": {
      "passed": [
        "typescript-version-warning should print warning when old typescript version is used with next build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/undici-fetch/index.test.ts": {
      "passed": [
        "undici fetch undici global Headers should return true when undici is used",
        "undici fetch undici global Request should return true when undici is used",
        "undici fetch undici global Response should return true when undici is used",
        "undici fetch undici global fetch should return true when undici is used"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/useselectedlayoutsegment-s-in-pages-router/useselectedlayoutsegment-s-in-pages-router.test.ts": {
      "passed": [
        "useSelectedLayoutSegment(s) in Pages Router Should render with `useSelectedLayoutSegment(s) hooks"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/with-router/index.test.ts": {
      "passed": [
        "withRouter production mode allows observation of navigation events using top level Router",
        "withRouter production mode allows observation of navigation events using top level Router deprecated behavior",
        "withRouter production mode allows observation of navigation events using withRouter"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/yarn-pnp/test/with-eslint.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "yarn PnP should compile and serve the index page correctly with-eslint"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/yarn-pnp/test/with-mdx.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "yarn PnP should compile and serve the index page correctly with-mdx"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/e2e/yarn-pnp/test/with-sass.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "yarn PnP should compile and serve the index page correctly with-sass"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/404-page-app/test/index.test.js": {
      "passed": [
        "404 Page Support with _app production mode should build successfully",
        "404 Page Support with _app production mode should not output static 404 if _app has getInitialProps",
        "404 Page Support with _app production mode should still use 404 page",
        "404 Page Support with _app production mode specify to use the 404 page still in the routes-manifest"
      ],
      "failed": [],
      "pending": [
        "404 Page Support with _app development mode should not show pages/404 GIP error if _app has GIP"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/404-page-custom-error/test/index.test.js": {
      "passed": [
        "Default 404 Page with custom _error production mode should build successfully",
        "Default 404 Page with custom _error production mode should have output 404.html",
        "Default 404 Page with custom _error production mode should render error correctly",
        "Default 404 Page with custom _error production mode should render index page normal",
        "Default 404 Page with custom _error production mode should respond to 404 correctly",
        "Default 404 Page with custom _error production mode should set pages404 in routes-manifest correctly"
      ],
      "failed": [],
      "pending": [
        "Default 404 Page with custom _error development mode should render error correctly",
        "Default 404 Page with custom _error development mode should render index page normal",
        "Default 404 Page with custom _error development mode should respond to 404 correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/404-page-ssg/test/index.test.js": {
      "passed": [
        "404 Page Support SSG production mode should build successfully",
        "404 Page Support SSG production mode should have 404 page in prerender-manifest",
        "404 Page Support SSG production mode should not revalidate custom 404 page",
        "404 Page Support SSG production mode should not show an error in the logs for 404 SSG",
        "404 Page Support SSG production mode should render error correctly",
        "404 Page Support SSG production mode should render index page normal",
        "404 Page Support SSG production mode should respond to 404 correctly",
        "404 Page Support SSG production mode should set pages404 in routes-manifest correctly"
      ],
      "failed": [],
      "pending": [
        "404 Page Support SSG development mode should not show an error in the logs for 404 SSG",
        "404 Page Support SSG development mode should render error correctly",
        "404 Page Support SSG development mode should render index page normal",
        "404 Page Support SSG development mode should respond to 404 correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/404-page/test/index.test.js": {
      "passed": [
        "404 Page Support development mode 2 does not show error with getStaticProps in pages/404 dev",
        "404 Page Support development mode 2 falls back to _error correctly without pages/404",
        "404 Page Support development mode 2 shows error with getInitialProps in pages/404 dev",
        "404 Page Support development mode 2 shows error with getServerSideProps in pages/404 dev",
        "404 Page Support production mode does not show error with getStaticProps in pages/404 build",
        "404 Page Support production mode should add /404 to pages-manifest correctly",
        "404 Page Support production mode should not cache for custom 404 page with gssp and revalidate disabled",
        "404 Page Support production mode should not cache for custom 404 page with gssp and revalidate enabled",
        "404 Page Support production mode should not cache for custom 404 page without gssp",
        "404 Page Support production mode should not error when visited directly",
        "404 Page Support production mode should output 404.html during build",
        "404 Page Support production mode should render _error for a 500 error still",
        "404 Page Support production mode should set correct status code with pages/404",
        "404 Page Support production mode should use pages/404",
        "404 Page Support production mode should use pages/404 for .d.ts file",
        "404 Page Support production mode shows error with getInitialProps in pages/404 build",
        "404 Page Support production mode shows error with getServerSideProps in pages/404 build"
      ],
      "failed": [],
      "pending": [
        "404 Page Support development mode should not error when visited directly",
        "404 Page Support development mode should render _error for a 500 error still",
        "404 Page Support development mode should set correct status code with pages/404",
        "404 Page Support development mode should use pages/404",
        "404 Page Support development mode should use pages/404 for .d.ts file"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/500-page/test/gsp-gssp.test.js": {
      "passed": [
        "gsp-gssp production mode does build 500 statically with getInitialProps in _app and getStaticProps in pages/500",
        "gsp-gssp production mode does not build 500 statically with no pages/500 and getServerSideProps in _error",
        "gsp-gssp production mode does not show error with getStaticProps in pages/500 build",
        "gsp-gssp production mode shows error with getServerSideProps in pages/500 build"
      ],
      "failed": [],
      "pending": [
        "gsp-gssp development mode does not show error with getStaticProps in pages/500 dev",
        "gsp-gssp development mode shows error with getServerSideProps in pages/500 dev"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/500-page/test/index.test.js": {
      "passed": [
        "500 Page Support development mode 2 shows error with getInitialProps in pages/500 dev",
        "500 Page Support production mode 2 builds 500 statically by default with no pages/500",
        "500 Page Support production mode 2 builds 500 statically by default with no pages/500 and custom _error without getInitialProps",
        "500 Page Support production mode 2 does not build 500 statically with getInitialProps in _app",
        "500 Page Support production mode 2 does not build 500 statically with no pages/500 and custom getInitialProps in _error",
        "500 Page Support production mode 2 does not build 500 statically with no pages/500 and custom getInitialProps in _error and _app",
        "500 Page Support production mode 2 shows error with getInitialProps in pages/500 build",
        "500 Page Support production mode should add /500 to pages-manifest correctly",
        "500 Page Support production mode should not error when visited directly",
        "500 Page Support production mode should output 500.html during build",
        "500 Page Support production mode should set correct status code with pages/500",
        "500 Page Support production mode should use pages/500"
      ],
      "failed": [],
      "pending": [
        "500 Page Support development mode should not error when visited directly",
        "500 Page Support development mode should set correct status code with pages/500",
        "500 Page Support development mode should use pages/500"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/absolute-assetprefix/test/index.test.js": {
      "passed": [
        "absolute assetPrefix with path prefix production mode should fetch from cache correctly",
        "absolute assetPrefix with path prefix production mode should not fetch static data from a CDN",
        "absolute assetPrefix with path prefix production mode should work with getServerSideProps",
        "absolute assetPrefix with path prefix production mode should work with getStaticPaths fallback",
        "absolute assetPrefix with path prefix production mode should work with getStaticPaths prerendered"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/amp-export-validation/test/index.test.js": {
      "passed": [
        "AMP Validation on Export production mode should have shown errors during build"
      ],
      "failed": [],
      "pending": [
        "AMP Validation on Export production mode shows AMP warning without throwing error",
        "AMP Validation on Export production mode shows warning and error when throwing error",
        "AMP Validation on Export production mode throws error on AMP error"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/amphtml-custom-optimizer/test/index.test.js": {
      "passed": [
        "AMP Custom Optimizer production mode should build and start for dynamic page",
        "AMP Custom Optimizer production mode should build and start for static page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/amphtml-custom-validator/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "AMP Custom Validator development mode should run in development mode successfully",
        "AMP Custom Validator production mode should build and start successfully"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/amphtml-fragment-style/test/index.test.js": {
      "passed": [
        "AMP Fragment Styles production mode adds styles from fragment in AMP mode correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/amphtml-ssg/test/index.test.js": {
      "passed": [
        "AMP SSG Support export mode production mode should have copied SSG files correctly",
        "AMP SSG Support production mode should load a hybrid amp page with query correctly",
        "AMP SSG Support production mode should load a hybrid amp page without query correctly",
        "AMP SSG Support production mode should load an amp first page correctly",
        "AMP SSG Support production mode should load dynamic hybrid SSG/AMP page",
        "AMP SSG Support production mode should load dynamic hybrid SSG/AMP page with query",
        "AMP SSG Support production mode should load dynamic hybrid SSG/AMP page with trailing slash",
        "AMP SSG Support production mode should output prerendered files correctly during build"
      ],
      "failed": [],
      "pending": [
        "AMP SSG Support development mode should load a hybrid amp page with query correctly",
        "AMP SSG Support development mode should load a hybrid amp page without query correctly",
        "AMP SSG Support development mode should load an amp first page correctly",
        "AMP SSG Support development mode should load dynamic hybrid SSG/AMP page",
        "AMP SSG Support development mode should load dynamic hybrid SSG/AMP page with query",
        "AMP SSG Support development mode should load dynamic hybrid SSG/AMP page with trailing slash"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/amphtml/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "AMP Usage AMP dev no-warn should not warn on valid amp",
        "AMP Usage AMP development mode should add data-ampdevmode to development script tags",
        "AMP Usage AMP development mode should detect amp validator warning on custom scripts",
        "AMP Usage AMP development mode should detect amp validator warning on invalid amp",
        "AMP Usage AMP development mode should detect changes and refresh a hybrid AMP page",
        "AMP Usage AMP development mode should detect changes and refresh an AMP page",
        "AMP Usage AMP development mode should detect changes and refresh an AMP page at root pages/",
        "AMP Usage AMP development mode should detect changes to component and refresh an AMP page",
        "AMP Usage AMP development mode should detect the changes and display it",
        "AMP Usage AMP development mode should navigate from non-AMP to AMP without error",
        "AMP Usage AMP development mode should not contain missing files warning",
        "AMP Usage AMP development mode should not reload unless the page is edited for an AMP page",
        "AMP Usage production mode With AMP context should render nested AMP page with AMP hook",
        "AMP Usage production mode With AMP context should render nested normal page with AMP hook",
        "AMP Usage production mode With AMP context should render the AMP page that uses the AMP hook",
        "AMP Usage production mode With AMP context should render the normal page that uses the AMP hook",
        "AMP Usage production mode With basic AMP usage should auto import extensions",
        "AMP Usage production mode With basic AMP usage should drop custom scripts",
        "AMP Usage production mode With basic AMP usage should not drop custom amp scripts",
        "AMP Usage production mode With basic AMP usage should not output client pages for AMP only",
        "AMP Usage production mode With basic AMP usage should not output client pages for AMP only with config exported after declaration",
        "AMP Usage production mode With basic AMP usage should optimize clean",
        "AMP Usage production mode With basic AMP usage should render the page as valid AMP",
        "AMP Usage production mode With basic AMP usage should render the page without leaving render target",
        "AMP Usage production mode With basic usage should render the page",
        "AMP Usage production mode canonical amphtml should allow manually setting amphtml rel",
        "AMP Usage production mode canonical amphtml should allow manually setting canonical",
        "AMP Usage production mode canonical amphtml should not render amphtml link tag with no AMP page",
        "AMP Usage production mode canonical amphtml should remove conflicting amp tags",
        "AMP Usage production mode canonical amphtml should render a canonical regardless of amp-only status (explicit)",
        "AMP Usage production mode canonical amphtml should render amphtml from provided rel link",
        "AMP Usage production mode canonical amphtml should render link rel amphtml",
        "AMP Usage production mode canonical amphtml should render link rel amphtml with existing query",
        "AMP Usage production mode canonical amphtml should render the AMP page that uses the AMP hook",
        "AMP Usage production mode combined styles should combine style tags",
        "AMP Usage production mode combined styles should remove sourceMaps from styles",
        "AMP Usage production mode should have amp optimizer in trace",
        "AMP Usage production mode should not contain missing files warning"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/api-body-parser/test/index.test.js": {
      "passed": [
        "should not throw if request body is already parsed in custom middleware",
        "should not throw if request's content-type is invalid",
        "should parse JSON body"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/api-catch-all/test/index.test.js": {
      "passed": [
        "API routes dev support should return data when catch-all",
        "API routes dev support should return data when catch-all with index and no trailing slash",
        "API routes dev support should return data when catch-all with index and trailing slash",
        "API routes dev support should return redirect when catch-all with index and trailing slash",
        "API routes production mode should return data when catch-all",
        "API routes production mode should return data when catch-all with index and no trailing slash",
        "API routes production mode should return data when catch-all with index and trailing slash",
        "API routes production mode should return redirect when catch-all with index and trailing slash"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/api-support/test/index.test.js": {
      "passed": [
        "API routes dev support should 404 on optional dynamic api page",
        "API routes dev support should compile only server code in development",
        "API routes dev support should handle 204 status correctly",
        "API routes dev support should handle proxying to self correctly",
        "API routes dev support should not conflict with /api routes",
        "API routes dev support should not show warning if using externalResolver flag",
        "API routes dev support should not show warning when the API resolves and the response is piped",
        "API routes dev support should not warn if response body is larger than 4MB with responseLimit config = false",
        "API routes dev support should parse JSON body",
        "API routes dev support should parse bigger body then 1mb",
        "API routes dev support should parse body in handler",
        "API routes dev support should parse body with config",
        "API routes dev support should parse query correctly",
        "API routes dev support should parse urlencoded body",
        "API routes dev support should prioritize a non-dynamic page",
        "API routes dev support should redirect to login",
        "API routes dev support should redirect with status code 301",
        "API routes dev support should redirect with status code 307",
        "API routes dev support should render page",
        "API routes dev support should respond from /api/auth/[...nextauth] correctly",
        "API routes dev support should return 200 on POST on pages",
        "API routes dev support should return 404 for undefined path",
        "API routes dev support should return JSON on post on API",
        "API routes dev support should return cookies object",
        "API routes dev support should return custom error",
        "API routes dev support should return data on dynamic nested route",
        "API routes dev support should return data on dynamic optional nested route",
        "API routes dev support should return data on dynamic route",
        "API routes dev support should return empty cookies object",
        "API routes dev support should return empty query object",
        "API routes dev support should return error with invalid JSON",
        "API routes dev support should set cors headers when adding cors middleware",
        "API routes dev support should show false positive warning if not using externalResolver flag",
        "API routes dev support should show friendly error for invalid redirect",
        "API routes dev support should show friendly error in case of passing null as first argument redirect",
        "API routes dev support should show warning when the API resolves without ending the request in development mode",
        "API routes dev support should special-case empty JSON body",
        "API routes dev support should support boolean for JSON in api page",
        "API routes dev support should support etag spec",
        "API routes dev support should support null in JSON response body",
        "API routes dev support should support string in JSON response body",
        "API routes dev support should support undefined response body",
        "API routes dev support should throw Internal Server Error",
        "API routes dev support should throw Internal Server Error (async)",
        "API routes dev support should warn if response body is larger than 4MB",
        "API routes dev support should warn with configured size if response body is larger than configured size",
        "API routes dev support should work with child_process correctly",
        "API routes dev support should work with dynamic params and search string",
        "API routes dev support should work with dynamic params and search string like lambda",
        "API routes dev support should work with index api",
        "API routes dev support should work with nullable payload",
        "API routes production mode should 404 on optional dynamic api page",
        "API routes production mode should build api routes",
        "API routes production mode should handle 204 status correctly",
        "API routes production mode should handle proxying to self correctly",
        "API routes production mode should not conflict with /api routes",
        "API routes production mode should not warn if response body is larger than 4MB with responseLimit config = false",
        "API routes production mode should parse JSON body",
        "API routes production mode should parse bigger body then 1mb",
        "API routes production mode should parse body in handler",
        "API routes production mode should parse body with config",
        "API routes production mode should parse query correctly",
        "API routes production mode should parse urlencoded body",
        "API routes production mode should prioritize a non-dynamic page",
        "API routes production mode should redirect to login",
        "API routes production mode should redirect with status code 301",
        "API routes production mode should redirect with status code 307",
        "API routes production mode should render page",
        "API routes production mode should respond from /api/auth/[...nextauth] correctly",
        "API routes production mode should return 200 on POST on pages",
        "API routes production mode should return 404 for undefined path",
        "API routes production mode should return JSON on post on API",
        "API routes production mode should return cookies object",
        "API routes production mode should return custom error",
        "API routes production mode should return data on dynamic nested route",
        "API routes production mode should return data on dynamic optional nested route",
        "API routes production mode should return data on dynamic route",
        "API routes production mode should return empty cookies object",
        "API routes production mode should return empty query object",
        "API routes production mode should return error with invalid JSON",
        "API routes production mode should set cors headers when adding cors middleware",
        "API routes production mode should show error with output export",
        "API routes production mode should show friendly error for invalid redirect",
        "API routes production mode should show friendly error in case of passing null as first argument redirect",
        "API routes production mode should special-case empty JSON body",
        "API routes production mode should support boolean for JSON in api page",
        "API routes production mode should support etag spec",
        "API routes production mode should support null in JSON response body",
        "API routes production mode should support string in JSON response body",
        "API routes production mode should support undefined response body",
        "API routes production mode should throw Internal Server Error",
        "API routes production mode should throw Internal Server Error (async)",
        "API routes production mode should warn if response body is larger than 4MB",
        "API routes production mode should warn with configured size if response body is larger than configured size",
        "API routes production mode should work with child_process correctly",
        "API routes production mode should work with dynamic params and search string",
        "API routes production mode should work with dynamic params and search string like lambda",
        "API routes production mode should work with index api",
        "API routes production mode should work with nullable payload"
      ],
      "failed": [],
      "pending": [
        "API routes dev support should return error exceeded body limit",
        "API routes production mode should return error exceeded body limit"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-aspath/test/index.test.js": {
      "passed": [
        "App asPath should not have any changes in asPath after a bundle rebuild"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-config-asset-prefix/test/index.test.js": {
      "passed": [
        "App assetPrefix config should render correctly with assetPrefix: \"/\""
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/config.test.ts": {
      "passed": [
        "app dir - with output export (next dev / next build) production mode should correctly emit exported assets to config.distDir",
        "app dir - with output export (next dev / next build) production mode should error when running next export",
        "app dir - with output export (next dev / next build) production mode should throw when exportPathMap configured"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/dev-custom-dist-dir.test.ts": {
      "passed": [
        "app dir - with output export and custom distDir (next dev) should render properly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/dynamic-missing-gsp-dev.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "app dir - with output export - dynamic missing gsp dev development mode should error when client component has generateStaticParams",
        "app dir - with output export - dynamic missing gsp dev development mode should error when dynamic route is missing generateStaticParams",
        "app dir - with output export - dynamic missing gsp dev development mode should error when dynamic route is set to true"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/dynamic-missing-gsp-prod.test.ts": {
      "passed": [
        "app dir - with output export - dynamic missing gsp prod production mode should error when dynamic route is missing generateStaticParams"
      ],
      "failed": [
        "app dir - with output export - dynamic missing gsp prod production mode should error when client component has generateStaticParams"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/dynamicapiroute-dev.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "app dir - with output export - dynamic api route dev development mode should work in dev with dynamicApiRoute 'error'",
        "app dir - with output export - dynamic api route dev development mode should work in dev with dynamicApiRoute 'force-dynamic'",
        "app dir - with output export - dynamic api route dev development mode should work in dev with dynamicApiRoute 'force-static'",
        "app dir - with output export - dynamic api route dev development mode should work in dev with dynamicApiRoute undefined"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/dynamicapiroute-prod.test.ts": {
      "passed": [
        "app dir - with output export - dynamic api route prod production mode should work in prod with dynamicApiRoute 'error'",
        "app dir - with output export - dynamic api route prod production mode should work in prod with dynamicApiRoute 'force-dynamic'",
        "app dir - with output export - dynamic api route prod production mode should work in prod with dynamicApiRoute 'force-static'",
        "app dir - with output export - dynamic api route prod production mode should work in prod with dynamicApiRoute undefined"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/dynamicpage-dev.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "app dir - with output export - dynamic page dev development mode should work in dev with dynamicPage 'error'",
        "app dir - with output export - dynamic page dev development mode should work in dev with dynamicPage 'force-dynamic'",
        "app dir - with output export - dynamic page dev development mode should work in dev with dynamicPage 'force-static'",
        "app dir - with output export - dynamic page dev development mode should work in dev with dynamicPage undefined"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/dynamicpage-prod.test.ts": {
      "passed": [
        "app dir - with output export - dynamic api route prod production mode should work in prod with dynamicPage 'error'",
        "app dir - with output export - dynamic api route prod production mode should work in prod with dynamicPage 'force-dynamic'",
        "app dir - with output export - dynamic api route prod production mode should work in prod with dynamicPage 'force-static'",
        "app dir - with output export - dynamic api route prod production mode should work in prod with dynamicPage undefined"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/start.test.ts": {
      "passed": [
        "app dir - with output export (next start) production mode should error during next start with output export"
      ],
      "failed": [],
      "pending": [
        "app dir - with output export (next start) production mode should warn during next start with output standalone"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/trailing-slash-dev.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "app dir - with output export - trailing slash dev development mode should work in dev with trailingSlash 'false'",
        "app dir - with output export - trailing slash dev development mode should work in dev with trailingSlash 'true'"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dir-export/test/trailing-slash-start.test.ts": {
      "passed": [
        "app dir - with output export - trailing slash prod production mode should work in prod with trailingSlash 'false'",
        "app dir - with output export - trailing slash prod production mode should work in prod with trailingSlash 'true'"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-document-add-hmr/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "_app/_document add HMR should HMR when _app is added",
        "_app/_document add HMR should HMR when _document is added"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-document-import-order/test/index.test.js": {
      "passed": [
        "Root components import order production mode root components should be imported in this order _document > _app > page in order to respect side effects"
      ],
      "failed": [
        "Root components import order production mode _app chunks should be attached to de dom before page chunks"
      ],
      "pending": [
        "development mode Skipped in Turbopack _app chunks should be attached to de dom before page chunks",
        "development mode root components should be imported in this order _document > _app > page in order to respect side effects"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-document-remove-hmr/test/index.test.js": {
      "passed": [
        "_app removal HMR should HMR when _app is removed",
        "_app removal HMR should HMR when _document is removed"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-document-style-fragment/test/index.test.js": {
      "passed": [
        "Custom Document Fragment Styles production mode correctly adds styles from fragment styles key"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-document/test/index.test.js": {
      "passed": [
        "Document and App Client side It should share module state with pages",
        "Document and App Client side should detect the changes to pages/_app.js and display it",
        "Document and App Client side should detect the changes to pages/_document.js and display it",
        "Document and App Client side should keep state between page navigations",
        "Document and App Rendering via HTTP _app It should share module state with pages",
        "Document and App Rendering via HTTP _app It should show valid error when thrown in _app getInitialProps",
        "Document and App Rendering via HTTP _app It shows a custom tag",
        "Document and App Rendering via HTTP _document Document.getInitialProps returns html prop representing app shell",
        "Document and App Rendering via HTTP _document It adds a timestamp to link tags with preload attribute to invalidate the cache (DEV only)",
        "Document and App Rendering via HTTP _document It adds crossOrigin to all scripts and preload links",
        "Document and App Rendering via HTTP _document It adds nonces to all scripts and preload links",
        "Document and App Rendering via HTTP _document It renders ctx.renderPage with enhanceApp and enhanceComponent correctly",
        "Document and App Rendering via HTTP _document It renders ctx.renderPage with enhanceApp correctly",
        "Document and App Rendering via HTTP _document It renders ctx.renderPage with enhanceComponent correctly",
        "Document and App Rendering via HTTP _document It renders ctx.renderPage with enhancer correctly",
        "Document and App Rendering via HTTP _document should include required elements in rendered html",
        "Document and App With CSP enabled should load inline script by hash",
        "Document and App With CSP enabled should load inline script by nonce",
        "Document and App should not have any missing key warnings"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-dynamic-error/test/index.test.ts": {
      "passed": [
        "app-dynamic-error production mode throws an error when prerendering a page with config dynamic error"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-functional/test/index.test.js": {
      "passed": ["Document and App should not have any missing key warnings"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-tree/test/index.test.js": {
      "passed": [
        "AppTree production mode should pass AppTree to NextPageContext",
        "AppTree production mode should provide router context in AppTree on CSR",
        "AppTree production mode should provide router context in AppTree on SSR"
      ],
      "failed": [],
      "pending": [
        "AppTree development mode should pass AppTree to NextPageContext",
        "AppTree development mode should provide router context in AppTree on CSR",
        "AppTree development mode should provide router context in AppTree on SSR"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/app-types/app-types.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "app type checking production mode should generate route types correctly and report form errors",
        "app type checking production mode should generate route types correctly and report link error",
        "app type checking production mode should generate route types correctly and report router API errors",
        "app type checking production mode should type check invalid entry exports"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/auto-export-error-bail/test/index.test.js": {
      "passed": [
        "Auto Export _error bail production mode should not opt-out of auto static optimization from invalid _error"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/auto-export-query-error/test/index.test.js": {
      "passed": [
        "Auto Export production mode should show warning for query provided for auto exported page correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/auto-export/test/index.test.js": {
      "passed": [
        "Auto Export dev Refreshes query on mount",
        "Auto Export dev Supports commonjs 1",
        "Auto Export dev Supports commonjs 2",
        "Auto Export dev should include error link when hydration error does occur",
        "Auto Export dev should not replace URL with page name while asPath is delayed",
        "Auto Export dev should not show hydration warning from mismatching asPath",
        "Auto Export dev should update asPath after mount",
        "Auto Export production mode Refreshes query on mount",
        "Auto Export production mode Supports commonjs 1",
        "Auto Export production mode Supports commonjs 2",
        "Auto Export production mode should not replace URL with page name while asPath is delayed",
        "Auto Export production mode should update asPath after mount"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/babel-custom/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Babel should allow babelrc JSON5 syntax",
        "Babel should allow setting babelrc env",
        "Babel should allow setting targets to a string",
        "Babel should allow setting targets.browsers"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/babel-next-image/babel-next-image.test.js": {
      "passed": [],
      "failed": [],
      "pending": ["babel-next-image should work with babel and next/image"],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/babel/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Babel Rendering via HTTP Should compile a page with flowtype correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/basepath-root-catch-all/test/index.test.js": {
      "passed": [
        "production mode should use correct data URL for root catch-all"
      ],
      "failed": [],
      "pending": [
        "development mode should use correct data URL for root catch-all"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/bigint/test/index.test.js": {
      "passed": [
        "bigint API route support production mode should return 200",
        "bigint API route support production mode should return the BigInt result text"
      ],
      "failed": [],
      "pending": [
        "bigint API route support development mode should return 200",
        "bigint API route support development mode should return the BigInt result text"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/broken-webpack-plugin/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Handles a broken webpack plugin (precompile) should render error correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/build-indicator/test/index.test.js": {
      "passed": [
        "Build Activity Indicator Disabled with next.config.js Does not add the build indicator container",
        "Build Activity Indicator Enabled Adds the build indicator container",
        "Build Activity Indicator Enabled Shows build indicator when page is built from modifying",
        "Build Activity Indicator should validate buildActivityPosition config"
      ],
      "failed": [],
      "pending": [
        "Build Activity Indicator Enabled webpack only Shows the build indicator when a page is built during navigation"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/build-output/test/index.test.js": {
      "passed": [
        "Build Output production mode Basic Application Output (experimental: {\"gzipSize\":false}) should not emit extracted comments",
        "Build Output production mode Basic Application Output (experimental: {\"gzipSize\":false}) should print duration when rendering or get static props takes long",
        "Build Output production mode Basic Application Output (experimental: {}) should not emit extracted comments",
        "Build Output production mode Basic Application Output (experimental: {}) should print duration when rendering or get static props takes long",
        "Build Output production mode Custom Static Error Output should not specify /404 as lambda when static",
        "Build Output production mode With Parallel Routes should not have duplicate paths that resolve to the same route",
        "Build Output production mode Basic Application Output (experimental: {\"gzipSize\":false}) should not include internal pages",
        "Build Output production mode Basic Application Output (experimental: {}) should not include internal pages",
        "Build Output production mode Custom App Output should not include custom error",
        "Build Output production mode Custom Error Output should not include custom app",
        "Build Output production mode With AMP Output should not include custom error"
      ],
      "failed": [],
      "pending": [
        "Build Output production mode Basic Application Output (experimental: {\"gzipSize\":false}) should not deviate from snapshot",
        "Build Output production mode Basic Application Output (experimental: {}) should not deviate from snapshot"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/build-trace-extra-entries-turbo/test/index.test.js": {
      "passed": [],
      "failed": [
        "build trace with extra entries production mode should build and trace correctly"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/build-trace-extra-entries/test/index.test.js": {
      "passed": [],
      "failed": [
        "build trace with extra entries production mode should build and trace correctly"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/build-warnings/test/index.test.js": {
      "passed": [
        "Build warnings production mode should not shown warning about minification without any modification",
        "Build warnings production mode should not warn about missing cache in non-CI",
        "Build warnings production mode should not warn about missing cache on supported platforms",
        "Build warnings production mode should warn about missing cache in CI"
      ],
      "failed": [],
      "pending": [
        "Build warnings production mode should shown warning about minification for minimize",
        "Build warnings production mode should shown warning about minification for minimizer"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/catches-missing-getStaticProps/test/index.test.js": {
      "passed": [
        "Catches Missing getStaticProps production mode should catch it in server build mode"
      ],
      "failed": [],
      "pending": [
        "Catches Missing getStaticProps development mode should catch it in development mode"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/chunking/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Chunking production mode Serving should hydrate with aggressive chunking",
        "Chunking production mode Serving should load chunks when navigating",
        "Chunking production mode should create a framework chunk",
        "Chunking production mode should execute the build manifest",
        "Chunking production mode should not create a commons chunk",
        "Chunking production mode should not create a lib chunk for react or react-dom",
        "Chunking production mode should not include more than one instance of react-dom",
        "Chunking production mode should not preload the build manifest",
        "Chunking production mode should use all url friendly names"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/clean-distdir/test/index.test.js": {
      "passed": [
        "Cleaning distDir production mode disabled write should not clean up .next before build start",
        "Cleaning distDir production mode should clean up .next before build start"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/cli/test/index.test.js": {
      "passed": [
        "CLI Usage dev --experimental-https",
        "CLI Usage dev --experimental-https with provided key/cert",
        "CLI Usage dev --help",
        "CLI Usage dev --hostname",
        "CLI Usage dev --port",
        "CLI Usage dev --port 0",
        "CLI Usage dev -H",
        "CLI Usage dev -h",
        "CLI Usage dev -p",
        "CLI Usage dev -p conflict",
        "CLI Usage dev -p reserved",
        "CLI Usage dev Allow retry if default port is already in use",
        "CLI Usage dev NODE_OPTIONS='--inspect'",
        "CLI Usage dev NODE_OPTIONS='--require=file with spaces to --require.js'",
        "CLI Usage dev NODE_OPTIONS='--require=file with spaces to-require-with-node-require-option.js'",
        "CLI Usage dev PORT=0",
        "CLI Usage dev custom directory",
        "CLI Usage dev invalid directory",
        "CLI Usage dev should exit when SIGINT is signalled",
        "CLI Usage dev should exit when SIGTERM is signalled",
        "CLI Usage dev should format IPv6 addresses correctly",
        "CLI Usage dev should not throw UnhandledPromiseRejectionWarning",
        "CLI Usage dev should warn when unknown argument provided",
        "CLI Usage export --help",
        "CLI Usage export run export command",
        "CLI Usage info --help",
        "CLI Usage info -h",
        "CLI Usage info should print output",
        "CLI Usage info should print output with next.config.mjs",
        "CLI Usage no command --help",
        "CLI Usage no command --version",
        "CLI Usage no command -h",
        "CLI Usage no command -v",
        "CLI Usage no command detects command typos",
        "CLI Usage no command invalid directory",
        "CLI Usage production mode build --help",
        "CLI Usage production mode build -h",
        "CLI Usage production mode build invalid directory",
        "CLI Usage production mode build should exit when SIGINT is signalled",
        "CLI Usage production mode build should exit when SIGTERM is signalled",
        "CLI Usage production mode build should not throw UnhandledPromiseRejectionWarning",
        "CLI Usage production mode build should warn when unknown argument provided",
        "CLI Usage production mode start --help",
        "CLI Usage production mode start --keepAliveTimeout Infinity",
        "CLI Usage production mode start --keepAliveTimeout happy path",
        "CLI Usage production mode start --keepAliveTimeout negative number",
        "CLI Usage production mode start --keepAliveTimeout string arg",
        "CLI Usage production mode start -h",
        "CLI Usage production mode start duplicate sass deps",
        "CLI Usage production mode start invalid directory",
        "CLI Usage production mode start should exit when SIGINT is signalled",
        "CLI Usage production mode start should exit when SIGTERM is signalled",
        "CLI Usage production mode start should format IPv6 addresses correctly",
        "CLI Usage production mode start should not start on a port out of range",
        "CLI Usage production mode start should not start on a reserved port",
        "CLI Usage production mode start should not throw UnhandledPromiseRejectionWarning",
        "CLI Usage production mode start should warn when unknown argument provided",
        "CLI Usage production mode telemetry --help",
        "CLI Usage production mode telemetry -h",
        "CLI Usage production mode telemetry should not throw UnhandledPromiseRejectionWarning",
        "CLI Usage production mode telemetry should warn when unknown argument provided"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/client-404/test/index.test.js": {
      "passed": [
        "Client 404 production mode Client Navigation 404 should hard navigate to URL on failing to load bundle",
        "Client 404 production mode Client Navigation 404 should hard navigate to URL on failing to load missing bundle",
        "Client 404 production mode Client Navigation 404 should show 404 upon client replacestate should navigate the page"
      ],
      "failed": [],
      "pending": [
        "Client 404 development mode Client Navigation 404 should hard navigate to URL on failing to load bundle",
        "Client 404 development mode Client Navigation 404 should show 404 upon client replacestate should navigate the page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/client-navigation-a11y/test/index.test.js": {
      "passed": [
        "Client Navigation accessibility <RouteAnnouncer /> There is a title and a h1 tag has the innerText equal to the value of h1",
        "Client Navigation accessibility <RouteAnnouncer /> There is a title but no h1 tag has the innerText equal to the value of document.title",
        "Client Navigation accessibility <RouteAnnouncer /> There is no title and no h1 tag has the innerText equal to the value of the pathname",
        "Client Navigation accessibility <RouteAnnouncer /> There is no title but a h1 tag has the innerText equal to the value of h1",
        "Client Navigation accessibility <RouteAnnouncer /> has aria-live=\"assertive\" and role=\"alert\"",
        "Client Navigation accessibility <RouteAnnouncer /> should not have the initial route announced"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/client-shallow-routing/test/index.test.js": {
      "passed": [
        "Client Shallow Routing production mode should not shallowly navigate back in history when current page was not shallow",
        "Client Shallow Routing production mode should not shallowly navigate forwards in history when current page was not shallow"
      ],
      "failed": [],
      "pending": [
        "Client Shallow Routing development mode should not shallowly navigate back in history when current page was not shallow",
        "Client Shallow Routing development mode should not shallowly navigate forwards in history when current page was not shallow"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/compression/test/index.test.js": {
      "passed": ["Compression should compress responses by default"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/config-devtool-dev/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "devtool set in development mode in next config should warn and revert when a devtool is set in development mode"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/config-experimental-warning/test/index.test.js": {
      "passed": [
        "Config Experimental Warning production mode should not show next app info in next start",
        "Config Experimental Warning production mode should show next app info with all experimental features in next build",
        "Config Experimental Warning production mode should show unrecognized experimental features in warning but not in start log experiments section",
        "Config Experimental Warning should not show warning with config from object",
        "Config Experimental Warning should not show warning with default config from function",
        "Config Experimental Warning should not show warning with default value",
        "Config Experimental Warning should show warning with config from function with experimental",
        "Config Experimental Warning should show warning with config from object with experimental",
        "Config Experimental Warning should show warning with config from object with experimental and multiple keys"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/config-mjs/test/index.test.js": {
      "passed": [
        "Configuration correctly imports a package that defines `module` but no `main` in package.json",
        "Configuration renders public config on the server only",
        "Configuration renders server config on the server only",
        "Configuration should disable X-Powered-By header support",
        "Configuration should have config available on the client"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/config-output-export/test/index.test.ts": {
      "passed": [
        "config-output-export should error with \"i18n\" config",
        "config-output-export should error with api routes function",
        "config-output-export should error with getServerSideProps without fallback",
        "config-output-export should error with getStaticPaths and fallback blocking",
        "config-output-export should error with getStaticPaths and fallback true",
        "config-output-export should error with getStaticProps and revalidate 10 seconds (ISR)",
        "config-output-export should error with middleware function",
        "config-output-export should work with getStaticPaths and fallback false",
        "config-output-export should work with getStaticProps and revalidate false",
        "config-output-export should work with getStaticProps and without revalidate",
        "config-output-export should work with static homepage",
        "config-output-export when hasNextSupport = false should error with \"headers\" config",
        "config-output-export when hasNextSupport = false should error with \"redirects\" config",
        "config-output-export when hasNextSupport = false should error with \"rewrites\" config",
        "config-output-export when hasNextSupport = true should error with \"headers\" config",
        "config-output-export when hasNextSupport = true should error with \"redirects\" config",
        "config-output-export when hasNextSupport = true should error with \"rewrites\" config"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/config-promise-error/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Promise in next config production mode should warn when a promise is returned on webpack"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/config-resolve-alias/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Invalid resolve alias should show relevant error when webpack resolve alias is wrong"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/config-syntax-error/test/index.test.js": {
      "passed": [
        "Invalid config syntax production mode should error when next.config.js contains syntax error",
        "Invalid config syntax production mode should error when next.config.mjs contains syntax error"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/config-validation/test/index.test.ts": {
      "passed": [
        "next.config.js validation production mode it should validate correctly for invalid config types",
        "next.config.js validation production mode it should validate correctly for unexpected config fields",
        "next.config.js validation production mode should allow undefined environment variables"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/config/test/index.test.js": {
      "passed": [
        "Configuration correctly imports a package that defines `module` but no `main` in package.json",
        "Configuration renders public config on the server only",
        "Configuration renders server config on the server only",
        "Configuration should disable X-Powered-By header support",
        "Configuration should have config available on the client"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/conflicting-public-file-page/test/index.test.js": {
      "passed": [
        "Errors on conflict between public file and page file production mode Throws error during build"
      ],
      "failed": [],
      "pending": [
        "Errors on conflict between public file and page file development mode Throws error during development"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/conflicting-ssg-paths/test/index.test.js": {
      "passed": [
        "Conflicting SSG paths production mode should show proper error when a dynamic SSG route conflicts with SSR route",
        "Conflicting SSG paths production mode should show proper error when a dynamic SSG route conflicts with normal route",
        "Conflicting SSG paths production mode should show proper error when two dynamic SSG routes have conflicting paths"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/create-next-app/examples.test.ts": {
      "passed": [
        "create-next-app --example should create if --example value is default",
        "create-next-app --example should create on valid Next.js example name",
        "create-next-app --example should create with GitHub URL",
        "create-next-app --example should create with GitHub URL and --example-path",
        "create-next-app --example should create with GitHub URL trailing slash",
        "create-next-app --example should fall back to default template if failed to download",
        "create-next-app --example should not create if --example flag value is absent",
        "create-next-app --example should not create if --example flag value is invalid",
        "create-next-app --example should use --example-path over the GitHub URL"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/create-next-app/index.test.ts": {
      "passed": [
        "create-next-app should not create if the target directory is not empty",
        "create-next-app should not create if the target directory is not writable",
        "create-next-app should not install dependencies if --skip-install"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/create-next-app/package-manager/bun.test.ts": {
      "passed": [
        "create-next-app with package manager bun should use bun for --use-bun flag",
        "create-next-app with package manager bun should use bun for --use-bun flag with example",
        "create-next-app with package manager bun should use bun when user-agent is bun",
        "create-next-app with package manager bun should use bun when user-agent is bun with example"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/create-next-app/package-manager/npm.test.ts": {
      "passed": [
        "create-next-app with package manager npm should use npm for --use-npm flag",
        "create-next-app with package manager npm should use npm for --use-npm flag with example",
        "create-next-app with package manager npm should use npm when user-agent is npm",
        "create-next-app with package manager npm should use npm when user-agent is npm with example"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/create-next-app/package-manager/pnpm.test.ts": {
      "passed": [
        "create-next-app with package manager pnpm should use pnpm for --use-pnpm flag",
        "create-next-app with package manager pnpm should use pnpm for --use-pnpm flag with example",
        "create-next-app with package manager pnpm should use pnpm when user-agent is pnpm",
        "create-next-app with package manager pnpm should use pnpm when user-agent is pnpm with example"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/create-next-app/package-manager/yarn.test.ts": {
      "passed": [
        "create-next-app with package manager yarn should use yarn for --use-yarn flag",
        "create-next-app with package manager yarn should use yarn for --use-yarn flag with example",
        "create-next-app with package manager yarn should use yarn when user-agent is yarn",
        "create-next-app with package manager yarn should use yarn when user-agent is yarn with example"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/create-next-app/prompts.test.ts": {
      "passed": [
        "create-next-app prompts should not prompt user for choice and use defaults if --yes is defined",
        "create-next-app prompts should prompt user for choice if --import-alias is absent",
        "create-next-app prompts should prompt user for choice if --js or --ts flag is absent",
        "create-next-app prompts should prompt user for choice if --tailwind is absent",
        "create-next-app prompts should prompt user for choice if directory name is absent",
        "create-next-app prompts should prompt user to confirm reset preferences"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/create-next-app/templates/app.test.ts": {
      "passed": [
        "create-next-app --app (App Router) should create JavaScript project with --js flag",
        "create-next-app --app (App Router) should create TailwindCSS project with --tailwind flag",
        "create-next-app --app (App Router) should create TypeScript project with --ts flag",
        "create-next-app --app (App Router) should create an empty TailwindCSS project with --empty flag",
        "create-next-app --app (App Router) should create an empty project with --empty flag",
        "create-next-app --app (App Router) should create project inside \"src\" directory with --src-dir flag",
        "create-next-app --app (App Router) should enable turbopack dev with --turbo flag"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/create-next-app/templates/pages.test.ts": {
      "passed": [
        "create-next-app --no-app (Pages Router) should create JavaScript project with --js flag",
        "create-next-app --no-app (Pages Router) should create TailwindCSS project with --tailwind flag",
        "create-next-app --no-app (Pages Router) should create TypeScript project with --ts flag",
        "create-next-app --no-app (Pages Router) should create an empty TailwindCSS project with --empty flag",
        "create-next-app --no-app (Pages Router) should create an empty project with --empty flag",
        "create-next-app --no-app (Pages Router) should create project inside \"src\" directory with --src-dir flag",
        "create-next-app --no-app (Pages Router) should enable turbopack dev with --turbo flag"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/critical-css/test/index.test.js": {
      "passed": [
        "CSS optimization for SSR apps production mode should have all CSS files in manifest",
        "CSS optimization for SSR apps production mode should inline critical CSS",
        "CSS optimization for SSR apps production mode should inline critical CSS (dynamic)",
        "CSS optimization for SSR apps production mode should not inline non-critical css"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css-client-nav/test/index.test.js": {
      "passed": [
        "CSS Module client-side navigation dev should be able to client-side navigate from blue to red",
        "CSS Module client-side navigation dev should be able to client-side navigate from none to blue",
        "CSS Module client-side navigation dev should be able to client-side navigate from none to red",
        "CSS Module client-side navigation dev should be able to client-side navigate from red to blue",
        "CSS Module client-side navigation production mode should be able to client-side navigate from blue to red",
        "CSS Module client-side navigation production mode should be able to client-side navigate from none to blue",
        "CSS Module client-side navigation production mode should be able to client-side navigate from none to red",
        "CSS Module client-side navigation production mode should be able to client-side navigate from red to blue"
      ],
      "failed": [
        "CSS Module client-side navigation production mode should time out and hard navigate for stalled CSS request"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css-customization/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "CSS Customization production mode Bad CSS Customization Array (1) should fail the build",
        "CSS Customization production mode Bad CSS Customization Array (2) should fail the build",
        "CSS Customization production mode Bad CSS Customization Array (3) should fail the build",
        "CSS Customization production mode Bad CSS Customization Array (4) should fail the build",
        "CSS Customization production mode Bad CSS Customization Array (5) should fail the build",
        "CSS Customization production mode Bad CSS Customization Array (6) should fail the build",
        "CSS Customization production mode Bad CSS Customization Array (7) should fail the build",
        "CSS Customization production mode Bad CSS Customization Array (8) should fail the build",
        "CSS Customization production mode Bad CSS Customization Function should fail the build",
        "CSS Customization production mode Bad CSS Customization should compile successfully",
        "CSS Customization production mode Bad CSS Customization should've compiled and prefixed",
        "CSS Customization production mode Bad CSS Customization should've emitted a source map",
        "CSS Customization production mode Basic CSS should compile successfully",
        "CSS Customization production mode Basic CSS should've compiled and prefixed",
        "CSS Customization production mode Basic CSS should've emitted a source map",
        "CSS Customization production mode Correct CSS Customization Array should compile successfully",
        "CSS Customization production mode Correct CSS Customization Array should've compiled and prefixed",
        "CSS Customization production mode Correct CSS Customization Array should've emitted a source map",
        "CSS Customization production mode Correct CSS Customization custom loader should compile successfully",
        "CSS Customization production mode Correct CSS Customization custom loader should've applied style"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css-features/test/browserslist.test.js": {
      "passed": [
        "Browserslist: New production mode should have compiled successfully",
        "Browserslist: Old production mode should have compiled successfully"
      ],
      "failed": [
        "Browserslist: New production mode should've emitted a single CSS file",
        "Browserslist: Old production mode should've emitted a single CSS file"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css-features/test/css-modules.test.js": {
      "passed": [
        "CSS Modules: Import Global CSS production mode should've emitted a single CSS file"
      ],
      "failed": [
        "CSS Modules: Importing Invalid Global CSS production mode should fail to build",
        "Custom Properties: Fail for global element in CSS Modules production mode should fail to build"
      ],
      "pending": [
        "CSS Modules: Import Exports production mode should've emitted a single CSS file",
        "Custom Properties: Fail for :root {} in CSS Modules production mode should fail to build"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css-features/test/index.test.js": {
      "passed": [
        "Custom Properties: Pass-Through IE11 production mode should've emitted a single CSS file",
        "Custom Properties: Pass-Through Modern production mode should've emitted a single CSS file"
      ],
      "failed": [],
      "pending": [
        "Inline Comments: Minify production mode should've emitted a single CSS file"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css-minify/test/index.test.js": {
      "passed": [
        "css-minify production mode should minify correctly by removing whitespace"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css-modules/test/index.test.js": {
      "passed": [
        "3rd Party CSS Module Support production mode should have compiled successfully",
        "3rd Party CSS Module Support production mode should've emitted a single CSS file",
        "3rd Party CSS Module Support production mode should've injected the CSS on server render",
        "Basic CSS Module Support production mode should have compiled successfully",
        "Basic CSS Module Support production mode should've emitted a single CSS file",
        "Basic CSS Module Support production mode should've injected the CSS on server render",
        "CSS Module Composes Usage (Basic) production mode should have compiled successfully",
        "CSS Module Composes Usage (Basic) production mode should've emitted a single CSS file",
        "Can hot reload CSS Module without losing state should update CSS color without remounting <input>",
        "Catch-all Route CSS Module Usage production mode should apply styles correctly",
        "Catch-all Route CSS Module Usage production mode should have compiled successfully",
        "Catch-all Route CSS Module Usage production mode should've emitted a single CSS file",
        "Dynamic Route CSS Module Usage production mode should apply styles correctly",
        "Dynamic Route CSS Module Usage production mode should have compiled successfully",
        "Dynamic Route CSS Module Usage production mode should've emitted a single CSS file",
        "Has CSS Module in computed styles in Development should have CSS for page",
        "Has CSS Module in computed styles in Production production mode should have CSS for page",
        "Has CSS Module in computed styles in Production production mode should have compiled successfully",
        "Valid CSS Module Usage from within node_modules production mode should have compiled successfully",
        "Valid CSS Module Usage from within node_modules production mode should've emitted a single CSS file",
        "Valid CSS Module Usage from within node_modules production mode should've prerendered with relevant data"
      ],
      "failed": [
        "CSS Module Composes Usage (External) production mode should've emitted a single CSS file",
        "Valid Nested CSS Module Usage from within node_modules production mode should've emitted a single CSS file",
        "Valid Nested CSS Module Usage from within node_modules production mode should've prerendered with relevant data"
      ],
      "pending": [
        "Invalid CSS Module Usage in node_modules production mode should fail to build",
        "Invalid Global CSS Module Usage in node_modules production mode should fail to build"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css/test/basic-global-support.test.js": {
      "passed": [
        "Basic Global Support production mode useLightnincsss(false) should've emitted a single CSS file",
        "Basic Global Support production mode useLightnincsss(true) should've emitted a single CSS file",
        "Basic Global Support with special characters in path production mode useLightnincsss(false) should've emitted a single CSS file",
        "Basic Global Support with special characters in path production mode useLightnincsss(true) should've emitted a single CSS file",
        "Basic Global Support with src/ dir production mode useLightnincsss(false) should've emitted a single CSS file",
        "Basic Global Support with src/ dir production mode useLightnincsss(true) should've emitted a single CSS file",
        "CSS URL via `file-loader` and asset prefix (1) production mode should've emitted expected files",
        "CSS URL via `file-loader` and asset prefix (2) production mode should've emitted expected files",
        "CSS URL via `file-loader` production mode useLightnincsss(false) should've emitted expected files",
        "CSS URL via `file-loader` production mode useLightnincsss(true) should've emitted expected files",
        "Multi Global Support (reversed) production mode useLightnincsss(false) should've emitted a single CSS file",
        "Multi Global Support (reversed) production mode useLightnincsss(true) should've emitted a single CSS file",
        "Multi Global Support production mode useLightnincsss(false) should've emitted a single CSS file",
        "Multi Global Support production mode useLightnincsss(true) should've emitted a single CSS file",
        "Nested @import() Global Support production mode useLightnincsss(false) should've emitted a single CSS file",
        "Nested @import() Global Support production mode useLightnincsss(true) should've emitted a single CSS file"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css/test/css-and-styled-jsx.test.js": {
      "passed": [
        "Ordering with styled-jsx (dev) should have the correct color (css ordering)",
        "Ordering with styled-jsx (prod) production mode should have compiled successfully",
        "Ordering with styled-jsx (prod) production mode should have the correct color (css ordering)"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css/test/css-compilation.test.js": {
      "passed": [
        "CSS Property Ordering production mode useLightnincsss(false) should have the border width (property ordering)",
        "CSS Property Ordering production mode useLightnincsss(true) should have the border width (property ordering)",
        "CSS Support production mode CSS Compilation and Prefixing useLightnincsss(false) should've compiled and prefixed",
        "CSS Support production mode CSS Compilation and Prefixing useLightnincsss(true) should've compiled and prefixed",
        "CSS Support production mode Good CSS Import from node_modules useLightnincsss(false) should've emitted a single CSS file",
        "CSS Support production mode Good CSS Import from node_modules useLightnincsss(true) should've emitted a single CSS file",
        "CSS Support production mode Good Nested CSS Import from node_modules useLightnincsss(false) should've emitted a single CSS file",
        "CSS Support production mode Good Nested CSS Import from node_modules useLightnincsss(true) should've emitted a single CSS file",
        "CSS Support production mode Has CSS in computed styles in Production useLightnincsss(false) should have CSS for page",
        "CSS Support production mode Has CSS in computed styles in Production useLightnincsss(false) should've preloaded the CSS file and injected it in <head>",
        "CSS Support production mode Has CSS in computed styles in Production useLightnincsss(true) should have CSS for page",
        "CSS Support production mode Has CSS in computed styles in Production useLightnincsss(true) should've preloaded the CSS file and injected it in <head>",
        "CSS Support production mode React Lifecyce Order (production) useLightnincsss(false) should have the correct color on mount after navigation",
        "CSS Support production mode React Lifecyce Order (production) useLightnincsss(true) should have the correct color on mount after navigation"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css/test/css-modules.test.js": {
      "passed": [
        "Data URLs production mode should compile successfully",
        "Ordering with Global CSS and Modules (dev) useLightnincsss(false) should have the correct color (css ordering)",
        "Ordering with Global CSS and Modules (dev) useLightnincsss(false) should have the correct color (css ordering) during hot reloads",
        "Ordering with Global CSS and Modules (dev) useLightnincsss(false) should not execute scripts in any order",
        "Ordering with Global CSS and Modules (dev) useLightnincsss(true) should have the correct color (css ordering)",
        "Ordering with Global CSS and Modules (dev) useLightnincsss(true) should have the correct color (css ordering) during hot reloads",
        "Ordering with Global CSS and Modules (dev) useLightnincsss(true) should not execute scripts in any order",
        "Ordering with Global CSS and Modules (prod) production mode useLightnincsss(false) should have compiled successfully",
        "Ordering with Global CSS and Modules (prod) production mode useLightnincsss(false) should have the correct color (css ordering)",
        "Ordering with Global CSS and Modules (prod) production mode useLightnincsss(true) should have compiled successfully",
        "Ordering with Global CSS and Modules (prod) production mode useLightnincsss(true) should have the correct color (css ordering)",
        "should handle unresolved files gracefully production mode should build correctly"
      ],
      "failed": [
        "Data URLs production mode should have emitted expected files",
        "should handle unresolved files gracefully production mode should have correct file references in CSS output"
      ],
      "pending": [
        "Basic CSS Modules Ordering useLightnincsss(false) Development Mode should have correct color on index page (on hover)",
        "Basic CSS Modules Ordering useLightnincsss(false) Development Mode should have correct color on index page (on load)",
        "Basic CSS Modules Ordering useLightnincsss(false) Development Mode should have correct color on index page (on nav)",
        "Basic CSS Modules Ordering useLightnincsss(false) production mode should have correct color on index page (on hover)",
        "Basic CSS Modules Ordering useLightnincsss(false) production mode should have correct color on index page (on load)",
        "Basic CSS Modules Ordering useLightnincsss(false) production mode should have correct color on index page (on nav)",
        "Basic CSS Modules Ordering useLightnincsss(true) Development Mode should have correct color on index page (on hover)",
        "Basic CSS Modules Ordering useLightnincsss(true) Development Mode should have correct color on index page (on load)",
        "Basic CSS Modules Ordering useLightnincsss(true) Development Mode should have correct color on index page (on nav)",
        "Basic CSS Modules Ordering useLightnincsss(true) production mode should have correct color on index page (on hover)",
        "Basic CSS Modules Ordering useLightnincsss(true) production mode should have correct color on index page (on load)",
        "Basic CSS Modules Ordering useLightnincsss(true) production mode should have correct color on index page (on nav)",
        "CSS Modules Composes Ordering useLightnincsss(false) development mode should have correct color on index page (on hover)",
        "CSS Modules Composes Ordering useLightnincsss(false) development mode should have correct color on index page (on load)",
        "CSS Modules Composes Ordering useLightnincsss(false) development mode should have correct color on index page (on nav from index)",
        "CSS Modules Composes Ordering useLightnincsss(false) development mode should have correct color on index page (on nav from other)",
        "CSS Modules Composes Ordering useLightnincsss(false) production mode should have correct CSS injection order",
        "CSS Modules Composes Ordering useLightnincsss(false) production mode should have correct color on index page (on hover)",
        "CSS Modules Composes Ordering useLightnincsss(false) production mode should have correct color on index page (on load)",
        "CSS Modules Composes Ordering useLightnincsss(false) production mode should have correct color on index page (on nav from index)",
        "CSS Modules Composes Ordering useLightnincsss(false) production mode should have correct color on index page (on nav from other)",
        "CSS Modules Composes Ordering useLightnincsss(false) production mode should not change color on hover",
        "CSS Modules Composes Ordering useLightnincsss(true) development mode should have correct color on index page (on hover)",
        "CSS Modules Composes Ordering useLightnincsss(true) development mode should have correct color on index page (on load)",
        "CSS Modules Composes Ordering useLightnincsss(true) development mode should have correct color on index page (on nav from index)",
        "CSS Modules Composes Ordering useLightnincsss(true) development mode should have correct color on index page (on nav from other)",
        "CSS Modules Composes Ordering useLightnincsss(true) production mode should have correct CSS injection order",
        "CSS Modules Composes Ordering useLightnincsss(true) production mode should have correct color on index page (on hover)",
        "CSS Modules Composes Ordering useLightnincsss(true) production mode should have correct color on index page (on load)",
        "CSS Modules Composes Ordering useLightnincsss(true) production mode should have correct color on index page (on nav from index)",
        "CSS Modules Composes Ordering useLightnincsss(true) production mode should have correct color on index page (on nav from other)",
        "CSS Modules Composes Ordering useLightnincsss(true) production mode should not change color on hover"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css/test/css-rendering.test.js": {
      "passed": [
        "CSS Support CSS page transition inject <style> with nonce so it works with CSP header production mode should have correct CSS injection order",
        "CSS Support CSS page transition inject <style> with nonce so it works with CSP header production mode should have correct color on index page (on hover)",
        "CSS Support CSS page transition inject <style> with nonce so it works with CSP header production mode should have correct color on index page (on load)",
        "CSS Support CSS page transition inject <style> with nonce so it works with CSP header production mode should have correct color on index page (on nav from index)",
        "CSS Support CSS page transition inject <style> with nonce so it works with CSP header production mode should have correct color on index page (on nav from other)",
        "CSS Support CSS page transition inject <style> with nonce so it works with CSP header production mode should not change color on hover",
        "CSS Support Page hydrates with CSS and not waiting on dependencies useLightnincsss(false) production mode should hydrate black without dependencies manifest",
        "CSS Support Page hydrates with CSS and not waiting on dependencies useLightnincsss(false) production mode should hydrate red without dependencies manifest",
        "CSS Support Page hydrates with CSS and not waiting on dependencies useLightnincsss(false) production mode should route from black to red without dependencies",
        "CSS Support Page hydrates with CSS and not waiting on dependencies useLightnincsss(true) production mode should hydrate black without dependencies manifest",
        "CSS Support Page hydrates with CSS and not waiting on dependencies useLightnincsss(true) production mode should hydrate red without dependencies manifest",
        "CSS Support Page hydrates with CSS and not waiting on dependencies useLightnincsss(true) production mode should route from black to red without dependencies",
        "CSS Support production mode CSS Import from node_modules useLightnincsss(false) should fail the build",
        "CSS Support production mode CSS Import from node_modules useLightnincsss(true) should fail the build"
      ],
      "failed": [
        "CSS Support Page reload on CSS missing useLightnincsss(false) production mode should fall back to server-side transition on missing CSS",
        "CSS Support Page reload on CSS missing useLightnincsss(true) production mode should fall back to server-side transition on missing CSS"
      ],
      "pending": [
        "CSS Support CSS Cleanup on Render Failure useLightnincsss(false) production mode not have intermediary page styles on error rendering",
        "CSS Support CSS Cleanup on Render Failure useLightnincsss(true) production mode not have intermediary page styles on error rendering"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css/test/dev-css-handling.test.js": {
      "passed": [
        "Body is not hidden when broken in Development should have body visible",
        "Body is not hidden when unused in Development should have body visible",
        "Can hot reload CSS without losing state should update CSS color without remounting <input>",
        "Has CSS in computed styles in Development should have CSS for page",
        "React Lifecyce Order (dev) should have the correct color on mount after navigation"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/css/test/valid-invalid-css.test.js": {
      "passed": [
        "Valid Global CSS from npm production mode should've emitted a single CSS file"
      ],
      "failed": [],
      "pending": [
        "Invalid CSS in _document production mode should fail to build",
        "Invalid Global CSS production mode should fail to build",
        "Invalid Global CSS with Custom App production mode should fail to build",
        "Valid and Invalid Global CSS with Custom App production mode should fail to build"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/custom-error-page-exception/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Custom error page exception production mode should handle errors from _error render"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/custom-error/test/index.test.js": {
      "passed": [
        "Custom _error development mode 1 should not warn with /_error and /404 when rendering error first",
        "Custom _error development mode 2 should not warn with /_error and /404",
        "Custom _error development mode 2 should warn on custom /_error without custom /404",
        "Custom _error production mode renders custom _error successfully",
        "Custom _error production mode should not contain /_error in build output"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/custom-page-extension/test/index.test.js": {
      "passed": [
        "Custom page extension production mode should work dynamic page",
        "Custom page extension production mode should work with normal page"
      ],
      "failed": [],
      "pending": [
        "Custom page extension development mode should work dynamic page",
        "Custom page extension development mode should work with normal page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/custom-routes-catchall/test/index.test.js": {
      "passed": [
        "Custom routes production mode should rewrite and render page correctly",
        "Custom routes production mode should rewrite to /_next/static correctly",
        "Custom routes production mode should rewrite to public file correctly",
        "Custom routes production mode should rewrite to public/static correctly"
      ],
      "failed": [],
      "pending": [
        "Custom routes development mode should rewrite and render page correctly",
        "Custom routes development mode should rewrite to /_next/static correctly",
        "Custom routes development mode should rewrite to public file correctly",
        "Custom routes development mode should rewrite to public/static correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/custom-routes-i18n-index-redirect/test/index.test.js": {
      "passed": [
        "Custom routes i18n with index redirect production mode should respond to default locale redirects correctly for index redirect"
      ],
      "failed": [],
      "pending": [
        "Custom routes i18n with index redirect development mode should respond to default locale redirects correctly for index redirect"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/custom-routes-i18n/test/index.test.js": {
      "passed": [
        "Custom routes i18n production mode should navigate on the client with rewrites correctly",
        "Custom routes i18n production mode should respond to default locale redirects correctly",
        "Custom routes i18n production mode should rewrite correctly",
        "Custom routes i18n production mode should rewrite index routes correctly"
      ],
      "failed": [],
      "pending": [
        "Custom routes i18n development mode should navigate on the client with rewrites correctly",
        "Custom routes i18n development mode should respond to default locale redirects correctly",
        "Custom routes i18n development mode should rewrite correctly",
        "Custom routes i18n development mode should rewrite index routes correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/custom-routes/test/index.test.js": {
      "passed": [
        "Custom routes no-op rewrite should not error for no-op rewrite and auto export dynamic route",
        "Custom routes production mode should add refresh header for 308 redirect",
        "Custom routes production mode should allow params in query for redirect",
        "Custom routes production mode should allow params in query for rewrite",
        "Custom routes production mode should allow redirecting to external resource",
        "Custom routes production mode should apply headers for exact match",
        "Custom routes production mode should apply headers for multi match",
        "Custom routes production mode should apply params for header key/values",
        "Custom routes production mode should apply params header key/values with URL",
        "Custom routes production mode should apply params header key/values with URL that has port",
        "Custom routes production mode should continue in beforeFiles rewrites",
        "Custom routes production mode should double redirect successfully",
        "Custom routes production mode should handle api rewrite with param successfully",
        "Custom routes production mode should handle api rewrite with un-named param successfully",
        "Custom routes production mode should handle basic api rewrite successfully",
        "Custom routes production mode should handle beforeFiles rewrite to dynamic route correctly",
        "Custom routes production mode should handle beforeFiles rewrite to partly dynamic route correctly",
        "Custom routes production mode should handle chained redirects successfully",
        "Custom routes production mode should handle chained rewrites successfully",
        "Custom routes production mode should handle encoded value in the pathname correctly",
        "Custom routes production mode should handle external beforeFiles rewrite correctly",
        "Custom routes production mode should handle has query encoding correctly",
        "Custom routes production mode should handle named regex parameters with multi-match successfully",
        "Custom routes production mode should handle one-to-one rewrite successfully",
        "Custom routes production mode should handle param like headers properly",
        "Custom routes production mode should handle query for rewrite correctly",
        "Custom routes production mode should handle unnamed parameters with multi-match successfully",
        "Custom routes production mode should have correct encoding for params with catchall rewrite",
        "Custom routes production mode should have correct header for catchall rewrite",
        "Custom routes production mode should have correct params for catchall rewrite",
        "Custom routes production mode should have correct query for catchall rewrite",
        "Custom routes production mode should have correctly encoded params in query for redirect",
        "Custom routes production mode should have correctly encoded query in location and refresh headers",
        "Custom routes production mode should have redirects/rewrites in build output with debug flag",
        "Custom routes production mode should honor caseSensitiveRoutes config for /HELLO-world",
        "Custom routes production mode should honor caseSensitiveRoutes config for /add-HEADER",
        "Custom routes production mode should honor caseSensitiveRoutes config for /docs/GITHUB",
        "Custom routes production mode should honor caseSensitiveRoutes config for /to-ANOTHER",
        "Custom routes production mode should match /_next file after rewrite",
        "Custom routes production mode should match a page after a rewrite",
        "Custom routes production mode should match dynamic route after rewrite",
        "Custom routes production mode should match has cookie for header correctly",
        "Custom routes production mode should match has cookie redirect correctly",
        "Custom routes production mode should match has cookie rewrite correctly",
        "Custom routes production mode should match has header for header correctly",
        "Custom routes production mode should match has header redirect correctly",
        "Custom routes production mode should match has header rewrite correctly",
        "Custom routes production mode should match has host for header correctly",
        "Custom routes production mode should match has host redirect and insert in destination correctly",
        "Custom routes production mode should match has host redirect correctly",
        "Custom routes production mode should match has host rewrite correctly",
        "Custom routes production mode should match has query for header correctly",
        "Custom routes production mode should match has query redirect correctly",
        "Custom routes production mode should match has query redirect with duplicate query key",
        "Custom routes production mode should match has query rewrite correctly",
        "Custom routes production mode should match has rewrite correctly before files",
        "Custom routes production mode should match missing cookie headers correctly",
        "Custom routes production mode should match missing cookie redirect correctly",
        "Custom routes production mode should match missing cookie rewrite correctly",
        "Custom routes production mode should match missing header headers correctly",
        "Custom routes production mode should match missing header redirect correctly",
        "Custom routes production mode should match missing header rewrite correctly",
        "Custom routes production mode should match missing query headers correctly",
        "Custom routes production mode should match missing query redirect correctly",
        "Custom routes production mode should match missing query rewrite correctly",
        "Custom routes production mode should match public file after rewrite",
        "Custom routes production mode should not allow rewrite to override page file",
        "Custom routes production mode should not append params when one is used in destination path",
        "Custom routes production mode should not hang when proxy rewrite fails",
        "Custom routes production mode should not match dynamic route immediately after applying header",
        "Custom routes production mode should not match redirect for /_next",
        "Custom routes production mode should not pass non captured has value for rewrite correctly",
        "Custom routes production mode should not rewrite for _next/data route when a match is found",
        "Custom routes production mode should not show warning for custom routes when not next export",
        "Custom routes production mode should output routes-manifest successfully",
        "Custom routes production mode should overwrite param values correctly",
        "Custom routes production mode should parse params correctly for rewrite to auto-export dynamic page",
        "Custom routes production mode should pass captured has value for rewrite correctly",
        "Custom routes production mode should pass has segment for rewrite correctly",
        "Custom routes production mode should provide params correctly for rewrite to auto-export non-dynamic page",
        "Custom routes production mode should redirect successfully with catchall",
        "Custom routes production mode should redirect successfully with permanent: false",
        "Custom routes production mode should redirect successfully with provided statusCode",
        "Custom routes production mode should redirect with URL in query correctly",
        "Custom routes production mode should redirect with URL in query correctly non-encoded",
        "Custom routes production mode should redirect with hash successfully",
        "Custom routes production mode should redirect with params successfully",
        "Custom routes production mode should resolveHref correctly navigating through history",
        "Custom routes production mode should rewrite with params successfully",
        "Custom routes production mode should server static files through a rewrite",
        "Custom routes production mode should successfully rewrite a WebSocket request",
        "Custom routes production mode should successfully rewrite a WebSocket request to a page",
        "Custom routes production mode should support URL for header key/values",
        "Custom routes production mode should support long URLs for rewrites",
        "Custom routes production mode should support named like unnamed parameters correctly",
        "Custom routes production mode should support named pattern for header key/values",
        "Custom routes production mode should support proxying to external resource",
        "Custom routes production mode should support unnamed parameters correctly",
        "Custom routes production mode should work successfully on the client",
        "Custom routes production mode should work with rewrite when manually specifying href/as",
        "Custom routes production mode should work with rewrite when only specifying href",
        "Custom routes production mode should work with rewrite when only specifying href and ends in dynamic route",
        "Custom routes production mode show allow redirect to override the page",
        "Custom routes should load custom routes when only one type is used production mode should work with just headers",
        "Custom routes should load custom routes when only one type is used production mode should work with just redirects",
        "Custom routes should load custom routes when only one type is used production mode should work with just rewrites",
        "export production mode should not show warning for custom routes when not next export"
      ],
      "failed": [],
      "pending": [
        "Custom routes development mode should add refresh header for 308 redirect",
        "Custom routes development mode should allow params in query for redirect",
        "Custom routes development mode should allow params in query for rewrite",
        "Custom routes development mode should allow redirecting to external resource",
        "Custom routes development mode should apply headers for exact match",
        "Custom routes development mode should apply headers for multi match",
        "Custom routes development mode should apply params for header key/values",
        "Custom routes development mode should apply params header key/values with URL",
        "Custom routes development mode should apply params header key/values with URL that has port",
        "Custom routes development mode should continue in beforeFiles rewrites",
        "Custom routes development mode should double redirect successfully",
        "Custom routes development mode should handle api rewrite with param successfully",
        "Custom routes development mode should handle api rewrite with un-named param successfully",
        "Custom routes development mode should handle basic api rewrite successfully",
        "Custom routes development mode should handle beforeFiles rewrite to dynamic route correctly",
        "Custom routes development mode should handle beforeFiles rewrite to partly dynamic route correctly",
        "Custom routes development mode should handle chained redirects successfully",
        "Custom routes development mode should handle chained rewrites successfully",
        "Custom routes development mode should handle encoded value in the pathname correctly",
        "Custom routes development mode should handle external beforeFiles rewrite correctly",
        "Custom routes development mode should handle has query encoding correctly",
        "Custom routes development mode should handle named regex parameters with multi-match successfully",
        "Custom routes development mode should handle one-to-one rewrite successfully",
        "Custom routes development mode should handle param like headers properly",
        "Custom routes development mode should handle query for rewrite correctly",
        "Custom routes development mode should handle unnamed parameters with multi-match successfully",
        "Custom routes development mode should have correct encoding for params with catchall rewrite",
        "Custom routes development mode should have correct header for catchall rewrite",
        "Custom routes development mode should have correct params for catchall rewrite",
        "Custom routes development mode should have correct query for catchall rewrite",
        "Custom routes development mode should have correctly encoded params in query for redirect",
        "Custom routes development mode should have correctly encoded query in location and refresh headers",
        "Custom routes development mode should honor caseSensitiveRoutes config for /HELLO-world",
        "Custom routes development mode should honor caseSensitiveRoutes config for /add-HEADER",
        "Custom routes development mode should honor caseSensitiveRoutes config for /docs/GITHUB",
        "Custom routes development mode should honor caseSensitiveRoutes config for /to-ANOTHER",
        "Custom routes development mode should match /_next file after rewrite",
        "Custom routes development mode should match a page after a rewrite",
        "Custom routes development mode should match dynamic route after rewrite",
        "Custom routes development mode should match has cookie for header correctly",
        "Custom routes development mode should match has cookie redirect correctly",
        "Custom routes development mode should match has cookie rewrite correctly",
        "Custom routes development mode should match has header for header correctly",
        "Custom routes development mode should match has header redirect correctly",
        "Custom routes development mode should match has header rewrite correctly",
        "Custom routes development mode should match has host for header correctly",
        "Custom routes development mode should match has host redirect and insert in destination correctly",
        "Custom routes development mode should match has host redirect correctly",
        "Custom routes development mode should match has host rewrite correctly",
        "Custom routes development mode should match has query for header correctly",
        "Custom routes development mode should match has query redirect correctly",
        "Custom routes development mode should match has query redirect with duplicate query key",
        "Custom routes development mode should match has query rewrite correctly",
        "Custom routes development mode should match has rewrite correctly before files",
        "Custom routes development mode should match missing cookie headers correctly",
        "Custom routes development mode should match missing cookie redirect correctly",
        "Custom routes development mode should match missing cookie rewrite correctly",
        "Custom routes development mode should match missing header headers correctly",
        "Custom routes development mode should match missing header redirect correctly",
        "Custom routes development mode should match missing header rewrite correctly",
        "Custom routes development mode should match missing query headers correctly",
        "Custom routes development mode should match missing query redirect correctly",
        "Custom routes development mode should match missing query rewrite correctly",
        "Custom routes development mode should match public file after rewrite",
        "Custom routes development mode should not allow rewrite to override page file",
        "Custom routes development mode should not append params when one is used in destination path",
        "Custom routes development mode should not hang when proxy rewrite fails",
        "Custom routes development mode should not match dynamic route immediately after applying header",
        "Custom routes development mode should not match redirect for /_next",
        "Custom routes development mode should not pass non captured has value for rewrite correctly",
        "Custom routes development mode should not rewrite for _next/data route when a match is found",
        "Custom routes development mode should overwrite param values correctly",
        "Custom routes development mode should parse params correctly for rewrite to auto-export dynamic page",
        "Custom routes development mode should pass captured has value for rewrite correctly",
        "Custom routes development mode should pass has segment for rewrite correctly",
        "Custom routes development mode should provide params correctly for rewrite to auto-export non-dynamic page",
        "Custom routes development mode should redirect successfully with catchall",
        "Custom routes development mode should redirect successfully with permanent: false",
        "Custom routes development mode should redirect successfully with provided statusCode",
        "Custom routes development mode should redirect with URL in query correctly",
        "Custom routes development mode should redirect with URL in query correctly non-encoded",
        "Custom routes development mode should redirect with hash successfully",
        "Custom routes development mode should redirect with params successfully",
        "Custom routes development mode should resolveHref correctly navigating through history",
        "Custom routes development mode should rewrite with params successfully",
        "Custom routes development mode should server static files through a rewrite",
        "Custom routes development mode should successfully rewrite a WebSocket request",
        "Custom routes development mode should successfully rewrite a WebSocket request to a page",
        "Custom routes development mode should support URL for header key/values",
        "Custom routes development mode should support long URLs for rewrites",
        "Custom routes development mode should support named like unnamed parameters correctly",
        "Custom routes development mode should support named pattern for header key/values",
        "Custom routes development mode should support proxying to external resource",
        "Custom routes development mode should support unnamed parameters correctly",
        "Custom routes development mode should work successfully on the client",
        "Custom routes development mode should work with rewrite when manually specifying href/as",
        "Custom routes development mode should work with rewrite when only specifying href",
        "Custom routes development mode should work with rewrite when only specifying href and ends in dynamic route",
        "Custom routes development mode show allow redirect to override the page",
        "Custom routes should load custom routes when only one type is used development mode should work with just headers",
        "Custom routes should load custom routes when only one type is used development mode should work with just redirects",
        "Custom routes should load custom routes when only one type is used development mode should work with just rewrites"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/custom-server-types/test/index.test.js": {
      "passed": ["Custom Server TypeScript should build server.ts correctly"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/custom-server/test/index.test.js": {
      "passed": [
        "Custom Server using HTTP Error when rendering without starting slash production mode should warn in production mode",
        "Custom Server using HTTP Error when rendering without starting slash should warn in development mode",
        "Custom Server using HTTP HMR with custom server Should support HMR when rendering with /index pathname",
        "Custom Server using HTTP compression handling should handle compression for route /",
        "Custom Server using HTTP compression handling should handle compression for route /no-query",
        "Custom Server using HTTP unhandled rejection stderr should include error message and stack trace",
        "Custom Server using HTTP with a custom fetch polyfill should serve internal file from render",
        "Custom Server using HTTP with dynamic assetPrefix should handle custom urls with requests handler",
        "Custom Server using HTTP with dynamic assetPrefix should handle null assetPrefix accordingly",
        "Custom Server using HTTP with dynamic assetPrefix should handle render with undefined query",
        "Custom Server using HTTP with dynamic assetPrefix should render nested index",
        "Custom Server using HTTP with dynamic assetPrefix should serve internal file from render",
        "Custom Server using HTTP with dynamic assetPrefix should set the assetPrefix dynamically",
        "Custom Server using HTTP with dynamic assetPrefix should set the assetPrefix to a given request",
        "Custom Server using HTTP with generateEtags disabled response does not include etag header",
        "Custom Server using HTTP with generateEtags enabled production mode response includes etag header",
        "Custom Server using HTTP with middleware $title should read the expected url protocol in middleware",
        "Custom Server using HTTPS Error when rendering without starting slash production mode should warn in production mode",
        "Custom Server using HTTPS Error when rendering without starting slash should warn in development mode",
        "Custom Server using HTTPS compression handling should handle compression for route /",
        "Custom Server using HTTPS compression handling should handle compression for route /no-query",
        "Custom Server using HTTPS unhandled rejection stderr should include error message and stack trace",
        "Custom Server using HTTPS with a custom fetch polyfill should serve internal file from render",
        "Custom Server using HTTPS with dynamic assetPrefix should handle custom urls with requests handler",
        "Custom Server using HTTPS with dynamic assetPrefix should handle null assetPrefix accordingly",
        "Custom Server using HTTPS with dynamic assetPrefix should handle render with undefined query",
        "Custom Server using HTTPS with dynamic assetPrefix should render nested index",
        "Custom Server using HTTPS with dynamic assetPrefix should serve internal file from render",
        "Custom Server using HTTPS with dynamic assetPrefix should set the assetPrefix dynamically",
        "Custom Server using HTTPS with dynamic assetPrefix should set the assetPrefix to a given request",
        "Custom Server using HTTPS with generateEtags disabled response does not include etag header",
        "Custom Server using HTTPS with generateEtags enabled production mode response includes etag header",
        "Custom Server using HTTPS with middleware $title should read the expected url protocol in middleware"
      ],
      "failed": [],
      "pending": [
        "Custom Server using HTTP with dynamic assetPrefix should contain customServer in NEXT_DATA",
        "Custom Server using HTTPS with dynamic assetPrefix should contain customServer in NEXT_DATA"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/data-fetching-errors/test/index.test.js": {
      "passed": [
        "GS(S)P Page Errors production mode Error stack printed to stderr",
        "GS(S)P Page Errors production mode should show error for getServerSideProps as component member",
        "GS(S)P Page Errors production mode should show error for getStaticPaths as component member",
        "GS(S)P Page Errors production mode should show error for getStaticProps as component member",
        "GS(S)P Page Errors production mode should show error for undefined getStaticProps"
      ],
      "failed": [],
      "pending": [
        "GS(S)P Page Errors development mode should show error for getServerSideProps as component member",
        "GS(S)P Page Errors development mode should show error for getStaticPaths as component member",
        "GS(S)P Page Errors development mode should show error for getStaticProps as component member",
        "GS(S)P Page Errors development mode should show error for undefined getServerSideProps",
        "GS(S)P Page Errors development mode should show error for undefined getStaticProps"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/dedupes-scripts/test/index.test.js": {
      "passed": [
        "De-dedupes scripts in _document production mode Does not have duplicate script references"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/development-hmr-refresh/test/index.test.js": {
      "passed": ["page should not reload when the file is not changed"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/development-runtime-config/test/index.test.js": {
      "passed": [
        "should work with runtime-config in next.config.js empty runtime-config",
        "should work with runtime-config in next.config.js with runtime-config"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/disable-js/test/index.test.js": {
      "passed": [
        "disabled runtime JS production mode should not have __NEXT_DATA__ script",
        "disabled runtime JS production mode should not have preload links",
        "disabled runtime JS production mode should not have scripts",
        "disabled runtime JS production mode should render the page"
      ],
      "failed": [],
      "pending": [
        "disabled runtime JS development mode should have a script for each preload link",
        "disabled runtime JS development mode should not have __NEXT_DATA__ script",
        "disabled runtime JS development mode should render the page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/dist-dir/test/index.test.js": {
      "passed": [
        "distDir With basic usage production mode should build the app within the given `dist` directory",
        "distDir With basic usage production mode should not build the app within the default `.next` directory",
        "distDir With basic usage production mode should render the page",
        "distDir production mode should handle undefined distDir",
        "distDir production mode should throw error with invalid distDir"
      ],
      "failed": [],
      "pending": [
        "distDir development mode should build the app within the given `dist` directory",
        "distDir development mode should not build the app within the default `.next` directory",
        "distDir development mode should render the page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/document-file-dependencies/test/index.test.js": {
      "passed": [
        "File Dependencies production mode should apply styles defined in global and module css files in 404 page",
        "File Dependencies production mode should apply styles defined in global and module css files in a standard page.",
        "File Dependencies production mode should apply styles defined in global and module css files in error page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/document-head-warnings/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Custom Document Head Warnings development mode warns when using a <title> in document/head",
        "Custom Document Head Warnings development mode warns when using a crossOrigin attribute on document/head",
        "Custom Document Head Warnings development mode warns when using viewport meta tags in document/head"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/draft-mode/test/index.test.ts": {
      "passed": [
        "Test Draft Mode production mode should compile successfully",
        "Test Draft Mode production mode should enable draft mode",
        "Test Draft Mode production mode should not return fallback page on draft request",
        "Test Draft Mode production mode should pass draft mode to API routes",
        "Test Draft Mode production mode should pass undefined to API routes when not in draft mode",
        "Test Draft Mode production mode should return cookies to be expired on disable request",
        "Test Draft Mode production mode should return correct caching headers for draft mode request",
        "Test Draft Mode production mode should return dynamic response when draft mode enabled",
        "Test Draft Mode production mode should return prerendered page on first request",
        "Test Draft Mode production mode should return prerendered page on second request",
        "Test Draft Mode production mode should start production application"
      ],
      "failed": [],
      "pending": [
        "Test Draft Mode development mode should disable draft mode",
        "Test Draft Mode development mode should enable draft mode",
        "Test Draft Mode development mode should fetch draft data on CST",
        "Test Draft Mode development mode should fetch draft data on SSR",
        "Test Draft Mode development mode should return cookies to be expired after dev server reboot",
        "Test Draft Mode development mode should start development application",
        "Test Draft Mode development mode should start the client-side browser"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/dynamic-optional-routing-root-fallback/test/index.test.js": {
      "passed": [
        "Dynamic Optional Routing Root Fallback production mode should render optional catch-all top-level route with no segments",
        "Dynamic Optional Routing Root Fallback production mode should render optional catch-all top-level route with one segment",
        "Dynamic Optional Routing Root Fallback production mode should render optional catch-all top-level route with two segments"
      ],
      "failed": [],
      "pending": [
        "Dynamic Optional Routing Root Fallback development mode should render optional catch-all top-level route with no segments",
        "Dynamic Optional Routing Root Fallback development mode should render optional catch-all top-level route with one segment",
        "Dynamic Optional Routing Root Fallback development mode should render optional catch-all top-level route with two segments"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/dynamic-optional-routing-root-static-paths/test/index.test.js": {
      "passed": [
        "Dynamic Optional Routing production mode should render optional catch-all top-level route with no segments",
        "Dynamic Optional Routing production mode should render optional catch-all top-level route with one segment",
        "Dynamic Optional Routing production mode should render optional catch-all top-level route with two segments"
      ],
      "failed": [],
      "pending": [
        "Dynamic Optional Routing development mode should render optional catch-all top-level route with no segments",
        "Dynamic Optional Routing development mode should render optional catch-all top-level route with one segment",
        "Dynamic Optional Routing development mode should render optional catch-all top-level route with two segments"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/dynamic-optional-routing/test/index.test.js": {
      "passed": [
        "Dynamic Optional Routing production mode should fail to build when mixed with regular catch-all",
        "Dynamic Optional Routing production mode should fail to build when optional but no catch-all",
        "Dynamic Optional Routing production mode should fail to build when optional route has index.js at root",
        "Dynamic Optional Routing production mode should fail to build when optional route has same page at root",
        "Dynamic Optional Routing production mode should fail to build when param is not explicitly defined",
        "Dynamic Optional Routing production mode should fall back to top-level catch-all",
        "Dynamic Optional Routing production mode should fallback correctly when fallback enabled",
        "Dynamic Optional Routing production mode should handle getStaticPaths 1 segment",
        "Dynamic Optional Routing production mode should handle getStaticPaths 1 segment and trailing slash",
        "Dynamic Optional Routing production mode should handle getStaticPaths 2 segments",
        "Dynamic Optional Routing production mode should handle getStaticPaths 2 segments and trailing slash",
        "Dynamic Optional Routing production mode should handle getStaticPaths no segments",
        "Dynamic Optional Routing production mode should handle getStaticPaths no segments and trailing slash",
        "Dynamic Optional Routing production mode should handle getStaticPaths with fallback 2 segments",
        "Dynamic Optional Routing production mode should handle getStaticPaths with fallback no segments",
        "Dynamic Optional Routing production mode should match catch-all api route with multiple segments",
        "Dynamic Optional Routing production mode should match catch-all api route with no segments",
        "Dynamic Optional Routing production mode should match catch-all api route with no segments and leading slash",
        "Dynamic Optional Routing production mode should match catch-all api route with single segment",
        "Dynamic Optional Routing production mode should match root path on false param",
        "Dynamic Optional Routing production mode should match root path on null param",
        "Dynamic Optional Routing production mode should match root path on undefined param",
        "Dynamic Optional Routing production mode should render catch-all nested route with multiple segments",
        "Dynamic Optional Routing production mode should render catch-all nested route with no segments",
        "Dynamic Optional Routing production mode should render catch-all nested route with no segments and leading slash",
        "Dynamic Optional Routing production mode should render catch-all nested route with single segment",
        "Dynamic Optional Routing production mode should render catch-all top-level route with multiple segments",
        "Dynamic Optional Routing production mode should render catch-all top-level route with no segments",
        "Dynamic Optional Routing production mode should render catch-all top-level route with single segment"
      ],
      "failed": [],
      "pending": [
        "Dynamic Optional Routing development mode should fail to build when mixed with regular catch-all",
        "Dynamic Optional Routing development mode should fail to build when optional but no catch-all",
        "Dynamic Optional Routing development mode should fail to build when optional route has index.js at root",
        "Dynamic Optional Routing development mode should fail to build when optional route has same page at root",
        "Dynamic Optional Routing development mode should fall back to top-level catch-all",
        "Dynamic Optional Routing development mode should fallback correctly when fallback enabled",
        "Dynamic Optional Routing development mode should handle getStaticPaths 1 segment",
        "Dynamic Optional Routing development mode should handle getStaticPaths 1 segment and trailing slash",
        "Dynamic Optional Routing development mode should handle getStaticPaths 2 segments",
        "Dynamic Optional Routing development mode should handle getStaticPaths 2 segments and trailing slash",
        "Dynamic Optional Routing development mode should handle getStaticPaths no segments",
        "Dynamic Optional Routing development mode should handle getStaticPaths no segments and trailing slash",
        "Dynamic Optional Routing development mode should handle getStaticPaths with fallback 2 segments",
        "Dynamic Optional Routing development mode should handle getStaticPaths with fallback no segments",
        "Dynamic Optional Routing development mode should match catch-all api route with multiple segments",
        "Dynamic Optional Routing development mode should match catch-all api route with no segments",
        "Dynamic Optional Routing development mode should match catch-all api route with no segments and leading slash",
        "Dynamic Optional Routing development mode should match catch-all api route with single segment",
        "Dynamic Optional Routing development mode should match root path on false param",
        "Dynamic Optional Routing development mode should match root path on null param",
        "Dynamic Optional Routing development mode should match root path on undefined param",
        "Dynamic Optional Routing development mode should render catch-all nested route with multiple segments",
        "Dynamic Optional Routing development mode should render catch-all nested route with no segments",
        "Dynamic Optional Routing development mode should render catch-all nested route with no segments and leading slash",
        "Dynamic Optional Routing development mode should render catch-all nested route with single segment",
        "Dynamic Optional Routing development mode should render catch-all top-level route with multiple segments",
        "Dynamic Optional Routing development mode should render catch-all top-level route with no segments",
        "Dynamic Optional Routing development mode should render catch-all top-level route with single segment"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/dynamic-require/test/index.test.js": {
      "passed": [
        "Dynamic require should not throw error when dynamic require is used"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/dynamic-route-rename/test/index.test.js": {
      "passed": [
        "Dynamic route rename casing should not throw error when changing casing of dynamic route file"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/dynamic-routing/test/index.test.js": {
      "passed": [
        "Dynamic Routing production mode [catch all] should not decode slashes (end)",
        "Dynamic Routing production mode [catch all] should not decode slashes (middle)",
        "Dynamic Routing production mode [catch all] should not decode slashes (start)",
        "Dynamic Routing production mode [catch all] should not match root on SSR",
        "Dynamic Routing production mode [catch all] should pass param in getInitialProps during SSR",
        "Dynamic Routing production mode [catch all] should pass params in getInitialProps during SSR",
        "Dynamic Routing production mode [catch all] should strip trailing slash",
        "Dynamic Routing production mode [catch-all] should pass params in getInitialProps during client navigation (encoded)",
        "Dynamic Routing production mode [catch-all] should pass params in getInitialProps during client navigation (multi)",
        "Dynamic Routing production mode [catch-all] should pass params in getInitialProps during client navigation (single)",
        "Dynamic Routing production mode [catch-all] shouldn't fail on colon followed by double digits in the path",
        "Dynamic Routing production mode [nested ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing production mode [nested ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing production mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
        "Dynamic Routing production mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
        "Dynamic Routing production mode [predefined ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing production mode [predefined ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing production mode [predefined ssg: prerendered catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing production mode [predefined ssg: prerendered catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing production mode [ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing production mode [ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi interpolated)",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi) no as",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single interpolated)",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
        "Dynamic Routing production mode should allow calling Router.push on mount successfully",
        "Dynamic Routing production mode should handle only hash on dynamic route",
        "Dynamic Routing production mode should handle only query on dynamic route",
        "Dynamic Routing production mode should have correct cache entries on prefetch",
        "Dynamic Routing production mode should navigate optional dynamic page",
        "Dynamic Routing production mode should navigate optional dynamic page with value",
        "Dynamic Routing production mode should navigate to a dynamic page successfully",
        "Dynamic Routing production mode should navigate to a dynamic page successfully interpolated",
        "Dynamic Routing production mode should navigate to a dynamic page successfully interpolated with additional query values",
        "Dynamic Routing production mode should navigate to a dynamic page successfully no as",
        "Dynamic Routing production mode should navigate to a dynamic page with href with differing query and as correctly",
        "Dynamic Routing production mode should navigate to a nested dynamic page successfully",
        "Dynamic Routing production mode should navigate to a nested dynamic page successfully interpolated",
        "Dynamic Routing production mode should navigate to a nested dynamic page successfully no as",
        "Dynamic Routing production mode should navigate with hash to dynamic route with link",
        "Dynamic Routing production mode should navigate with hash to dynamic route with router",
        "Dynamic Routing production mode should not error when requesting dynamic page with /api",
        "Dynamic Routing production mode should not have any query values when not defined",
        "Dynamic Routing production mode should not have placeholder query values for SSS",
        "Dynamic Routing production mode should not preload buildManifest for non-auto export dynamic pages",
        "Dynamic Routing production mode should output a routes-manifest correctly",
        "Dynamic Routing production mode should pass params in getInitialProps during SSR",
        "Dynamic Routing production mode should pass params in getInitialProps during client navigation",
        "Dynamic Routing production mode should prioritize a non-dynamic page",
        "Dynamic Routing production mode should prioritize public files over dynamic route",
        "Dynamic Routing production mode should render another normal route",
        "Dynamic Routing production mode should render dynamic page",
        "Dynamic Routing production mode should render dynamic route with query",
        "Dynamic Routing production mode should render nested dynamic page",
        "Dynamic Routing production mode should render nested optional dynamic page",
        "Dynamic Routing production mode should render normal route",
        "Dynamic Routing production mode should render optional dynamic page",
        "Dynamic Routing production mode should respond with bad request with invalid encoding",
        "Dynamic Routing production mode should scroll to a hash on client-side navigation",
        "Dynamic Routing production mode should scroll to a hash on mount",
        "Dynamic Routing production mode should serve file from public folder encoded",
        "Dynamic Routing production mode should serve file from static folder encoded",
        "Dynamic Routing production mode should serve file with %20 from public folder",
        "Dynamic Routing production mode should serve file with %20 from static folder",
        "Dynamic Routing production mode should serve file with plus from public folder",
        "Dynamic Routing production mode should serve file with plus from static folder",
        "Dynamic Routing production mode should serve file with space from public folder",
        "Dynamic Routing production mode should serve file with space from static folder",
        "Dynamic Routing production mode should support long URLs for dynamic routes",
        "Dynamic Routing production mode should update dynamic values on mount",
        "Dynamic Routing production mode should update with a hash in the URL",
        "Dynamic Routing production mode should output a pages-manifest correctly"
      ],
      "failed": [],
      "pending": [
        "Dynamic Routing development mode [catch all] should not decode slashes (end)",
        "Dynamic Routing development mode [catch all] should not decode slashes (middle)",
        "Dynamic Routing development mode [catch all] should not decode slashes (start)",
        "Dynamic Routing development mode [catch all] should not match root on SSR",
        "Dynamic Routing development mode [catch all] should pass param in getInitialProps during SSR",
        "Dynamic Routing development mode [catch all] should pass params in getInitialProps during SSR",
        "Dynamic Routing development mode [catch all] should strip trailing slash",
        "Dynamic Routing development mode [catch-all] should pass params in getInitialProps during client navigation (encoded)",
        "Dynamic Routing development mode [catch-all] should pass params in getInitialProps during client navigation (multi)",
        "Dynamic Routing development mode [catch-all] should pass params in getInitialProps during client navigation (single)",
        "Dynamic Routing development mode [catch-all] shouldn't fail on colon followed by double digits in the path",
        "Dynamic Routing development mode [nested ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing development mode [nested ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing development mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
        "Dynamic Routing development mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
        "Dynamic Routing development mode [predefined ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing development mode [predefined ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing development mode [predefined ssg: prerendered catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing development mode [predefined ssg: prerendered catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing development mode [ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing development mode [ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi interpolated)",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi) no as",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single interpolated)",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
        "Dynamic Routing development mode should allow calling Router.push on mount successfully",
        "Dynamic Routing development mode should handle only hash on dynamic route",
        "Dynamic Routing development mode should handle only query on dynamic route",
        "Dynamic Routing development mode should navigate optional dynamic page",
        "Dynamic Routing development mode should navigate optional dynamic page with value",
        "Dynamic Routing development mode should navigate to a dynamic page successfully",
        "Dynamic Routing development mode should navigate to a dynamic page successfully interpolated",
        "Dynamic Routing development mode should navigate to a dynamic page successfully interpolated with additional query values",
        "Dynamic Routing development mode should navigate to a dynamic page successfully no as",
        "Dynamic Routing development mode should navigate to a dynamic page with href with differing query and as correctly",
        "Dynamic Routing development mode should navigate to a nested dynamic page successfully",
        "Dynamic Routing development mode should navigate to a nested dynamic page successfully interpolated",
        "Dynamic Routing development mode should navigate to a nested dynamic page successfully no as",
        "Dynamic Routing development mode should navigate with hash to dynamic route with link",
        "Dynamic Routing development mode should navigate with hash to dynamic route with router",
        "Dynamic Routing development mode should not error when requesting dynamic page with /api",
        "Dynamic Routing development mode should not have any console warnings on initial load",
        "Dynamic Routing development mode should not have any console warnings when navigating to dynamic route",
        "Dynamic Routing development mode should not have any query values when not defined",
        "Dynamic Routing development mode should not have error after pinging WebSocket",
        "Dynamic Routing development mode should not have placeholder query values for SSS",
        "Dynamic Routing development mode should not preload buildManifest for non-auto export dynamic pages",
        "Dynamic Routing development mode should pass params in getInitialProps during SSR",
        "Dynamic Routing development mode should pass params in getInitialProps during client navigation",
        "Dynamic Routing development mode should prioritize a non-dynamic page",
        "Dynamic Routing development mode should prioritize public files over dynamic route",
        "Dynamic Routing development mode should render another normal route",
        "Dynamic Routing development mode should render dynamic page",
        "Dynamic Routing development mode should render dynamic route with query",
        "Dynamic Routing development mode should render nested dynamic page",
        "Dynamic Routing development mode should render nested optional dynamic page",
        "Dynamic Routing development mode should render normal route",
        "Dynamic Routing development mode should render optional dynamic page",
        "Dynamic Routing development mode should resolve dynamic route href for page added later",
        "Dynamic Routing development mode should respond with bad request with invalid encoding",
        "Dynamic Routing development mode should scroll to a hash on client-side navigation",
        "Dynamic Routing development mode should scroll to a hash on mount",
        "Dynamic Routing development mode should serve file from public folder encoded",
        "Dynamic Routing development mode should serve file from static folder encoded",
        "Dynamic Routing development mode should serve file with %20 from public folder",
        "Dynamic Routing development mode should serve file with %20 from static folder",
        "Dynamic Routing development mode should serve file with plus from public folder",
        "Dynamic Routing development mode should serve file with plus from static folder",
        "Dynamic Routing development mode should serve file with space from public folder",
        "Dynamic Routing development mode should serve file with space from static folder",
        "Dynamic Routing development mode should show error when interpolating fails for href",
        "Dynamic Routing development mode should support long URLs for dynamic routes",
        "Dynamic Routing development mode should update dynamic values on mount",
        "Dynamic Routing development mode should update with a hash in the URL",
        "Dynamic Routing development mode should work with HMR correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/dynamic-routing/test/middleware.test.js": {
      "passed": [
        "Dynamic Routing production mode [catch all] should not decode slashes (end)",
        "Dynamic Routing production mode [catch all] should not decode slashes (middle)",
        "Dynamic Routing production mode [catch all] should not decode slashes (start)",
        "Dynamic Routing production mode [catch all] should not match root on SSR",
        "Dynamic Routing production mode [catch all] should pass param in getInitialProps during SSR",
        "Dynamic Routing production mode [catch all] should pass params in getInitialProps during SSR",
        "Dynamic Routing production mode [catch all] should strip trailing slash",
        "Dynamic Routing production mode [catch-all] should pass params in getInitialProps during client navigation (encoded)",
        "Dynamic Routing production mode [catch-all] should pass params in getInitialProps during client navigation (multi)",
        "Dynamic Routing production mode [catch-all] should pass params in getInitialProps during client navigation (single)",
        "Dynamic Routing production mode [catch-all] shouldn't fail on colon followed by double digits in the path",
        "Dynamic Routing production mode [nested ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing production mode [nested ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing production mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
        "Dynamic Routing production mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
        "Dynamic Routing production mode [predefined ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing production mode [predefined ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing production mode [predefined ssg: prerendered catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing production mode [predefined ssg: prerendered catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing production mode [ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing production mode [ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi interpolated)",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi) no as",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single interpolated)",
        "Dynamic Routing production mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
        "Dynamic Routing production mode should allow calling Router.push on mount successfully",
        "Dynamic Routing production mode should handle only hash on dynamic route",
        "Dynamic Routing production mode should handle only query on dynamic route",
        "Dynamic Routing production mode should have correct cache entries on prefetch",
        "Dynamic Routing production mode should navigate optional dynamic page",
        "Dynamic Routing production mode should navigate optional dynamic page with value",
        "Dynamic Routing production mode should navigate to a dynamic page successfully",
        "Dynamic Routing production mode should navigate to a dynamic page successfully interpolated",
        "Dynamic Routing production mode should navigate to a dynamic page successfully interpolated with additional query values",
        "Dynamic Routing production mode should navigate to a dynamic page successfully no as",
        "Dynamic Routing production mode should navigate to a dynamic page with href with differing query and as correctly",
        "Dynamic Routing production mode should navigate to a nested dynamic page successfully",
        "Dynamic Routing production mode should navigate to a nested dynamic page successfully interpolated",
        "Dynamic Routing production mode should navigate to a nested dynamic page successfully no as",
        "Dynamic Routing production mode should navigate with hash to dynamic route with link",
        "Dynamic Routing production mode should navigate with hash to dynamic route with router",
        "Dynamic Routing production mode should not error when requesting dynamic page with /api",
        "Dynamic Routing production mode should not have any query values when not defined",
        "Dynamic Routing production mode should not have placeholder query values for SSS",
        "Dynamic Routing production mode should not preload buildManifest for non-auto export dynamic pages",
        "Dynamic Routing production mode should output a routes-manifest correctly",
        "Dynamic Routing production mode should pass params in getInitialProps during SSR",
        "Dynamic Routing production mode should pass params in getInitialProps during client navigation",
        "Dynamic Routing production mode should prioritize a non-dynamic page",
        "Dynamic Routing production mode should prioritize public files over dynamic route",
        "Dynamic Routing production mode should render another normal route",
        "Dynamic Routing production mode should render dynamic page",
        "Dynamic Routing production mode should render dynamic route with query",
        "Dynamic Routing production mode should render nested dynamic page",
        "Dynamic Routing production mode should render nested optional dynamic page",
        "Dynamic Routing production mode should render normal route",
        "Dynamic Routing production mode should render optional dynamic page",
        "Dynamic Routing production mode should respond with bad request with invalid encoding",
        "Dynamic Routing production mode should scroll to a hash on client-side navigation",
        "Dynamic Routing production mode should scroll to a hash on mount",
        "Dynamic Routing production mode should serve file from public folder encoded",
        "Dynamic Routing production mode should serve file from static folder encoded",
        "Dynamic Routing production mode should serve file with %20 from public folder",
        "Dynamic Routing production mode should serve file with %20 from static folder",
        "Dynamic Routing production mode should serve file with plus from public folder",
        "Dynamic Routing production mode should serve file with plus from static folder",
        "Dynamic Routing production mode should serve file with space from public folder",
        "Dynamic Routing production mode should serve file with space from static folder",
        "Dynamic Routing production mode should support long URLs for dynamic routes",
        "Dynamic Routing production mode should update dynamic values on mount",
        "Dynamic Routing production mode should update with a hash in the URL",
        "Dynamic Routing production mode should output a pages-manifest correctly"
      ],
      "failed": [],
      "pending": [
        "Dynamic Routing development mode [catch all] should not decode slashes (end)",
        "Dynamic Routing development mode [catch all] should not decode slashes (middle)",
        "Dynamic Routing development mode [catch all] should not decode slashes (start)",
        "Dynamic Routing development mode [catch all] should not match root on SSR",
        "Dynamic Routing development mode [catch all] should pass param in getInitialProps during SSR",
        "Dynamic Routing development mode [catch all] should pass params in getInitialProps during SSR",
        "Dynamic Routing development mode [catch all] should strip trailing slash",
        "Dynamic Routing development mode [catch-all] should pass params in getInitialProps during client navigation (encoded)",
        "Dynamic Routing development mode [catch-all] should pass params in getInitialProps during client navigation (multi)",
        "Dynamic Routing development mode [catch-all] should pass params in getInitialProps during client navigation (single)",
        "Dynamic Routing development mode [catch-all] shouldn't fail on colon followed by double digits in the path",
        "Dynamic Routing development mode [nested ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing development mode [nested ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing development mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
        "Dynamic Routing development mode [nested ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
        "Dynamic Routing development mode [predefined ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing development mode [predefined ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing development mode [predefined ssg: prerendered catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing development mode [predefined ssg: prerendered catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing development mode [ssg: catch all] should pass param in getStaticProps during SSR",
        "Dynamic Routing development mode [ssg: catch all] should pass params in getStaticProps during SSR",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi interpolated)",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi)",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (multi) no as",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single interpolated)",
        "Dynamic Routing development mode [ssg: catch-all] should pass params in getStaticProps during client navigation (single)",
        "Dynamic Routing development mode should allow calling Router.push on mount successfully",
        "Dynamic Routing development mode should handle only hash on dynamic route",
        "Dynamic Routing development mode should handle only query on dynamic route",
        "Dynamic Routing development mode should navigate optional dynamic page",
        "Dynamic Routing development mode should navigate optional dynamic page with value",
        "Dynamic Routing development mode should navigate to a dynamic page successfully",
        "Dynamic Routing development mode should navigate to a dynamic page successfully interpolated",
        "Dynamic Routing development mode should navigate to a dynamic page successfully interpolated with additional query values",
        "Dynamic Routing development mode should navigate to a dynamic page successfully no as",
        "Dynamic Routing development mode should navigate to a dynamic page with href with differing query and as correctly",
        "Dynamic Routing development mode should navigate to a nested dynamic page successfully",
        "Dynamic Routing development mode should navigate to a nested dynamic page successfully interpolated",
        "Dynamic Routing development mode should navigate to a nested dynamic page successfully no as",
        "Dynamic Routing development mode should navigate with hash to dynamic route with link",
        "Dynamic Routing development mode should navigate with hash to dynamic route with router",
        "Dynamic Routing development mode should not error when requesting dynamic page with /api",
        "Dynamic Routing development mode should not have any console warnings on initial load",
        "Dynamic Routing development mode should not have any console warnings when navigating to dynamic route",
        "Dynamic Routing development mode should not have any query values when not defined",
        "Dynamic Routing development mode should not have error after pinging WebSocket",
        "Dynamic Routing development mode should not have placeholder query values for SSS",
        "Dynamic Routing development mode should not preload buildManifest for non-auto export dynamic pages",
        "Dynamic Routing development mode should pass params in getInitialProps during SSR",
        "Dynamic Routing development mode should pass params in getInitialProps during client navigation",
        "Dynamic Routing development mode should prioritize a non-dynamic page",
        "Dynamic Routing development mode should prioritize public files over dynamic route",
        "Dynamic Routing development mode should render another normal route",
        "Dynamic Routing development mode should render dynamic page",
        "Dynamic Routing development mode should render dynamic route with query",
        "Dynamic Routing development mode should render nested dynamic page",
        "Dynamic Routing development mode should render nested optional dynamic page",
        "Dynamic Routing development mode should render normal route",
        "Dynamic Routing development mode should render optional dynamic page",
        "Dynamic Routing development mode should resolve dynamic route href for page added later",
        "Dynamic Routing development mode should respond with bad request with invalid encoding",
        "Dynamic Routing development mode should scroll to a hash on client-side navigation",
        "Dynamic Routing development mode should scroll to a hash on mount",
        "Dynamic Routing development mode should serve file from public folder encoded",
        "Dynamic Routing development mode should serve file from static folder encoded",
        "Dynamic Routing development mode should serve file with %20 from public folder",
        "Dynamic Routing development mode should serve file with %20 from static folder",
        "Dynamic Routing development mode should serve file with plus from public folder",
        "Dynamic Routing development mode should serve file with plus from static folder",
        "Dynamic Routing development mode should serve file with space from public folder",
        "Dynamic Routing development mode should serve file with space from static folder",
        "Dynamic Routing development mode should support long URLs for dynamic routes",
        "Dynamic Routing development mode should update dynamic values on mount",
        "Dynamic Routing development mode should update with a hash in the URL",
        "Dynamic Routing development mode should work with HMR correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/edge-runtime-configurable-guards/test/index.test.js": {
      "passed": [
        "Edge runtime configurable guards Edge API using lib with allowed, used dynamic code still warns in dev at runtime",
        "Edge runtime configurable guards Edge API using lib with unallowed, used dynamic code warns in dev at runtime",
        "Edge runtime configurable guards Edge API with allowed, used dynamic code still warns in dev at runtime",
        "Edge runtime configurable guards Edge API with use of Function as a type does not warn in dev at runtime",
        "Edge runtime configurable guards Middleware using lib with allowed, used dynamic code still warns in dev at runtime",
        "Edge runtime configurable guards Middleware using lib with unallowed, used dynamic code warns in dev at runtime",
        "Edge runtime configurable guards Middleware with allowed, used dynamic code still warns in dev at runtime",
        "Edge runtime configurable guards Middleware with use of Function as a type does not warn in dev at runtime",
        "Edge runtime configurable guards Multiple functions with different configurations warns in dev for allowed code",
        "Edge runtime configurable guards Multiple functions with different configurations warns in dev for unallowed code",
        "Edge runtime configurable guards Multiple functions with different configurations production mode fails to build because of unallowed code",
        "Edge runtime configurable guards Edge API using lib with unallowed, used dynamic code production mode fails to build because of dynamic code evaluation",
        "Edge runtime configurable guards Middleware using lib with unallowed, used dynamic code production mode fails to build because of dynamic code evaluation"
      ],
      "failed": [],
      "pending": [
        "Edge runtime configurable guards Edge API with use of Function as a type production mode build and does not warn at runtime",
        "Edge runtime configurable guards Middleware with use of Function as a type production mode build and does not warn at runtime",
        "Edge runtime configurable guards Edge API with allowed, unused dynamic code production mode build and does not warn at runtime",
        "Edge runtime configurable guards Middleware with allowed, unused dynamic code production mode build and does not warn at runtime",
        "Edge runtime configurable guards Edge API using lib with allowed, unused dynamic code production mode build and does not warn at runtime",
        "Edge runtime configurable guards Middleware using lib with allowed, unused dynamic code production mode build and does not warn at runtime"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/edge-runtime-dynamic-code/test/index.test.js": {
      "passed": [
        "Page using eval in development mode does issue dynamic code evaluation warnings"
      ],
      "failed": [
        "Edge route usage of dynamic code evaluation production mode should have middleware warning during build",
        "Middleware usage of dynamic code evaluation production mode should have middleware warning during build"
      ],
      "pending": [
        "Edge route usage of dynamic code evaluation development mode does not show a warning when running WebAssembly.instantiate with a module parameter",
        "Edge route usage of dynamic code evaluation development mode does not show warning when no code uses eval",
        "Edge route usage of dynamic code evaluation development mode shows a warning when running WebAssembly.compile",
        "Edge route usage of dynamic code evaluation development mode shows a warning when running WebAssembly.instantiate with a buffer parameter",
        "Edge route usage of dynamic code evaluation development mode shows a warning when running code with eval",
        "Middleware usage of dynamic code evaluation development mode does not show a warning when running WebAssembly.instantiate with a module parameter",
        "Middleware usage of dynamic code evaluation development mode does not show warning when no code uses eval",
        "Middleware usage of dynamic code evaluation development mode shows a warning when running WebAssembly.compile",
        "Middleware usage of dynamic code evaluation development mode shows a warning when running WebAssembly.instantiate with a buffer parameter",
        "Middleware usage of dynamic code evaluation development mode shows a warning when running code with eval"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/edge-runtime-module-errors/test/index.test.js": {
      "passed": [
        "Edge runtime code with imports Edge API importing vanilla 3rd party module does not throw in dev at runtime",
        "Edge runtime code with imports Edge API importing vanilla 3rd party module production mode does not throw in production at runtime",
        "Edge runtime code with imports Edge API statically importing 3rd party module production mode does not build and reports",
        "Edge runtime code with imports Edge API statically importing 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Edge API using Buffer polyfill does not throw in dev at runtime",
        "Edge runtime code with imports Edge API using Buffer polyfill production mode does not throw in production at runtime",
        "Edge runtime code with imports Middleware importing vanilla 3rd party module does not throw in dev at runtime",
        "Edge runtime code with imports Middleware importing vanilla 3rd party module production mode does not throw in production at runtime",
        "Edge runtime code with imports Middleware statically importing 3rd party module production mode does not build and reports",
        "Edge runtime code with imports Middleware statically importing 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Middleware using Buffer polyfill does not throw in dev at runtime",
        "Edge runtime code with imports Middleware using Buffer polyfill production mode does not throw in production at runtime",
        "Edge runtime code with imports Edge API dynamically importing node.js module in a lib production mode throws unsupported module error in production at runtime and prints error on logs",
        "Edge runtime code with imports Edge API dynamically importing node.js module production mode throws unsupported module error in production at runtime and prints error on logs",
        "Edge runtime code with imports Middleware dynamically importing node.js module in a lib production mode throws unsupported module error in production at runtime and prints error on logs",
        "Edge runtime code with imports Middleware dynamically importing node.js module production mode throws unsupported module error in production at runtime and prints error on logs"
      ],
      "failed": [],
      "pending": [
        "Edge runtime code with imports Edge API dynamically importing node.js module development mode throws unsupported module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Edge API dynamically importing node.js module in a lib development mode throws unsupported module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Middleware dynamically importing node.js module development mode throws unsupported module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Middleware dynamically importing node.js module in a lib development mode throws unsupported module error in dev at runtime and highlights the faulty line"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/edge-runtime-module-errors/test/module-imports.test.js": {
      "passed": [
        "Edge runtime code with imports Edge API dynamically importing 3rd party module production mode does not build and reports module not found error",
        "Edge runtime code with imports Edge API dynamically importing 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Edge API importing unused 3rd party module production mode does not build and reports module not found error",
        "Edge runtime code with imports Edge API importing unused 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Edge API importing unused node.js module does not throw in dev at runtime",
        "Edge runtime code with imports Edge API statically importing node.js module throws unsupported module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Middleware dynamically importing 3rd party module production mode does not build and reports module not found error",
        "Edge runtime code with imports Middleware dynamically importing 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Middleware importing unused 3rd party module production mode does not build and reports module not found error",
        "Edge runtime code with imports Middleware importing unused 3rd party module throws not-found module error in dev at runtime and highlights the faulty line",
        "Edge runtime code with imports Middleware importing unused node.js module does not throw in dev at runtime",
        "Edge runtime code with imports Middleware statically importing node.js module throws unsupported module error in dev at runtime and highlights the faulty line"
      ],
      "failed": [
        "Edge runtime code with imports Edge API importing unused node.js module production mode does not throw in production at runtime",
        "Edge runtime code with imports Middleware importing unused node.js module production mode does not throw in production at runtime",
        "Edge runtime code with imports Edge API statically importing node.js module production mode throws unsupported module error in production at runtime and prints error on logs",
        "Edge runtime code with imports Middleware statically importing node.js module production mode throws unsupported module error in production at runtime and prints error on logs"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/edge-runtime-response-error/test/index.test.js": {
      "passed": [
        "Edge runtime code with imports test error if response is not Response type Edge API dev test Response",
        "Edge runtime code with imports test error if response is not Response type Middleware dev test Response",
        "Edge runtime code with imports test error if response is not Response type production mode Edge API build test Response",
        "Edge runtime code with imports test error if response is not Response type production mode Middleware build test Response"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/edge-runtime-streaming-error/test/index.test.ts": {
      "passed": ["production mode logs the error correctly"],
      "failed": [],
      "pending": ["development mode logs the error correctly"],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/edge-runtime-with-node.js-apis/test/index.test.ts": {
      "passed": [
        "Edge route using Node.js API production mode does not warn on using process.arch",
        "Edge route using Node.js API production mode does not warn on using process.version",
        "Edge route using Node.js API production mode warns for BroadcastChannel during build",
        "Edge route using Node.js API production mode warns for ByteLengthQueuingStrategy during build",
        "Edge route using Node.js API production mode warns for CompressionStream during build",
        "Edge route using Node.js API production mode warns for CountQueuingStrategy during build",
        "Edge route using Node.js API production mode warns for DecompressionStream during build",
        "Edge route using Node.js API production mode warns for DomException during build",
        "Edge route using Node.js API production mode warns for MessageChannel during build",
        "Edge route using Node.js API production mode warns for MessageEvent during build",
        "Edge route using Node.js API production mode warns for MessagePort during build",
        "Edge route using Node.js API production mode warns for ReadableByteStreamController during build",
        "Edge route using Node.js API production mode warns for ReadableStreamBYOBRequest during build",
        "Edge route using Node.js API production mode warns for ReadableStreamDefaultController during build",
        "Edge route using Node.js API production mode warns for TransformStreamDefaultController during build",
        "Edge route using Node.js API production mode warns for WritableStreamDefaultController during build",
        "Edge route using Node.js API production mode warns for clearImmediate during build",
        "Edge route using Node.js API production mode warns for process.cpuUsage during build",
        "Edge route using Node.js API production mode warns for process.cwd during build",
        "Edge route using Node.js API production mode warns for process.getuid during build",
        "Edge route using Node.js API production mode warns for setImmediate during build",
        "Middleware using Node.js API production mode does not warn on using process.arch",
        "Middleware using Node.js API production mode does not warn on using process.version",
        "Middleware using Node.js API production mode warns for BroadcastChannel during build",
        "Middleware using Node.js API production mode warns for ByteLengthQueuingStrategy during build",
        "Middleware using Node.js API production mode warns for CompressionStream during build",
        "Middleware using Node.js API production mode warns for CountQueuingStrategy during build",
        "Middleware using Node.js API production mode warns for DecompressionStream during build",
        "Middleware using Node.js API production mode warns for DomException during build",
        "Middleware using Node.js API production mode warns for MessageChannel during build",
        "Middleware using Node.js API production mode warns for MessageEvent during build",
        "Middleware using Node.js API production mode warns for MessagePort during build",
        "Middleware using Node.js API production mode warns for ReadableByteStreamController during build",
        "Middleware using Node.js API production mode warns for ReadableStreamBYOBRequest during build",
        "Middleware using Node.js API production mode warns for ReadableStreamDefaultController during build",
        "Middleware using Node.js API production mode warns for TransformStreamDefaultController during build",
        "Middleware using Node.js API production mode warns for WritableStreamDefaultController during build",
        "Middleware using Node.js API production mode warns for clearImmediate during build",
        "Middleware using Node.js API production mode warns for process.cpuUsage during build",
        "Middleware using Node.js API production mode warns for process.cwd during build",
        "Middleware using Node.js API production mode warns for process.getuid during build",
        "Middleware using Node.js API production mode warns for setImmediate during build"
      ],
      "failed": [],
      "pending": [
        "Edge route using Node.js API development mode does not throw on using process.arch",
        "Edge route using Node.js API development mode does not throw on using process.version",
        "Edge route using Node.js API development mode throws error when using BroadcastChannel",
        "Edge route using Node.js API development mode throws error when using ByteLengthQueuingStrategy",
        "Edge route using Node.js API development mode throws error when using CompressionStream",
        "Edge route using Node.js API development mode throws error when using CountQueuingStrategy",
        "Edge route using Node.js API development mode throws error when using DecompressionStream",
        "Edge route using Node.js API development mode throws error when using DomException",
        "Edge route using Node.js API development mode throws error when using MessageChannel",
        "Edge route using Node.js API development mode throws error when using MessageEvent",
        "Edge route using Node.js API development mode throws error when using MessagePort",
        "Edge route using Node.js API development mode throws error when using ReadableByteStreamController",
        "Edge route using Node.js API development mode throws error when using ReadableStreamBYOBRequest",
        "Edge route using Node.js API development mode throws error when using ReadableStreamDefaultController",
        "Edge route using Node.js API development mode throws error when using TransformStreamDefaultController",
        "Edge route using Node.js API development mode throws error when using WritableStreamDefaultController",
        "Edge route using Node.js API development mode throws error when using clearImmediate",
        "Edge route using Node.js API development mode throws error when using process.cpuUsage",
        "Edge route using Node.js API development mode throws error when using process.cwd",
        "Edge route using Node.js API development mode throws error when using process.getuid",
        "Edge route using Node.js API development mode throws error when using setImmediate",
        "Middleware using Node.js API development mode does not throw on using process.arch",
        "Middleware using Node.js API development mode does not throw on using process.version",
        "Middleware using Node.js API development mode throws error when using BroadcastChannel",
        "Middleware using Node.js API development mode throws error when using ByteLengthQueuingStrategy",
        "Middleware using Node.js API development mode throws error when using CompressionStream",
        "Middleware using Node.js API development mode throws error when using CountQueuingStrategy",
        "Middleware using Node.js API development mode throws error when using DecompressionStream",
        "Middleware using Node.js API development mode throws error when using DomException",
        "Middleware using Node.js API development mode throws error when using MessageChannel",
        "Middleware using Node.js API development mode throws error when using MessageEvent",
        "Middleware using Node.js API development mode throws error when using MessagePort",
        "Middleware using Node.js API development mode throws error when using ReadableByteStreamController",
        "Middleware using Node.js API development mode throws error when using ReadableStreamBYOBRequest",
        "Middleware using Node.js API development mode throws error when using ReadableStreamDefaultController",
        "Middleware using Node.js API development mode throws error when using TransformStreamDefaultController",
        "Middleware using Node.js API development mode throws error when using WritableStreamDefaultController",
        "Middleware using Node.js API development mode throws error when using clearImmediate",
        "Middleware using Node.js API development mode throws error when using process.cpuUsage",
        "Middleware using Node.js API development mode throws error when using process.cwd",
        "Middleware using Node.js API development mode throws error when using process.getuid",
        "Middleware using Node.js API development mode throws error when using setImmediate"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/empty-object-getInitialProps/test/index.test.js": {
      "passed": [
        "Empty Project It should not show empty object warning for page without `getInitialProps`",
        "Empty Project It should show empty object warning on SSR",
        "Empty Project should show empty object warning during client transition"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/empty-project/test/index.test.js": {
      "passed": ["Empty Project Should not time out and return 404"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/env-config/test/index.test.js": {
      "passed": [
        "Env Config production mode should have process environment override .env",
        "Env Config production mode should inline global values during build",
        "Env Config production mode should load env from .env",
        "Env Config production mode should provide env correctly for API routes",
        "Env Config production mode should provide env correctly for SSR",
        "Env Config production mode should provide env for SSG",
        "Env Config production mode should provide global env to next.config.js",
        "Env Config test environment should have process environment override .env",
        "Env Config test environment should inline global values during build",
        "Env Config test environment should load env from .env",
        "Env Config test environment should provide env correctly for API routes",
        "Env Config test environment should provide env correctly for SSR",
        "Env Config test environment should provide env for SSG",
        "Env Config test environment should provide global env to next.config.js"
      ],
      "failed": [],
      "pending": [
        "Env Config development mode should have process environment override .env",
        "Env Config development mode should inline global values during build",
        "Env Config development mode should load env from .env",
        "Env Config development mode should provide env correctly for API routes",
        "Env Config development mode should provide env correctly for SSR",
        "Env Config development mode should provide env for SSG",
        "Env Config development mode should provide global env to next.config.js",
        "Env Config development mode with hot reload should have process environment override .env",
        "Env Config development mode with hot reload should have updated runtime values after change",
        "Env Config development mode with hot reload should inline global values during build",
        "Env Config development mode with hot reload should load env from .env",
        "Env Config development mode with hot reload should provide env correctly for API routes",
        "Env Config development mode with hot reload should provide env correctly for SSR",
        "Env Config development mode with hot reload should provide env for SSG",
        "Env Config development mode with hot reload should provide global env to next.config.js",
        "Env Config development mode with hot reload should trigger HMR correctly when NEXT_PUBLIC_ env is changed"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/error-in-error/test/index.test.js": {
      "passed": [
        "Handles an Error in _error production mode Handles error during SSR",
        "Handles an Error in _error production mode Handles error during client transition"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/error-load-fail/test/index.test.js": {
      "passed": [],
      "failed": [
        "Failing to load _error production mode handles failing to load _error correctly"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/error-plugin-stack-overflow/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Reports stack trace when webpack plugin stack overflows shows details in next build"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/errors-on-output-to-public/test/index.test.js": {
      "passed": [
        "Errors on output to public production mode Throws error when `distDir` is set to public",
        "Errors on output to public production mode Throws error when export out dir is public"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/errors-on-output-to-static/test/index.test.js": {
      "passed": [
        "Errors on output to static production mode Throws error when export out dir is static"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/eslint/test/lint-cache.test.js": {
      "passed": [
        "cache with content strategy is different from the one with default strategy",
        "eslint caching is disabled with the --no-cache flag",
        "eslint caching is enabled by default",
        "the --cache-location flag allows the user to define a separate cache location",
        "the default eslint cache lives in the user defined build directory",
        "the default eslint caching strategy is metadata"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/eslint/test/next-build.test.js": {
      "passed": [
        "Next Build production mode base directories are linted by default during builds",
        "Next Build production mode custom directories",
        "Next Build production mode empty directories do not fail the build",
        "Next Build production mode eslint cache lives in the user defined build directory",
        "Next Build production mode eslint caching is enabled",
        "Next Build production mode eslint ignored directories do not fail the build",
        "Next Build production mode ignore during builds",
        "Next Build production mode invalid older eslint version",
        "Next Build production mode missing Next.js plugin",
        "Next Build production mode shows warnings and errors"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/eslint/test/next-lint.test.js": {
      "passed": [
        "Next Lint First Time Setup  creates .eslintrc.json file with a default app router configuration",
        "Next Lint First Time Setup  creates .eslintrc.json file with a default configuration",
        "Next Lint First Time Setup  installs eslint and eslint-config-next as devDependencies if missing with npm",
        "Next Lint First Time Setup  installs eslint and eslint-config-next as devDependencies if missing with pnpm",
        "Next Lint First Time Setup  installs eslint and eslint-config-next as devDependencies if missing with yarn",
        "Next Lint First Time Setup  show a prompt to set up ESLint if no configuration detected",
        "Next Lint First Time Setup  shows a successful message when completed",
        "Next Lint base directories are linted by default",
        "Next Lint custom directories",
        "Next Lint don't create .eslintrc file if package.json has eslintConfig field",
        "Next Lint file flag can selectively lint only a single file",
        "Next Lint file flag can selectively lints multiple files",
        "Next Lint format flag \"compact\" creates a file respecting the chosen format",
        "Next Lint format flag \"json\" creates a file respecting the chosen format",
        "Next Lint format flag supports additional user-defined formats",
        "Next Lint format flag supports async formatters",
        "Next Lint lint files with cjs and mjs file extension",
        "Next Lint max warnings flag does not error when warnings do not exceed threshold",
        "Next Lint max warnings flag errors when warnings exceed threshold",
        "Next Lint quiet flag suppresses warnings and only reports errors",
        "Next Lint should add relative path for dist types in tsconfig.json when app dir exist",
        "Next Lint should generate next-env.d.ts before lint command",
        "Next Lint should not generate next-env.d.ts without typescript",
        "Next Lint show error message when the file path is a directory",
        "Next Lint shows warnings and errors",
        "Next Lint shows warnings and errors when extending plugin core-web-vitals config",
        "Next Lint shows warnings and errors when extending plugin recommended config",
        "Next Lint shows warnings and errors with next/core-web-vitals config",
        "Next Lint success message when no warnings or errors",
        "Next Lint verify options name and type with auto-generated help output"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-404/test/index.test.js": {
      "passed": [
        "Export with a page named 404.js production mode should export a custom 404.html instead of default 404.html",
        "Static 404 Export production mode export 404.html and 404/index.html when trailingSlash: true",
        "Static 404 Export production mode only export 404.html when trailingSlash: false"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-default-map/test/index.test.js": {
      "passed": [
        "Export with default map production mode should export an amp only page to clean path",
        "Export with default map production mode should export hybrid amp page correctly",
        "Export with default map production mode should export hybrid index amp page correctly",
        "Export with default map production mode should export nested hybrid amp page correctly",
        "Export with default map production mode should export nested hybrid amp page correctly with folder",
        "Export with default map production mode should export with folder that has dot in name"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-dynamic-pages/test/index.test.js": {
      "passed": [
        "Export Dynamic Pages production mode should hydrate with correct asPath",
        "Export Dynamic Pages production mode should of exported with correct asPath"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-fallback-true-error/test/index.test.js": {
      "passed": [
        "Export error for fallback: true production mode should build successfully"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-getInitialProps-warn/test/index.test.js": {
      "passed": [
        "Export with getInitialProps production mode should show warning with next export"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-image-default/test/index.test.js": {
      "passed": [
        "Export with default loader next/image component production mode should error during next build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-image-loader-legacy/test/index.test.js": {
      "passed": [
        "Export with cloudinary loader next/legacy/image component production mode should build successfully",
        "Export with cloudinary loader next/legacy/image component production mode should contain img element in html output",
        "Export with custom loader config but no loader prop on next/legacy/image production mode should fail build",
        "Export with custom loader next/legacy/image component production mode should build successfully",
        "Export with custom loader next/legacy/image component production mode should contain img element with same src in html output",
        "Export with unoptimized next/legacy/image component production mode should build successfully",
        "Export with unoptimized next/legacy/image component production mode should contain img element with same src in html output"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-image-loader/test/index.test.js": {
      "passed": [
        "Export with cloudinary loader next/image component production mode should build successfully",
        "Export with cloudinary loader next/image component production mode should contain img element in html output",
        "Export with custom loader config but no loader prop on next/image production mode should fail build",
        "Export with custom loader next/image component production mode should build successfully",
        "Export with custom loader next/image component production mode should contain img element with same src in html output",
        "Export with loaderFile config next/image component production mode should build successfully",
        "Export with loaderFile config next/image component production mode should contain img element with same src in html output",
        "Export with unoptimized next/image component production mode should build successfully",
        "Export with unoptimized next/image component production mode should contain img element with same src in html output"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-index-not-found-gsp/test/index.test.ts": {
      "passed": [
        "Export index page with `notFound: true` in `getStaticProps` production mode should build successfully"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-intent/test/index.test.js": {
      "passed": [
        "Application Export Intent Output Bad Export production mode should build and export",
        "Application Export Intent Output Bad Export production mode should have the expected outputs for export",
        "Application Export Intent Output Custom Export production mode should build and export",
        "Application Export Intent Output Custom Export production mode should have the expected outputs for export",
        "Application Export Intent Output Custom Out production mode should build and export",
        "Application Export Intent Output Custom Out production mode should have the expected outputs for export",
        "Application Export Intent Output No Export production mode should build and clean up",
        "Application Export Intent Output No Export production mode should build and not export",
        "Application Export Intent Output No Export production mode should have the expected outputs for export",
        "Application Export Intent Output production mode Default Export should build and export",
        "Application Export Intent Output production mode Default Export should have the expected outputs for export"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/export-subfolders/test/index.test.js": {
      "passed": [
        "Export config#exportTrailingSlash set to false production mode should export pages as [filename].html instead of [filename]/index.html"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/externals-esm-loose/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Handle ESM externals with esmExternals: 'loose' production mode should render the ssg page",
        "Handle ESM externals with esmExternals: 'loose' production mode should render the ssr page",
        "Handle ESM externals with esmExternals: 'loose' production mode should render the static page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/externals-pages-bundle/test/externals.test.js": {
      "passed": [
        "default should use externals for unvendored node_modules reachable from the project"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/externals-pages-bundle/test/index.test.js": {
      "passed": [
        "bundle pages externals with config.bundlePagesRouterDependencies production mode should have no externals with the config set",
        "bundle pages externals with config.bundlePagesRouterDependencies production mode should respect the serverExternalPackages config"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/fallback-false-rewrite/test/index.test.js": {
      "passed": [
        "fallback: false rewrite production mode should behave properly when accessing the dynamic param directly",
        "fallback: false rewrite production mode should not rewrite for path from fallback: false SSR",
        "fallback: false rewrite production mode should not rewrite for path from fallback: false client",
        "fallback: false rewrite production mode should rewrite correctly for path above fallback: false SSR",
        "fallback: false rewrite production mode should rewrite correctly for path above fallback: false client",
        "fallback: false rewrite production mode should rewrite correctly for path at same level as fallback: false SSR",
        "fallback: false rewrite production mode should rewrite correctly for path at same level as fallback: false client"
      ],
      "failed": [],
      "pending": [
        "fallback: false rewrite development mode should behave properly when accessing the dynamic param directly",
        "fallback: false rewrite development mode should not rewrite for path from fallback: false SSR",
        "fallback: false rewrite development mode should not rewrite for path from fallback: false client",
        "fallback: false rewrite development mode should rewrite correctly for path above fallback: false SSR",
        "fallback: false rewrite development mode should rewrite correctly for path above fallback: false client",
        "fallback: false rewrite development mode should rewrite correctly for path at same level as fallback: false SSR",
        "fallback: false rewrite development mode should rewrite correctly for path at same level as fallback: false client"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/fallback-modules/test/index.test.js": {
      "passed": [
        "Fallback Modules production mode Crypto Application should not include crypto"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/fallback-route-params/test/index.test.js": {
      "passed": [
        "Fallback Dynamic Route Params production mode should have correct fallback query (hydration)",
        "Fallback Dynamic Route Params production mode should have correct fallback query (skeleton)"
      ],
      "failed": [],
      "pending": [
        "Fallback Dynamic Route Params development mode should have correct fallback query (hydration)",
        "Fallback Dynamic Route Params development mode should have correct fallback query (skeleton)"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/fetch-polyfill-ky-universal/test/index.test.js": {
      "passed": [
        "Fetch polyfill with ky-universal production mode includes polyfilled fetch when using getInitialProps",
        "Fetch polyfill with ky-universal production mode includes polyfilled fetch when using getServerSideProps",
        "Fetch polyfill with ky-universal production mode includes polyfilled fetch when using getStaticProps"
      ],
      "failed": [],
      "pending": [
        "Fetch polyfill with ky-universal development mode includes polyfilled fetch when using getInitialProps",
        "Fetch polyfill with ky-universal development mode includes polyfilled fetch when using getServerSideProps",
        "Fetch polyfill with ky-universal development mode includes polyfilled fetch when using getStaticProps"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/fetch-polyfill/test/index.test.js": {
      "passed": [
        "Fetch polyfill production mode includes polyfilled fetch when using API routes",
        "Fetch polyfill production mode includes polyfilled fetch when using getInitialProps",
        "Fetch polyfill production mode includes polyfilled fetch when using getServerSideProps",
        "Fetch polyfill production mode includes polyfilled fetch when using getStaticPaths",
        "Fetch polyfill production mode includes polyfilled fetch when using getStaticProps"
      ],
      "failed": [],
      "pending": [
        "Fetch polyfill development mode includes polyfilled fetch when using API routes",
        "Fetch polyfill development mode includes polyfilled fetch when using getInitialProps",
        "Fetch polyfill development mode includes polyfilled fetch when using getServerSideProps",
        "Fetch polyfill development mode includes polyfilled fetch when using getStaticPaths",
        "Fetch polyfill development mode includes polyfilled fetch when using getStaticProps"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/file-serving/test/index.test.js": {
      "passed": [
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving production mode should prevent traversing with /%%32%65%%32%65/test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e/%252e%252e/test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e/test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%252e%252e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e/%2e%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%2e%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%2e%c0%2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae/test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%c0%ae%c0%ae\\test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e/test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving production mode should prevent traversing with /%uff0e%uff0e\\test-file.txt",
        "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /..%%32%66..%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /..%%32%66test-file.txt",
        "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /..%%35%63..%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /..%%35%63test-file.txt",
        "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%252f..%252f..%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%252f..%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%252ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%255c..%255c..%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%255c..%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%255ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c0%25aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%25c1%259ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%2f..%2f..%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%2f..%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%5c..%5c..%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%5c..%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%2f..%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%5c..%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%af..%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c0%aftest-file.txt",
        "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c1%9c..%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%c1%9ctest-file.txt",
        "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2215..%u2215..%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2215..%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2215test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2216..%u2216..%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2216..%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /..%u2216test-file.txt",
        "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving production mode should prevent traversing with /..%uEFC8..%uEFC8test-file.txt",
        "File Serving production mode should prevent traversing with /..%uEFC8test-file.txt",
        "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving production mode should prevent traversing with /..%uF025..%uF025..%uF025test-file.txt",
        "File Serving production mode should prevent traversing with /..%uF025..%uF025test-file.txt",
        "File Serving production mode should prevent traversing with /..%uF025test-file.txt",
        "File Serving production mode should prevent traversing with /........................................................................../../../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /........................................................................../../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /........................................................................../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /........................................................................../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /........................................................................../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /........................................................................../../../test-file.txt",
        "File Serving production mode should prevent traversing with /........................................................................../../test-file.txt",
        "File Serving production mode should prevent traversing with /........................................................................../test-file.txt",
        "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..........................................................................\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..........................................................................\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..........................................................................\\test-file.txt",
        "File Serving production mode should prevent traversing with /..../..../..../..../..../..../..../..../test-file.txt",
        "File Serving production mode should prevent traversing with /..../..../..../..../..../..../..../test-file.txt",
        "File Serving production mode should prevent traversing with /..../..../..../..../..../..../test-file.txt",
        "File Serving production mode should prevent traversing with /..../..../..../..../..../test-file.txt",
        "File Serving production mode should prevent traversing with /..../..../..../..../test-file.txt",
        "File Serving production mode should prevent traversing with /..../..../..../test-file.txt",
        "File Serving production mode should prevent traversing with /..../..../test-file.txt",
        "File Serving production mode should prevent traversing with /..../test-file.txt",
        "File Serving production mode should prevent traversing with /....\\....\\....\\....\\....\\....\\....\\....\\test-file.txt",
        "File Serving production mode should prevent traversing with /....\\....\\....\\....\\....\\....\\....\\test-file.txt",
        "File Serving production mode should prevent traversing with /....\\....\\....\\....\\....\\....\\test-file.txt",
        "File Serving production mode should prevent traversing with /....\\....\\....\\....\\....\\test-file.txt",
        "File Serving production mode should prevent traversing with /....\\....\\....\\....\\test-file.txt",
        "File Serving production mode should prevent traversing with /....\\....\\....\\test-file.txt",
        "File Serving production mode should prevent traversing with /....\\....\\test-file.txt",
        "File Serving production mode should prevent traversing with /....\\test-file.txt",
        "File Serving production mode should prevent traversing with /.../.../.../.../.../.../.../.../test-file.txt",
        "File Serving production mode should prevent traversing with /.../.../.../.../.../.../.../test-file.txt",
        "File Serving production mode should prevent traversing with /.../.../.../.../.../.../test-file.txt",
        "File Serving production mode should prevent traversing with /.../.../.../.../.../test-file.txt",
        "File Serving production mode should prevent traversing with /.../.../.../.../test-file.txt",
        "File Serving production mode should prevent traversing with /.../.../.../test-file.txt",
        "File Serving production mode should prevent traversing with /.../.../test-file.txt",
        "File Serving production mode should prevent traversing with /.../test-file.txt",
        "File Serving production mode should prevent traversing with /...\\...\\...\\...\\...\\...\\...\\...\\test-file.txt",
        "File Serving production mode should prevent traversing with /...\\...\\...\\...\\...\\...\\...\\test-file.txt",
        "File Serving production mode should prevent traversing with /...\\...\\...\\...\\...\\...\\test-file.txt",
        "File Serving production mode should prevent traversing with /...\\...\\...\\...\\...\\test-file.txt",
        "File Serving production mode should prevent traversing with /...\\...\\...\\...\\test-file.txt",
        "File Serving production mode should prevent traversing with /...\\...\\...\\test-file.txt",
        "File Serving production mode should prevent traversing with /...\\...\\test-file.txt",
        "File Serving production mode should prevent traversing with /...\\test-file.txt",
        "File Serving production mode should prevent traversing with /../../../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /../../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /../../../test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..//../..//../..///test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..//../..//../..//test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..//../..//..///test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..//../..//../test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..//../..///test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..//../..//test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..//..///test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..//../test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..///test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../..//test-file.txt",
        "File Serving production mode should prevent traversing with /../..//..///test-file.txt",
        "File Serving production mode should prevent traversing with /../..//../test-file.txt",
        "File Serving production mode should prevent traversing with /../..///test-file.txt",
        "File Serving production mode should prevent traversing with /../..//test-file.txt",
        "File Serving production mode should prevent traversing with /../../test-file.txt",
        "File Serving production mode should prevent traversing with /..//..//..//..//..//..//..//..//test-file.txt",
        "File Serving production mode should prevent traversing with /..//..//..//..//..//..//..//test-file.txt",
        "File Serving production mode should prevent traversing with /..//..//..//..//..//..//test-file.txt",
        "File Serving production mode should prevent traversing with /..//..//..//..//..//test-file.txt",
        "File Serving production mode should prevent traversing with /..//..//..//..//test-file.txt",
        "File Serving production mode should prevent traversing with /..//..//..//test-file.txt",
        "File Serving production mode should prevent traversing with /..//..//test-file.txt",
        "File Serving production mode should prevent traversing with /..///..///..///..///..///..///..///..///test-file.txt",
        "File Serving production mode should prevent traversing with /..///..///..///..///..///..///..///test-file.txt",
        "File Serving production mode should prevent traversing with /..///..///..///..///..///..///test-file.txt",
        "File Serving production mode should prevent traversing with /..///..///..///..///..///test-file.txt",
        "File Serving production mode should prevent traversing with /..///..///..///..///test-file.txt",
        "File Serving production mode should prevent traversing with /..///..///..///test-file.txt",
        "File Serving production mode should prevent traversing with /..///..///test-file.txt",
        "File Serving production mode should prevent traversing with /..///test-file.txt",
        "File Serving production mode should prevent traversing with /..//test-file.txt",
        "File Serving production mode should prevent traversing with /../test-file.txt",
        "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..0x2f..0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..0x5c..0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\..\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\\\..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /..\\test-file.txt",
        "File Serving production mode should prevent traversing with /./.././.././.././.././.././.././.././../test-file.txt",
        "File Serving production mode should prevent traversing with /./.././.././.././.././.././.././../test-file.txt",
        "File Serving production mode should prevent traversing with /./.././.././.././.././.././../test-file.txt",
        "File Serving production mode should prevent traversing with /./.././.././.././.././../test-file.txt",
        "File Serving production mode should prevent traversing with /./.././.././.././../test-file.txt",
        "File Serving production mode should prevent traversing with /./.././.././../test-file.txt",
        "File Serving production mode should prevent traversing with /./.././../test-file.txt",
        "File Serving production mode should prevent traversing with /./../test-file.txt",
        "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../test-file.txt",
        "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../test-file.txt",
        "File Serving production mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../test-file.txt",
        "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving production mode should prevent traversing with /.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving production mode should prevent traversing with /.//..//.//..//.//..//test-file.txt",
        "File Serving production mode should prevent traversing with /.//..//.//..//test-file.txt",
        "File Serving production mode should prevent traversing with /.//..//test-file.txt",
        "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving production mode should prevent traversing with /./\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving production mode should prevent traversing with /./\\/././\\/././\\/./test-file.txt",
        "File Serving production mode should prevent traversing with /./\\/././\\/./test-file.txt",
        "File Serving production mode should prevent traversing with /./\\/./test-file.txt",
        "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\..\\.\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\/\\.\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with /.\\\\..\\\\test-file.txt",
        "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
        "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
        "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
        "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\test-file.txt",
        "File Serving production mode should prevent traversing with //..\\/..\\/..\\/..\\test-file.txt",
        "File Serving production mode should prevent traversing with //..\\/..\\/..\\test-file.txt",
        "File Serving production mode should prevent traversing with //..\\/..\\test-file.txt",
        "File Serving production mode should prevent traversing with //..\\test-file.txt",
        "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with ////%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with ////%2e%2e%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e/test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x2ftest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e0x5ctest-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /0x2e0x2e\\test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../test-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing withtest-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\test-file.txt",
        "File Serving production mode should prevent traversing with /\\..%2f",
        "File Serving production mode should prevent traversing with /\\..%2f\\..%2f",
        "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f",
        "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f",
        "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
        "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
        "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
        "File Serving production mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2ftest-file.txt",
        "File Serving production mode should prevent traversing with /\\../\\../\\../\\../\\../\\../\\../\\../test-file.txt",
        "File Serving production mode should prevent traversing with /\\../\\../\\../\\../\\../\\../\\../test-file.txt",
        "File Serving production mode should prevent traversing with /\\../\\../\\../\\../\\../\\../test-file.txt",
        "File Serving production mode should prevent traversing with /\\../\\../\\../\\../\\../test-file.txt",
        "File Serving production mode should prevent traversing with /\\../\\../\\../\\../test-file.txt",
        "File Serving production mode should prevent traversing with /\\../\\../\\../test-file.txt",
        "File Serving production mode should prevent traversing with /\\../\\../test-file.txt",
        "File Serving production mode should prevent traversing with /\\../test-file.txt",
        "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving production mode should prevent traversing with /\\\\\\%2e%2e%5ctest-file.txt",
        "File Serving production mode should serve avif image with correct content-type",
        "File Serving production mode should serve correct error code",
        "File Serving production mode should serve file with space correctly from public/",
        "File Serving production mode should serve file with space correctly static/"
      ],
      "failed": [],
      "pending": [
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%32%66%%32%65%%32%65%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%35%63%%32%65%%32%65%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65/%%32%65%%32%65/test-file.txt",
        "File Serving development mode should prevent traversing with /%%32%65%%32%65/test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%252f%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%252f%252e%252e%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%255c%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%255c%252e%252e%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e/%252e%252e/%252e%252e/test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e/%252e%252e/test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e/test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e\\%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e\\%252e%252e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%252e%252e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25af%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259c%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae/%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae\\%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%25c0%25ae%25c0%25ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e/%2e%2e/%2e%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e/%2e%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e\\%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e\\%2e%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%2e%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%2f%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%5c%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e/%c0%2e%c0%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e\\%c0%2e%c0%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%2e%c0%2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c0%af%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c1%9c%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae/%c0%ae%c0%ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae/test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae\\%c0%ae%c0%ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%c0%ae%c0%ae\\test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2215%uff0e%uff0e%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2216%uff0e%uff0e%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e/%uff0e%uff0e/test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e/test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e\\%uff0e%uff0e\\test-file.txt",
        "File Serving development mode should prevent traversing with /%uff0e%uff0e\\test-file.txt",
        "File Serving development mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /..%%32%66..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /..%%32%66..%%32%66..%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /..%%32%66..%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /..%%32%66test-file.txt",
        "File Serving development mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /..%%35%63..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /..%%35%63..%%35%63..%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /..%%35%63..%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /..%%35%63test-file.txt",
        "File Serving development mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%252f..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%252f..%252f..%252f..%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%252f..%252f..%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%252f..%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%252ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%255c..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%255c..%255c..%255c..%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%255c..%255c..%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%255c..%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%255ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c0%25af..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c0%25af..%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c0%25aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c1%259c..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c1%259c..%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%25c1%259ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%2f..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%2f..%2f..%2f..%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%2f..%2f..%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%2f..%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%5c..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%5c..%5c..%5c..%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%5c..%5c..%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%5c..%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%2f..%c0%2f..%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%2f..%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%5c..%c0%5c..%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%5c..%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%af..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%af..%c0%af..%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%af..%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c0%aftest-file.txt",
        "File Serving development mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c1%9c..%c1%9c..%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c1%9c..%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%c1%9ctest-file.txt",
        "File Serving development mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2215..%u2215..%u2215..%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2215..%u2215..%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2215..%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2215test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2216..%u2216..%u2216..%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2216..%u2216..%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2216..%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /..%u2216test-file.txt",
        "File Serving development mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving development mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving development mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving development mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving development mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving development mode should prevent traversing with /..%uEFC8..%uEFC8..%uEFC8test-file.txt",
        "File Serving development mode should prevent traversing with /..%uEFC8..%uEFC8test-file.txt",
        "File Serving development mode should prevent traversing with /..%uEFC8test-file.txt",
        "File Serving development mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving development mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving development mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving development mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving development mode should prevent traversing with /..%uF025..%uF025..%uF025..%uF025test-file.txt",
        "File Serving development mode should prevent traversing with /..%uF025..%uF025..%uF025test-file.txt",
        "File Serving development mode should prevent traversing with /..%uF025..%uF025test-file.txt",
        "File Serving development mode should prevent traversing with /..%uF025test-file.txt",
        "File Serving development mode should prevent traversing with /........................................................................../../../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /........................................................................../../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /........................................................................../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /........................................................................../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /........................................................................../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /........................................................................../../../test-file.txt",
        "File Serving development mode should prevent traversing with /........................................................................../../test-file.txt",
        "File Serving development mode should prevent traversing with /........................................................................../test-file.txt",
        "File Serving development mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..........................................................................\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..........................................................................\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..........................................................................\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..........................................................................\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..........................................................................\\test-file.txt",
        "File Serving development mode should prevent traversing with /..../..../..../..../..../..../..../..../test-file.txt",
        "File Serving development mode should prevent traversing with /..../..../..../..../..../..../..../test-file.txt",
        "File Serving development mode should prevent traversing with /..../..../..../..../..../..../test-file.txt",
        "File Serving development mode should prevent traversing with /..../..../..../..../..../test-file.txt",
        "File Serving development mode should prevent traversing with /..../..../..../..../test-file.txt",
        "File Serving development mode should prevent traversing with /..../..../..../test-file.txt",
        "File Serving development mode should prevent traversing with /..../..../test-file.txt",
        "File Serving development mode should prevent traversing with /..../test-file.txt",
        "File Serving development mode should prevent traversing with /....\\....\\....\\....\\....\\....\\....\\....\\test-file.txt",
        "File Serving development mode should prevent traversing with /....\\....\\....\\....\\....\\....\\....\\test-file.txt",
        "File Serving development mode should prevent traversing with /....\\....\\....\\....\\....\\....\\test-file.txt",
        "File Serving development mode should prevent traversing with /....\\....\\....\\....\\....\\test-file.txt",
        "File Serving development mode should prevent traversing with /....\\....\\....\\....\\test-file.txt",
        "File Serving development mode should prevent traversing with /....\\....\\....\\test-file.txt",
        "File Serving development mode should prevent traversing with /....\\....\\test-file.txt",
        "File Serving development mode should prevent traversing with /....\\test-file.txt",
        "File Serving development mode should prevent traversing with /.../.../.../.../.../.../.../.../test-file.txt",
        "File Serving development mode should prevent traversing with /.../.../.../.../.../.../.../test-file.txt",
        "File Serving development mode should prevent traversing with /.../.../.../.../.../.../test-file.txt",
        "File Serving development mode should prevent traversing with /.../.../.../.../.../test-file.txt",
        "File Serving development mode should prevent traversing with /.../.../.../.../test-file.txt",
        "File Serving development mode should prevent traversing with /.../.../.../test-file.txt",
        "File Serving development mode should prevent traversing with /.../.../test-file.txt",
        "File Serving development mode should prevent traversing with /.../test-file.txt",
        "File Serving development mode should prevent traversing with /...\\...\\...\\...\\...\\...\\...\\...\\test-file.txt",
        "File Serving development mode should prevent traversing with /...\\...\\...\\...\\...\\...\\...\\test-file.txt",
        "File Serving development mode should prevent traversing with /...\\...\\...\\...\\...\\...\\test-file.txt",
        "File Serving development mode should prevent traversing with /...\\...\\...\\...\\...\\test-file.txt",
        "File Serving development mode should prevent traversing with /...\\...\\...\\...\\test-file.txt",
        "File Serving development mode should prevent traversing with /...\\...\\...\\test-file.txt",
        "File Serving development mode should prevent traversing with /...\\...\\test-file.txt",
        "File Serving development mode should prevent traversing with /...\\test-file.txt",
        "File Serving development mode should prevent traversing with /../../../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /../../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /../../../test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..//../..//../..///test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..//../..//../..//test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..//../..//..///test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..//../..//../test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..//../..///test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..//../..//test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..//..///test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..//../test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..///test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../..//test-file.txt",
        "File Serving development mode should prevent traversing with /../..//..///test-file.txt",
        "File Serving development mode should prevent traversing with /../..//../test-file.txt",
        "File Serving development mode should prevent traversing with /../..///test-file.txt",
        "File Serving development mode should prevent traversing with /../..//test-file.txt",
        "File Serving development mode should prevent traversing with /../../test-file.txt",
        "File Serving development mode should prevent traversing with /..//..//..//..//..//..//..//..//test-file.txt",
        "File Serving development mode should prevent traversing with /..//..//..//..//..//..//..//test-file.txt",
        "File Serving development mode should prevent traversing with /..//..//..//..//..//..//test-file.txt",
        "File Serving development mode should prevent traversing with /..//..//..//..//..//test-file.txt",
        "File Serving development mode should prevent traversing with /..//..//..//..//test-file.txt",
        "File Serving development mode should prevent traversing with /..//..//..//test-file.txt",
        "File Serving development mode should prevent traversing with /..//..//test-file.txt",
        "File Serving development mode should prevent traversing with /..///..///..///..///..///..///..///..///test-file.txt",
        "File Serving development mode should prevent traversing with /..///..///..///..///..///..///..///test-file.txt",
        "File Serving development mode should prevent traversing with /..///..///..///..///..///..///test-file.txt",
        "File Serving development mode should prevent traversing with /..///..///..///..///..///test-file.txt",
        "File Serving development mode should prevent traversing with /..///..///..///..///test-file.txt",
        "File Serving development mode should prevent traversing with /..///..///..///test-file.txt",
        "File Serving development mode should prevent traversing with /..///..///test-file.txt",
        "File Serving development mode should prevent traversing with /..///test-file.txt",
        "File Serving development mode should prevent traversing with /..//test-file.txt",
        "File Serving development mode should prevent traversing with /../test-file.txt",
        "File Serving development mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..0x2f..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..0x2f..0x2f..0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..0x2f..0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..0x5c..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..0x5c..0x5c..0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..0x5c..0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\..\\\\..\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\..\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\\\..\\\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\\\..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /..\\test-file.txt",
        "File Serving development mode should prevent traversing with /./.././.././.././.././.././.././.././../test-file.txt",
        "File Serving development mode should prevent traversing with /./.././.././.././.././.././.././../test-file.txt",
        "File Serving development mode should prevent traversing with /./.././.././.././.././.././../test-file.txt",
        "File Serving development mode should prevent traversing with /./.././.././.././.././../test-file.txt",
        "File Serving development mode should prevent traversing with /./.././.././.././../test-file.txt",
        "File Serving development mode should prevent traversing with /./.././.././../test-file.txt",
        "File Serving development mode should prevent traversing with /./.././../test-file.txt",
        "File Serving development mode should prevent traversing with /./../test-file.txt",
        "File Serving development mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../../test-file.txt",
        "File Serving development mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../../test-file.txt",
        "File Serving development mode should prevent traversing with /././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././././../test-file.txt",
        "File Serving development mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving development mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving development mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving development mode should prevent traversing with /.//..//.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving development mode should prevent traversing with /.//..//.//..//.//..//.//..//test-file.txt",
        "File Serving development mode should prevent traversing with /.//..//.//..//.//..//test-file.txt",
        "File Serving development mode should prevent traversing with /.//..//.//..//test-file.txt",
        "File Serving development mode should prevent traversing with /.//..//test-file.txt",
        "File Serving development mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving development mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving development mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving development mode should prevent traversing with /./\\/././\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving development mode should prevent traversing with /./\\/././\\/././\\/././\\/./test-file.txt",
        "File Serving development mode should prevent traversing with /./\\/././\\/././\\/./test-file.txt",
        "File Serving development mode should prevent traversing with /./\\/././\\/./test-file.txt",
        "File Serving development mode should prevent traversing with /./\\/./test-file.txt",
        "File Serving development mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\..\\.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\..\\.\\..\\.\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\..\\.\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\/\\.\\.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\/\\.\\.\\/\\.\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\/\\.\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\\\..\\\\.\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with /.\\\\..\\\\test-file.txt",
        "File Serving development mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
        "File Serving development mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
        "File Serving development mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\/..\\test-file.txt",
        "File Serving development mode should prevent traversing with //..\\/..\\/..\\/..\\/..\\test-file.txt",
        "File Serving development mode should prevent traversing with //..\\/..\\/..\\/..\\test-file.txt",
        "File Serving development mode should prevent traversing with //..\\/..\\/..\\test-file.txt",
        "File Serving development mode should prevent traversing with //..\\/..\\test-file.txt",
        "File Serving development mode should prevent traversing with //..\\test-file.txt",
        "File Serving development mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with ////%2e%2e%2f%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with ////%2e%2e%2f%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with ////%2e%2e%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e/0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e/0x2e0x2e/test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e/test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x2f0x2e0x2e0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x2ftest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x5c0x2e0x2e0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e0x5ctest-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e\\0x2e0x2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /0x2e0x2e\\test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/../../../../../../../../test-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing withtest-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\..\\test-file.txt",
        "File Serving development mode should prevent traversing with /\\..%2f",
        "File Serving development mode should prevent traversing with /\\..%2f\\..%2f",
        "File Serving development mode should prevent traversing with /\\..%2f\\..%2f\\..%2f",
        "File Serving development mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f",
        "File Serving development mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
        "File Serving development mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
        "File Serving development mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f",
        "File Serving development mode should prevent traversing with /\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2f\\..%2ftest-file.txt",
        "File Serving development mode should prevent traversing with /\\../\\../\\../\\../\\../\\../\\../\\../test-file.txt",
        "File Serving development mode should prevent traversing with /\\../\\../\\../\\../\\../\\../\\../test-file.txt",
        "File Serving development mode should prevent traversing with /\\../\\../\\../\\../\\../\\../test-file.txt",
        "File Serving development mode should prevent traversing with /\\../\\../\\../\\../\\../test-file.txt",
        "File Serving development mode should prevent traversing with /\\../\\../\\../\\../test-file.txt",
        "File Serving development mode should prevent traversing with /\\../\\../\\../test-file.txt",
        "File Serving development mode should prevent traversing with /\\../\\../test-file.txt",
        "File Serving development mode should prevent traversing with /\\../test-file.txt",
        "File Serving development mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /\\\\\\%2e%2e%5c%2e%2e%5ctest-file.txt",
        "File Serving development mode should prevent traversing with /\\\\\\%2e%2e%5ctest-file.txt",
        "File Serving development mode should serve avif image with correct content-type",
        "File Serving development mode should serve correct error code",
        "File Serving development mode should serve file with space correctly from public/",
        "File Serving development mode should serve file with space correctly static/"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/filesystempublicroutes/test/index.test.js": {
      "passed": [
        "FileSystemPublicRoutes should not route to the index page",
        "FileSystemPublicRoutes should route to exportPathMap defined routes in development",
        "FileSystemPublicRoutes should route to public folder files",
        "FileSystemPublicRoutes should serve JavaScript files correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/firebase-grpc/test/index.test.js": {
      "passed": [
        "Building Firebase production mode Throws no error when building with firebase dependency without worker_threads"
      ],
      "failed": [],
      "pending": [
        "Building Firebase production mode Throws an error when building with firebase dependency with worker_threads"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/future/test/index.test.js": {
      "passed": [
        "excludeDefaultMomentLocales production mode should load momentjs"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/getinitialprops/test/index.test.js": {
      "passed": [
        "getInitialProps production mode should have correct router.asPath for direct visit dynamic page",
        "getInitialProps production mode should have correct router.asPath for direct visit dynamic page rewrite direct",
        "getInitialProps production mode should have gip in __NEXT_DATA__",
        "getInitialProps production mode should not have gip in __NEXT_DATA__ for non-GIP page"
      ],
      "failed": [],
      "pending": [
        "getInitialProps development mode should have correct router.asPath for direct visit dynamic page",
        "getInitialProps development mode should have correct router.asPath for direct visit dynamic page rewrite direct",
        "getInitialProps development mode should have gip in __NEXT_DATA__",
        "getInitialProps development mode should not have gip in __NEXT_DATA__ for non-GIP page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/getserversideprops-export-error/test/index.test.js": {
      "passed": [
        "getServerSideProps production mode should show error for GSSP during export"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/getserversideprops-preview/test/index.test.js": {
      "passed": [
        "ServerSide Props Preview Mode production mode should compile successfully",
        "ServerSide Props Preview Mode production mode should enable preview mode",
        "ServerSide Props Preview Mode production mode should not return fallback page on preview request",
        "ServerSide Props Preview Mode production mode should return cookies to be expired on reset request",
        "ServerSide Props Preview Mode production mode should return correct caching headers for data preview request",
        "ServerSide Props Preview Mode production mode should return page on first request",
        "ServerSide Props Preview Mode production mode should return page on second request",
        "ServerSide Props Preview Mode production mode should start production application",
        "ServerSide Props Preview Mode production mode should throw error when setting too large of preview data"
      ],
      "failed": [],
      "pending": [
        "ServerSide Props Preview Mode development mode should enable preview mode",
        "ServerSide Props Preview Mode development mode should fetch prerendered data",
        "ServerSide Props Preview Mode development mode should fetch preview data on CST",
        "ServerSide Props Preview Mode development mode should fetch preview data on SSR",
        "ServerSide Props Preview Mode development mode should return cookies to be expired after dev server reboot",
        "ServerSide Props Preview Mode development mode should start development application",
        "ServerSide Props Preview Mode development mode should start the client-side browser"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/gip-identifier/test/index.test.js": {
      "passed": [
        "gip identifiers production mode should have gip and appGip in NEXT_DATA for page with getInitialProps and _app with getInitialProps",
        "gip identifiers production mode should have gip in NEXT_DATA for page with getInitialProps",
        "gip identifiers production mode should not have gip or appGip in NEXT_DATA for page without getInitialProps",
        "gip identifiers production mode should only have appGip in NEXT_DATA for page without getInitialProps and _app with getInitialProps"
      ],
      "failed": [],
      "pending": [
        "gip identifiers development mode should have gip and appGip in NEXT_DATA for page with getInitialProps and _app with getInitialProps",
        "gip identifiers development mode should have gip in NEXT_DATA for page with getInitialProps",
        "gip identifiers development mode should not have gip or appGip in NEXT_DATA for page without getInitialProps",
        "gip identifiers development mode should only have appGip in NEXT_DATA for page without getInitialProps and _app with getInitialProps"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/gsp-build-errors/test/index.test.js": {
      "passed": [
        "GSP build errors production mode should fail build from ENOENT in getStaticProps",
        "GSP build errors production mode should fail build from string error in getStaticProps",
        "GSP build errors production mode should fail build from undefined error in getStaticProps",
        "GSP build errors production mode should fail build on normal error in getStaticProps",
        "GSP build errors production mode should handle non-serializable error in getStaticPaths",
        "GSP build errors production mode should handle non-serializable error in getStaticProps"
      ],
      "failed": [],
      "pending": [
        "GSP build errors production mode should fail build from module not found"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/gsp-extension/test/index.test.js": {
      "passed": [
        "GS(S)P with file extension production mode should contain extension in name of json files in _next/data",
        "GS(S)P with file extension production mode should render properly for routes with extension",
        "GS(S)P with file extension production mode should support slug with different extensions"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/gssp-pageProps-merge/test/index.test.js": {
      "passed": [
        "pageProps GSSP conflict production mode should merge _app pageProps and getServerSideProps props",
        "pageProps GSSP conflict production mode should merge _app pageProps and getStaticProps props"
      ],
      "failed": [],
      "pending": [
        "pageProps GSSP conflict development mode should merge _app pageProps and getServerSideProps props",
        "pageProps GSSP conflict development mode should merge _app pageProps and getStaticProps props"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/gssp-redirect-base-path/test/index.test.js": {
      "passed": [
        "GS(S)P Redirect Support production mode should apply permanent redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support production mode should apply redirect when GSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support production mode should apply redirect when GSP page is navigated to client-side (internal)",
        "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (internal dynamic)",
        "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (internal normal)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (external domain)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (external)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal dynamic)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal dynamic) 2nd visit",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal normal)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal normal) 2nd visit",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSSP page is visited directly (external domain)",
        "GS(S)P Redirect Support production mode should apply statusCode 301 redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support production mode should apply statusCode 303 redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support production mode should apply temporary redirect when visited directly basePath false for GSSP page",
        "GS(S)P Redirect Support production mode should apply temporary redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support production mode should error for redirect during prerendering",
        "GS(S)P Redirect Support production mode should not replace history of the origin page when GSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support production mode should not replace history of the origin page when GSP page is navigated to client-side (internal)",
        "GS(S)P Redirect Support production mode should not replace history of the origin page when GSSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support production mode should not replace history of the origin page when GSSP page is navigated to client-side (internal normal)"
      ],
      "failed": [],
      "pending": [
        "GS(S)P Redirect Support development mode should apply permanent redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support development mode should apply redirect when GSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support development mode should apply redirect when GSP page is navigated to client-side (internal)",
        "GS(S)P Redirect Support development mode should apply redirect when GSSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support development mode should apply redirect when GSSP page is navigated to client-side (internal dynamic)",
        "GS(S)P Redirect Support development mode should apply redirect when GSSP page is navigated to client-side (internal normal)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSP page is visited directly (external domain)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSP page is visited directly (external)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSP page is visited directly (internal dynamic)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSP page is visited directly (internal normal)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSSP page is visited directly (external domain)",
        "GS(S)P Redirect Support development mode should apply statusCode 301 redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support development mode should apply statusCode 303 redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support development mode should apply temporary redirect when visited directly basePath false for GSSP page",
        "GS(S)P Redirect Support development mode should apply temporary redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support development mode should not replace history of the origin page when GSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support development mode should not replace history of the origin page when GSP page is navigated to client-side (internal)",
        "GS(S)P Redirect Support development mode should not replace history of the origin page when GSSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support development mode should not replace history of the origin page when GSSP page is navigated to client-side (internal normal)"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/gssp-redirect-with-rewrites/test/index.test.js": {
      "passed": [
        "getServerSideProps redirects should fallback to browser navigation for an unknown URL",
        "getServerSideProps redirects should use a client-side navigation for a rewritten URL"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/gssp-redirect/test/index.test.js": {
      "passed": [
        "GS(S)P Redirect Support production mode should apply permanent redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support production mode should apply redirect when GSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support production mode should apply redirect when GSP page is navigated to client-side (internal)",
        "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (internal dynamic)",
        "GS(S)P Redirect Support production mode should apply redirect when GSSP page is navigated to client-side (internal normal)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (external domain)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (external)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal dynamic)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal dynamic) 2nd visit",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal normal)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSP page is visited directly (internal normal) 2nd visit",
        "GS(S)P Redirect Support production mode should apply redirect when fallback GSSP page is visited directly (external domain)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic)",
        "GS(S)P Redirect Support production mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) second visit",
        "GS(S)P Redirect Support production mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) with revalidate",
        "GS(S)P Redirect Support production mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) with revalidate second visit",
        "GS(S)P Redirect Support production mode should apply statusCode 301 redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support production mode should apply statusCode 303 redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support production mode should apply temporary redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support production mode should error for redirect during prerendering",
        "GS(S)P Redirect Support production mode should not have errors in output",
        "GS(S)P Redirect Support production mode should not replace history of the origin page when GSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support production mode should not replace history of the origin page when GSP page is navigated to client-side (internal)",
        "GS(S)P Redirect Support production mode should not replace history of the origin page when GSSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support production mode should not replace history of the origin page when GSSP page is navigated to client-side (internal normal)"
      ],
      "failed": [],
      "pending": [
        "GS(S)P Redirect Support development mode should apply permanent redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support development mode should apply redirect when GSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support development mode should apply redirect when GSP page is navigated to client-side (internal)",
        "GS(S)P Redirect Support development mode should apply redirect when GSSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support development mode should apply redirect when GSSP page is navigated to client-side (internal dynamic)",
        "GS(S)P Redirect Support development mode should apply redirect when GSSP page is navigated to client-side (internal normal)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSP page is visited directly (external domain)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSP page is visited directly (external)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSP page is visited directly (internal dynamic)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSP page is visited directly (internal normal)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback GSSP page is visited directly (external domain)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic)",
        "GS(S)P Redirect Support development mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) second visit",
        "GS(S)P Redirect Support development mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) with revalidate",
        "GS(S)P Redirect Support development mode should apply redirect when fallback blocking GSP page is visited directly (internal dynamic) with revalidate second visit",
        "GS(S)P Redirect Support development mode should apply statusCode 301 redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support development mode should apply statusCode 303 redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support development mode should apply temporary redirect when visited directly for GSSP page",
        "GS(S)P Redirect Support development mode should not replace history of the origin page when GSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support development mode should not replace history of the origin page when GSP page is navigated to client-side (internal)",
        "GS(S)P Redirect Support development mode should not replace history of the origin page when GSSP page is navigated to client-side (external)",
        "GS(S)P Redirect Support development mode should not replace history of the origin page when GSSP page is navigated to client-side (internal normal)"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/handles-export-errors/test/index.test.js": {
      "passed": [
        "Handles Errors During Export production mode Does not crash workers"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/hashbang/test/index.test.js": {
      "passed": [
        "Hashbang production mode first-line hashbang (#!) parse should work for .cjs files",
        "Hashbang production mode first-line hashbang (#!) parse should work for .js files",
        "Hashbang production mode first-line hashbang (#!) parse should work for .mjs files"
      ],
      "failed": [],
      "pending": [
        "Hashbang development mode first-line hashbang (#!) parse should work for .cjs files",
        "Hashbang development mode first-line hashbang (#!) parse should work for .js files",
        "Hashbang development mode first-line hashbang (#!) parse should work for .mjs files"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/hydrate-then-render/test/index.test.js": {
      "passed": [
        "hydrate/render ordering production mode correctly measures hydrate followed by render"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/hydration/test/index.test.js": {
      "passed": [
        "Hydration production mode hydrates correctly for //",
        "Hydration production mode hydrates correctly for normal page",
        "Hydration production mode should be able to navigate after loading //"
      ],
      "failed": [],
      "pending": [
        "Hydration development mode hydrates correctly for //",
        "Hydration development mode hydrates correctly for normal page",
        "Hydration development mode should be able to navigate after loading //"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/i18n-support-base-path/test/index.test.js": {
      "passed": [
        "i18n Support basePath production mode should 404 for GSP pages that returned notFound",
        "i18n Support basePath production mode should 404 for GSP that returned notFound on client-transition",
        "i18n Support basePath production mode should 404 for locale prefixed public folder files",
        "i18n Support basePath production mode should 404 for locale prefixed static assets correctly",
        "i18n Support basePath production mode should add i18n config to routes-manifest",
        "i18n Support basePath production mode should apply headers correctly",
        "i18n Support basePath production mode should apply redirects correctly",
        "i18n Support basePath production mode should apply rewrites correctly",
        "i18n Support basePath production mode should apply trailingSlash redirect correctly",
        "i18n Support basePath production mode should generate AMP pages with all locales",
        "i18n Support basePath production mode should generate auto-export page with all locales",
        "i18n Support basePath production mode should generate fallbacks with all locales",
        "i18n Support basePath production mode should generate non-dynamic GSP page with all locales",
        "i18n Support basePath production mode should handle basePath like pathname",
        "i18n Support basePath production mode should handle fallback correctly after generating",
        "i18n Support basePath production mode should handle locales with domain for domain example.com should handle locale do-BE",
        "i18n Support basePath production mode should handle locales with domain for domain example.com should handle locale go-BE",
        "i18n Support basePath production mode should handle locales with domain for domain example.do should handle locale do-BE",
        "i18n Support basePath production mode should handle locales with domain for domain example.do should handle locale go-BE",
        "i18n Support basePath production mode should handle navigating back to different casing of locale",
        "i18n Support basePath production mode should have correct initial query values for fallback",
        "i18n Support basePath production mode should have correct values for non-prefixed path",
        "i18n Support basePath production mode should have domainLocales available on useRouter",
        "i18n Support basePath production mode should load dynamic getServerSideProps page correctly SSR",
        "i18n Support basePath production mode should load getServerSideProps page correctly SSR",
        "i18n Support basePath production mode should load getServerSideProps page correctly SSR (default locale no prefix)",
        "i18n Support basePath production mode should load getStaticProps fallback non-prerender page another locale correctly",
        "i18n Support basePath production mode should load getStaticProps fallback non-prerender page correctly",
        "i18n Support basePath production mode should load getStaticProps fallback non-prerender page correctly (default locale no prefix",
        "i18n Support basePath production mode should load getStaticProps fallback prerender page correctly SSR",
        "i18n Support basePath production mode should load getStaticProps fallback prerender page correctly SSR (default locale no prefix)",
        "i18n Support basePath production mode should load getStaticProps non-fallback correctly",
        "i18n Support basePath production mode should load getStaticProps non-fallback correctly another locale",
        "i18n Support basePath production mode should load getStaticProps non-fallback correctly another locale via cookie",
        "i18n Support basePath production mode should load getStaticProps page correctly SSR",
        "i18n Support basePath production mode should load getStaticProps page correctly SSR (default locale no prefix)",
        "i18n Support basePath production mode should navigate client side for default locale with no prefix",
        "i18n Support basePath production mode should navigate through history with query correctly",
        "i18n Support basePath production mode should navigate to another page and back correctly with locale",
        "i18n Support basePath production mode should navigate to auto-export dynamic page",
        "i18n Support basePath production mode should navigate to getStaticProps page and back correctly with locale",
        "i18n Support basePath production mode should navigate to page with same name as development buildId",
        "i18n Support basePath production mode should navigate with locale false correctly",
        "i18n Support basePath production mode should navigate with locale false correctly GSP",
        "i18n Support basePath production mode should navigate with locale prop correctly",
        "i18n Support basePath production mode should navigate with locale prop correctly GSP",
        "i18n Support basePath production mode should not add duplicate locale key when navigating back to root path with hash",
        "i18n Support basePath production mode should not add duplicate locale key when navigating back to root path with query params",
        "i18n Support basePath production mode should not contain backslashes in pages-manifest",
        "i18n Support basePath production mode should not error with similar named cookie to locale cookie",
        "i18n Support basePath production mode should not have hydration mis-match from hash",
        "i18n Support basePath production mode should not output GSP pages that returned notFound",
        "i18n Support basePath production mode should not redirect to accept-lang preferred locale with locale cookie",
        "i18n Support basePath production mode should not remove locale prefix for default locale",
        "i18n Support basePath production mode should not strip locale prefix for default locale with locale domains",
        "i18n Support basePath production mode should output correct prerender-manifest",
        "i18n Support basePath production mode should preload all locales data correctly",
        "i18n Support basePath production mode should prerender with the correct href for locale domain",
        "i18n Support basePath production mode should provide defaultLocale correctly for locale domain",
        "i18n Support basePath production mode should redirect external domain correctly",
        "i18n Support basePath production mode should redirect to correct locale domain",
        "i18n Support basePath production mode should redirect to locale prefixed route for /",
        "i18n Support basePath production mode should render 404 for blocking fallback page that returned 404",
        "i18n Support basePath production mode should render 404 for blocking fallback page that returned 404 on client transition",
        "i18n Support basePath production mode should render 404 for fallback page that returned 404",
        "i18n Support basePath production mode should render 404 for fallback page that returned 404 on client transition",
        "i18n Support basePath production mode should render the correct href with locale domains but not on a locale domain",
        "i18n Support basePath production mode should resolve auto-export dynamic route correctly",
        "i18n Support basePath production mode should resolve href correctly when dynamic route matches locale prefixed",
        "i18n Support basePath production mode should rewrite to API route correctly for do locale",
        "i18n Support basePath production mode should rewrite to API route correctly for do-BE locale",
        "i18n Support basePath production mode should rewrite to API route correctly for en locale",
        "i18n Support basePath production mode should rewrite to API route correctly for en-US locale",
        "i18n Support basePath production mode should rewrite to API route correctly for fr locale",
        "i18n Support basePath production mode should rewrite to API route correctly for fr-BE locale",
        "i18n Support basePath production mode should rewrite to API route correctly for go locale",
        "i18n Support basePath production mode should rewrite to API route correctly for go-BE locale",
        "i18n Support basePath production mode should rewrite to API route correctly for nl locale",
        "i18n Support basePath production mode should rewrite to API route correctly for nl-BE locale",
        "i18n Support basePath production mode should rewrite to API route correctly for nl-NL locale",
        "i18n Support basePath production mode should serve public file on locale domain",
        "i18n Support basePath production mode should transition on client properly for page that starts with locale",
        "i18n Support basePath production mode should update asPath on the client correctly",
        "i18n Support basePath production mode should use correct default locale for locale domains",
        "i18n Support basePath production mode should use default locale for / without accept-language",
        "i18n Support basePath production mode should use default locale when no locale is in href with locale false",
        "i18n Support basePath production mode should visit API route directly correctly",
        "i18n Support basePath production mode should visit dynamic API route directly correctly",
        "i18n Support basePath production mode should work with AMP first page with all locales",
        "i18n Support basePath with localeDetection disabled production mode should have localeDetection in routes-manifest",
        "i18n Support basePath with localeDetection disabled production mode should not detect locale from accept-language",
        "i18n Support basePath with localeDetection disabled production mode should set locale from detected path"
      ],
      "failed": [],
      "pending": [
        "i18n Support basePath development mode should 404 for GSP pages that returned notFound",
        "i18n Support basePath development mode should 404 for GSP that returned notFound on client-transition",
        "i18n Support basePath development mode should 404 for locale prefixed public folder files",
        "i18n Support basePath development mode should 404 for locale prefixed static assets correctly",
        "i18n Support basePath development mode should apply headers correctly",
        "i18n Support basePath development mode should apply redirects correctly",
        "i18n Support basePath development mode should apply rewrites correctly",
        "i18n Support basePath development mode should apply trailingSlash redirect correctly",
        "i18n Support basePath development mode should generate AMP pages with all locales",
        "i18n Support basePath development mode should generate auto-export page with all locales",
        "i18n Support basePath development mode should generate fallbacks with all locales",
        "i18n Support basePath development mode should generate non-dynamic GSP page with all locales",
        "i18n Support basePath development mode should handle basePath like pathname",
        "i18n Support basePath development mode should handle locales with domain for domain example.com should handle locale do-BE",
        "i18n Support basePath development mode should handle locales with domain for domain example.com should handle locale go-BE",
        "i18n Support basePath development mode should handle locales with domain for domain example.do should handle locale do-BE",
        "i18n Support basePath development mode should handle locales with domain for domain example.do should handle locale go-BE",
        "i18n Support basePath development mode should handle navigating back to different casing of locale",
        "i18n Support basePath development mode should have correct initial query values for fallback",
        "i18n Support basePath development mode should have correct values for non-prefixed path",
        "i18n Support basePath development mode should have domainLocales available on useRouter",
        "i18n Support basePath development mode should load dynamic getServerSideProps page correctly SSR",
        "i18n Support basePath development mode should load getServerSideProps page correctly SSR",
        "i18n Support basePath development mode should load getServerSideProps page correctly SSR (default locale no prefix)",
        "i18n Support basePath development mode should load getStaticProps fallback non-prerender page another locale correctly",
        "i18n Support basePath development mode should load getStaticProps fallback non-prerender page correctly",
        "i18n Support basePath development mode should load getStaticProps fallback non-prerender page correctly (default locale no prefix",
        "i18n Support basePath development mode should load getStaticProps fallback prerender page correctly SSR",
        "i18n Support basePath development mode should load getStaticProps fallback prerender page correctly SSR (default locale no prefix)",
        "i18n Support basePath development mode should load getStaticProps non-fallback correctly",
        "i18n Support basePath development mode should load getStaticProps non-fallback correctly another locale",
        "i18n Support basePath development mode should load getStaticProps non-fallback correctly another locale via cookie",
        "i18n Support basePath development mode should load getStaticProps page correctly SSR",
        "i18n Support basePath development mode should load getStaticProps page correctly SSR (default locale no prefix)",
        "i18n Support basePath development mode should navigate client side for default locale with no prefix",
        "i18n Support basePath development mode should navigate through history with query correctly",
        "i18n Support basePath development mode should navigate to another page and back correctly with locale",
        "i18n Support basePath development mode should navigate to auto-export dynamic page",
        "i18n Support basePath development mode should navigate to getStaticProps page and back correctly with locale",
        "i18n Support basePath development mode should navigate to page with same name as development buildId",
        "i18n Support basePath development mode should navigate with locale false correctly",
        "i18n Support basePath development mode should navigate with locale false correctly GSP",
        "i18n Support basePath development mode should navigate with locale prop correctly",
        "i18n Support basePath development mode should navigate with locale prop correctly GSP",
        "i18n Support basePath development mode should not add duplicate locale key when navigating back to root path with hash",
        "i18n Support basePath development mode should not add duplicate locale key when navigating back to root path with query params",
        "i18n Support basePath development mode should not error with similar named cookie to locale cookie",
        "i18n Support basePath development mode should not have hydration mis-match from hash",
        "i18n Support basePath development mode should not redirect to accept-lang preferred locale with locale cookie",
        "i18n Support basePath development mode should not remove locale prefix for default locale",
        "i18n Support basePath development mode should not strip locale prefix for default locale with locale domains",
        "i18n Support basePath development mode should prerender with the correct href for locale domain",
        "i18n Support basePath development mode should provide defaultLocale correctly for locale domain",
        "i18n Support basePath development mode should redirect external domain correctly",
        "i18n Support basePath development mode should redirect to correct locale domain",
        "i18n Support basePath development mode should redirect to locale domain correctly client-side",
        "i18n Support basePath development mode should redirect to locale prefixed route for /",
        "i18n Support basePath development mode should render 404 for blocking fallback page that returned 404",
        "i18n Support basePath development mode should render 404 for blocking fallback page that returned 404 on client transition",
        "i18n Support basePath development mode should render 404 for fallback page that returned 404",
        "i18n Support basePath development mode should render 404 for fallback page that returned 404 on client transition",
        "i18n Support basePath development mode should render the correct href for locale domain",
        "i18n Support basePath development mode should render the correct href with locale domains but not on a locale domain",
        "i18n Support basePath development mode should resolve auto-export dynamic route correctly",
        "i18n Support basePath development mode should resolve href correctly when dynamic route matches locale prefixed",
        "i18n Support basePath development mode should rewrite to API route correctly for do locale",
        "i18n Support basePath development mode should rewrite to API route correctly for do-BE locale",
        "i18n Support basePath development mode should rewrite to API route correctly for en locale",
        "i18n Support basePath development mode should rewrite to API route correctly for en-US locale",
        "i18n Support basePath development mode should rewrite to API route correctly for fr locale",
        "i18n Support basePath development mode should rewrite to API route correctly for fr-BE locale",
        "i18n Support basePath development mode should rewrite to API route correctly for go locale",
        "i18n Support basePath development mode should rewrite to API route correctly for go-BE locale",
        "i18n Support basePath development mode should rewrite to API route correctly for nl locale",
        "i18n Support basePath development mode should rewrite to API route correctly for nl-BE locale",
        "i18n Support basePath development mode should rewrite to API route correctly for nl-NL locale",
        "i18n Support basePath development mode should serve public file on locale domain",
        "i18n Support basePath development mode should show error for redirect and notFound returned at same time",
        "i18n Support basePath development mode should transition on client properly for page that starts with locale",
        "i18n Support basePath development mode should update asPath on the client correctly",
        "i18n Support basePath development mode should use correct default locale for locale domains",
        "i18n Support basePath development mode should use default locale for / without accept-language",
        "i18n Support basePath development mode should use default locale when no locale is in href with locale false",
        "i18n Support basePath development mode should visit API route directly correctly",
        "i18n Support basePath development mode should visit dynamic API route directly correctly",
        "i18n Support basePath development mode should work with AMP first page with all locales",
        "i18n Support basePath production mode should redirect to locale domain correctly client-side",
        "i18n Support basePath production mode should render the correct href for locale domain"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/i18n-support-catchall/test/index.test.js": {
      "passed": [
        "i18n Support Root Catch-all production mode should load the index route correctly CSR",
        "i18n Support Root Catch-all production mode should load the index route correctly SSR",
        "i18n Support Root Catch-all production mode should navigate to other locale index and back",
        "i18n Support Root Catch-all production mode should navigate to other locale page and back",
        "i18n Support Root Catch-all production mode should output prerendered index routes correctly",
        "i18n Support Root Catch-all production mode should preload data correctly"
      ],
      "failed": [],
      "pending": [
        "i18n Support Root Catch-all development mode should load the index route correctly CSR",
        "i18n Support Root Catch-all development mode should load the index route correctly SSR",
        "i18n Support Root Catch-all development mode should navigate to other locale index and back",
        "i18n Support Root Catch-all development mode should navigate to other locale page and back"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/i18n-support-custom-error/test/index.test.js": {
      "passed": [
        "Custom routes i18n custom error production mode handle custom http status maintaining locale props in custom _error page",
        "Custom routes i18n custom error production mode handle default http status maintaining locale props in custom _error page",
        "Custom routes i18n custom error production mode should localized [slug] routes render correctly",
        "Custom routes i18n custom error production mode should work also on client side routing"
      ],
      "failed": [],
      "pending": [
        "Custom routes i18n custom error development mode handle custom http status maintaining locale props in custom _error page",
        "Custom routes i18n custom error development mode handle default http status maintaining locale props in custom _error page",
        "Custom routes i18n custom error development mode should localized [slug] routes render correctly",
        "Custom routes i18n custom error development mode should work also on client side routing"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js": {
      "passed": [
        "i18n Support production mode should not rewrite for dynamic page",
        "i18n Support production mode should not rewrite for index page"
      ],
      "failed": [],
      "pending": [
        "i18n Support development mode should not rewrite for dynamic page",
        "i18n Support development mode should not rewrite for index page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/i18n-support-fallback-rewrite/test/index.test.js": {
      "passed": [
        "i18n Support production mode should not rewrite for dynamic page",
        "i18n Support production mode should not rewrite for index page"
      ],
      "failed": [],
      "pending": [
        "i18n Support development mode should not rewrite for dynamic page",
        "i18n Support development mode should not rewrite for index page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/i18n-support-index-rewrite/test/index.test.js": {
      "passed": [
        "Custom routes i18n support index rewrite production mode should handle index rewrite on client correctly",
        "Custom routes i18n support index rewrite production mode should rewrite index route correctly"
      ],
      "failed": [],
      "pending": [
        "Custom routes i18n support index rewrite development mode should handle index rewrite on client correctly",
        "Custom routes i18n support index rewrite development mode should rewrite index route correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/i18n-support-same-page-hash-change/test/index.test.js": {
      "passed": [
        "Hash changes i18n production mode should trigger hash change events",
        "Hash changes i18n production mode should update props on locale change with same hash",
        "Hash changes i18n production mode should update props on locale change with same hash (dynamic page)"
      ],
      "failed": [],
      "pending": [
        "Hash changes i18n development mode should trigger hash change events",
        "Hash changes i18n development mode should update props on locale change with same hash",
        "Hash changes i18n development mode should update props on locale change with same hash (dynamic page)"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/i18n-support/test/index.test.js": {
      "passed": [
        "i18n Support production mode should 404 for GSP pages that returned notFound",
        "i18n Support production mode should 404 for GSP that returned notFound on client-transition",
        "i18n Support production mode should 404 for locale prefixed public folder files",
        "i18n Support production mode should 404 for locale prefixed static assets correctly",
        "i18n Support production mode should add i18n config to routes-manifest",
        "i18n Support production mode should apply headers correctly",
        "i18n Support production mode should apply redirects correctly",
        "i18n Support production mode should apply rewrites correctly",
        "i18n Support production mode should apply trailingSlash redirect correctly",
        "i18n Support production mode should generate AMP pages with all locales",
        "i18n Support production mode should generate auto-export page with all locales",
        "i18n Support production mode should generate fallbacks with all locales",
        "i18n Support production mode should generate non-dynamic GSP page with all locales",
        "i18n Support production mode should handle fallback correctly after generating",
        "i18n Support production mode should handle locales with domain for domain example.com should handle locale do-BE",
        "i18n Support production mode should handle locales with domain for domain example.com should handle locale go-BE",
        "i18n Support production mode should handle locales with domain for domain example.do should handle locale do-BE",
        "i18n Support production mode should handle locales with domain for domain example.do should handle locale go-BE",
        "i18n Support production mode should handle navigating back to different casing of locale",
        "i18n Support production mode should have correct initial query values for fallback",
        "i18n Support production mode should have correct values for non-prefixed path",
        "i18n Support production mode should have domainLocales available on useRouter",
        "i18n Support production mode should have pre-rendered /500 correctly",
        "i18n Support production mode should load dynamic getServerSideProps page correctly SSR",
        "i18n Support production mode should load getServerSideProps page correctly SSR",
        "i18n Support production mode should load getServerSideProps page correctly SSR (default locale no prefix)",
        "i18n Support production mode should load getStaticProps fallback non-prerender page another locale correctly",
        "i18n Support production mode should load getStaticProps fallback non-prerender page correctly",
        "i18n Support production mode should load getStaticProps fallback non-prerender page correctly (default locale no prefix",
        "i18n Support production mode should load getStaticProps fallback prerender page correctly SSR",
        "i18n Support production mode should load getStaticProps fallback prerender page correctly SSR (default locale no prefix)",
        "i18n Support production mode should load getStaticProps non-fallback correctly",
        "i18n Support production mode should load getStaticProps non-fallback correctly another locale",
        "i18n Support production mode should load getStaticProps non-fallback correctly another locale via cookie",
        "i18n Support production mode should load getStaticProps page correctly SSR",
        "i18n Support production mode should load getStaticProps page correctly SSR (default locale no prefix)",
        "i18n Support production mode should navigate client side for default locale with no prefix",
        "i18n Support production mode should navigate through history with query correctly",
        "i18n Support production mode should navigate to another page and back correctly with locale",
        "i18n Support production mode should navigate to auto-export dynamic page",
        "i18n Support production mode should navigate to getStaticProps page and back correctly with locale",
        "i18n Support production mode should navigate to page with same name as development buildId",
        "i18n Support production mode should navigate with locale false correctly",
        "i18n Support production mode should navigate with locale false correctly GSP",
        "i18n Support production mode should navigate with locale prop correctly",
        "i18n Support production mode should navigate with locale prop correctly GSP",
        "i18n Support production mode should not add duplicate locale key when navigating back to root path with hash",
        "i18n Support production mode should not add duplicate locale key when navigating back to root path with query params",
        "i18n Support production mode should not contain backslashes in pages-manifest",
        "i18n Support production mode should not error with similar named cookie to locale cookie",
        "i18n Support production mode should not have hydration mis-match from hash",
        "i18n Support production mode should not output GSP pages that returned notFound",
        "i18n Support production mode should not redirect to accept-lang preferred locale with locale cookie",
        "i18n Support production mode should not remove locale prefix for default locale",
        "i18n Support production mode should not strip locale prefix for default locale with locale domains",
        "i18n Support production mode should output correct prerender-manifest",
        "i18n Support production mode should preload all locales data correctly",
        "i18n Support production mode should prerender with the correct href for locale domain",
        "i18n Support production mode should provide defaultLocale correctly for locale domain",
        "i18n Support production mode should redirect external domain correctly",
        "i18n Support production mode should redirect to correct locale domain",
        "i18n Support production mode should redirect to locale prefixed route for /",
        "i18n Support production mode should render 404 for blocking fallback page that returned 404",
        "i18n Support production mode should render 404 for blocking fallback page that returned 404 on client transition",
        "i18n Support production mode should render 404 for fallback page that returned 404",
        "i18n Support production mode should render 404 for fallback page that returned 404 on client transition",
        "i18n Support production mode should render the correct href with locale domains but not on a locale domain",
        "i18n Support production mode should resolve auto-export dynamic route correctly",
        "i18n Support production mode should resolve href correctly when dynamic route matches locale prefixed",
        "i18n Support production mode should rewrite to API route correctly for do locale",
        "i18n Support production mode should rewrite to API route correctly for do-BE locale",
        "i18n Support production mode should rewrite to API route correctly for en locale",
        "i18n Support production mode should rewrite to API route correctly for en-US locale",
        "i18n Support production mode should rewrite to API route correctly for fr locale",
        "i18n Support production mode should rewrite to API route correctly for fr-BE locale",
        "i18n Support production mode should rewrite to API route correctly for go locale",
        "i18n Support production mode should rewrite to API route correctly for go-BE locale",
        "i18n Support production mode should rewrite to API route correctly for nl locale",
        "i18n Support production mode should rewrite to API route correctly for nl-BE locale",
        "i18n Support production mode should rewrite to API route correctly for nl-NL locale",
        "i18n Support production mode should serve public file on locale domain",
        "i18n Support production mode should show proper error for duplicate defaultLocales",
        "i18n Support production mode should show proper error for duplicate locales",
        "i18n Support production mode should show proper error for invalid locale domain",
        "i18n Support production mode should transition on client properly for page that starts with locale",
        "i18n Support production mode should update asPath on the client correctly",
        "i18n Support production mode should use correct default locale for locale domains",
        "i18n Support production mode should use default locale for / without accept-language",
        "i18n Support production mode should use default locale when no locale is in href with locale false",
        "i18n Support production mode should visit API route directly correctly",
        "i18n Support production mode should visit dynamic API route directly correctly",
        "i18n Support production mode should work with AMP first page with all locales",
        "i18n Support with localeDetection disabled production mode should have localeDetection in routes-manifest",
        "i18n Support with localeDetection disabled production mode should ignore the invalid accept-language header",
        "i18n Support with localeDetection disabled production mode should not detect locale from accept-language",
        "i18n Support with localeDetection disabled production mode should set locale from detected path",
        "i18n Support with trailingSlash: false production mode should redirect correctly",
        "i18n Support with trailingSlash: true production mode should have correct locale domain hrefs",
        "i18n Support with trailingSlash: true production mode should navigate between pages correctly",
        "i18n Support with trailingSlash: true production mode should preload all locales data correctly",
        "i18n Support with trailingSlash: true production mode should redirect correctly",
        "i18n Support with trailingSlash: true production mode should return 404 error for repeating locales",
        "i18n Support with trailingSlash: true production mode should serve pages correctly with locale prefix"
      ],
      "failed": [],
      "pending": [
        "i18n Support development mode should 404 for GSP pages that returned notFound",
        "i18n Support development mode should 404 for GSP that returned notFound on client-transition",
        "i18n Support development mode should 404 for locale prefixed public folder files",
        "i18n Support development mode should 404 for locale prefixed static assets correctly",
        "i18n Support development mode should apply headers correctly",
        "i18n Support development mode should apply redirects correctly",
        "i18n Support development mode should apply rewrites correctly",
        "i18n Support development mode should apply trailingSlash redirect correctly",
        "i18n Support development mode should generate AMP pages with all locales",
        "i18n Support development mode should generate auto-export page with all locales",
        "i18n Support development mode should generate fallbacks with all locales",
        "i18n Support development mode should generate non-dynamic GSP page with all locales",
        "i18n Support development mode should handle locales with domain for domain example.com should handle locale do-BE",
        "i18n Support development mode should handle locales with domain for domain example.com should handle locale go-BE",
        "i18n Support development mode should handle locales with domain for domain example.do should handle locale do-BE",
        "i18n Support development mode should handle locales with domain for domain example.do should handle locale go-BE",
        "i18n Support development mode should handle navigating back to different casing of locale",
        "i18n Support development mode should have correct initial query values for fallback",
        "i18n Support development mode should have correct values for non-prefixed path",
        "i18n Support development mode should have domainLocales available on useRouter",
        "i18n Support development mode should load dynamic getServerSideProps page correctly SSR",
        "i18n Support development mode should load getServerSideProps page correctly SSR",
        "i18n Support development mode should load getServerSideProps page correctly SSR (default locale no prefix)",
        "i18n Support development mode should load getStaticProps fallback non-prerender page another locale correctly",
        "i18n Support development mode should load getStaticProps fallback non-prerender page correctly",
        "i18n Support development mode should load getStaticProps fallback non-prerender page correctly (default locale no prefix",
        "i18n Support development mode should load getStaticProps fallback prerender page correctly SSR",
        "i18n Support development mode should load getStaticProps fallback prerender page correctly SSR (default locale no prefix)",
        "i18n Support development mode should load getStaticProps non-fallback correctly",
        "i18n Support development mode should load getStaticProps non-fallback correctly another locale",
        "i18n Support development mode should load getStaticProps non-fallback correctly another locale via cookie",
        "i18n Support development mode should load getStaticProps page correctly SSR",
        "i18n Support development mode should load getStaticProps page correctly SSR (default locale no prefix)",
        "i18n Support development mode should navigate client side for default locale with no prefix",
        "i18n Support development mode should navigate through history with query correctly",
        "i18n Support development mode should navigate to another page and back correctly with locale",
        "i18n Support development mode should navigate to auto-export dynamic page",
        "i18n Support development mode should navigate to getStaticProps page and back correctly with locale",
        "i18n Support development mode should navigate to page with same name as development buildId",
        "i18n Support development mode should navigate with locale false correctly",
        "i18n Support development mode should navigate with locale false correctly GSP",
        "i18n Support development mode should navigate with locale prop correctly",
        "i18n Support development mode should navigate with locale prop correctly GSP",
        "i18n Support development mode should not add duplicate locale key when navigating back to root path with hash",
        "i18n Support development mode should not add duplicate locale key when navigating back to root path with query params",
        "i18n Support development mode should not error with similar named cookie to locale cookie",
        "i18n Support development mode should not have hydration mis-match from hash",
        "i18n Support development mode should not redirect to accept-lang preferred locale with locale cookie",
        "i18n Support development mode should not remove locale prefix for default locale",
        "i18n Support development mode should not strip locale prefix for default locale with locale domains",
        "i18n Support development mode should prerender with the correct href for locale domain",
        "i18n Support development mode should provide defaultLocale correctly for locale domain",
        "i18n Support development mode should redirect external domain correctly",
        "i18n Support development mode should redirect to correct locale domain",
        "i18n Support development mode should redirect to locale domain correctly client-side",
        "i18n Support development mode should redirect to locale prefixed route for /",
        "i18n Support development mode should render 404 for blocking fallback page that returned 404",
        "i18n Support development mode should render 404 for blocking fallback page that returned 404 on client transition",
        "i18n Support development mode should render 404 for fallback page that returned 404",
        "i18n Support development mode should render 404 for fallback page that returned 404 on client transition",
        "i18n Support development mode should render the correct href for locale domain",
        "i18n Support development mode should render the correct href with locale domains but not on a locale domain",
        "i18n Support development mode should resolve auto-export dynamic route correctly",
        "i18n Support development mode should resolve href correctly when dynamic route matches locale prefixed",
        "i18n Support development mode should rewrite to API route correctly for do locale",
        "i18n Support development mode should rewrite to API route correctly for do-BE locale",
        "i18n Support development mode should rewrite to API route correctly for en locale",
        "i18n Support development mode should rewrite to API route correctly for en-US locale",
        "i18n Support development mode should rewrite to API route correctly for fr locale",
        "i18n Support development mode should rewrite to API route correctly for fr-BE locale",
        "i18n Support development mode should rewrite to API route correctly for go locale",
        "i18n Support development mode should rewrite to API route correctly for go-BE locale",
        "i18n Support development mode should rewrite to API route correctly for nl locale",
        "i18n Support development mode should rewrite to API route correctly for nl-BE locale",
        "i18n Support development mode should rewrite to API route correctly for nl-NL locale",
        "i18n Support development mode should serve public file on locale domain",
        "i18n Support development mode should show error for redirect and notFound returned at same time",
        "i18n Support development mode should transition on client properly for page that starts with locale",
        "i18n Support development mode should update asPath on the client correctly",
        "i18n Support development mode should use correct default locale for locale domains",
        "i18n Support development mode should use default locale for / without accept-language",
        "i18n Support development mode should use default locale when no locale is in href with locale false",
        "i18n Support development mode should visit API route directly correctly",
        "i18n Support development mode should visit dynamic API route directly correctly",
        "i18n Support development mode should work with AMP first page with all locales",
        "i18n Support production mode should redirect to locale domain correctly client-side",
        "i18n Support production mode should render the correct href for locale domain",
        "i18n Support with trailingSlash: false development mode should redirect correctly",
        "i18n Support with trailingSlash: true development mode should navigate between pages correctly",
        "i18n Support with trailingSlash: true development mode should redirect correctly",
        "i18n Support with trailingSlash: true development mode should return 404 error for repeating locales",
        "i18n Support with trailingSlash: true development mode should serve pages correctly with locale prefix"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/image-generation/test/index.test.ts": {
      "passed": [
        "Image Generation production mode should generate the image without errors"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/image-optimizer/test/content-disposition-type.test.ts": {
      "passed": [
        "with contentDispositionType inline dev support with next.config.js recursive url is not allowed should fail with absolute next image url",
        "with contentDispositionType inline dev support with next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with contentDispositionType inline dev support with next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with contentDispositionType inline dev support with next.config.js recursive url is not allowed should fail with relative next image url",
        "with contentDispositionType inline dev support with next.config.js should automatically detect image type when content-type is octet-stream",
        "with contentDispositionType inline dev support with next.config.js should compress avif smaller than webp at q=100",
        "with contentDispositionType inline dev support with next.config.js should compress avif smaller than webp at q=50",
        "with contentDispositionType inline dev support with next.config.js should compress avif smaller than webp at q=75",
        "with contentDispositionType inline dev support with next.config.js should downlevel avif format to jpeg for old Safari",
        "with contentDispositionType inline dev support with next.config.js should downlevel webp format to jpeg for old Safari",
        "with contentDispositionType inline dev support with next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with contentDispositionType inline dev support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with contentDispositionType inline dev support with next.config.js should error if the image file does not exist",
        "with contentDispositionType inline dev support with next.config.js should error if the resource isn't a valid image",
        "with contentDispositionType inline dev support with next.config.js should fail when domain is not defined in next.config.js",
        "with contentDispositionType inline dev support with next.config.js should fail when internal url is not an image",
        "with contentDispositionType inline dev support with next.config.js should fail when q is greater than 100",
        "with contentDispositionType inline dev support with next.config.js should fail when q is less than 1",
        "with contentDispositionType inline dev support with next.config.js should fail when q is missing",
        "with contentDispositionType inline dev support with next.config.js should fail when q is not a number",
        "with contentDispositionType inline dev support with next.config.js should fail when q is not an integer",
        "with contentDispositionType inline dev support with next.config.js should fail when url fails to load an image",
        "with contentDispositionType inline dev support with next.config.js should fail when url has file protocol",
        "with contentDispositionType inline dev support with next.config.js should fail when url has ftp protocol",
        "with contentDispositionType inline dev support with next.config.js should fail when url is missing",
        "with contentDispositionType inline dev support with next.config.js should fail when url is protocol relative",
        "with contentDispositionType inline dev support with next.config.js should fail when url is too long",
        "with contentDispositionType inline dev support with next.config.js should fail when w is 0",
        "with contentDispositionType inline dev support with next.config.js should fail when w is less than 0",
        "with contentDispositionType inline dev support with next.config.js should fail when w is missing",
        "with contentDispositionType inline dev support with next.config.js should fail when w is not a number",
        "with contentDispositionType inline dev support with next.config.js should fail when w is not an integer",
        "with contentDispositionType inline dev support with next.config.js should fail when width is not in next.config.js",
        "with contentDispositionType inline dev support with next.config.js should handle concurrent requests",
        "with contentDispositionType inline dev support with next.config.js should handle non-ascii characters in image url",
        "with contentDispositionType inline dev support with next.config.js should maintain animated gif",
        "with contentDispositionType inline dev support with next.config.js should maintain animated png",
        "with contentDispositionType inline dev support with next.config.js should maintain animated png 2",
        "with contentDispositionType inline dev support with next.config.js should maintain animated webp",
        "with contentDispositionType inline dev support with next.config.js should maintain bmp",
        "with contentDispositionType inline dev support with next.config.js should maintain icns",
        "with contentDispositionType inline dev support with next.config.js should maintain ico format",
        "with contentDispositionType inline dev support with next.config.js should maintain jpg format for old Safari",
        "with contentDispositionType inline dev support with next.config.js should maintain pic/pct",
        "with contentDispositionType inline dev support with next.config.js should maintain png format for old Safari",
        "with contentDispositionType inline dev support with next.config.js should normalize invalid status codes",
        "with contentDispositionType inline dev support with next.config.js should not allow svg with application header",
        "with contentDispositionType inline dev support with next.config.js should not allow svg with comma header",
        "with contentDispositionType inline dev support with next.config.js should not allow svg with uppercase header",
        "with contentDispositionType inline dev support with next.config.js should not allow svg with wrong header",
        "with contentDispositionType inline dev support with next.config.js should not allow vector svg",
        "with contentDispositionType inline dev support with next.config.js should not resize if requested width is larger than original source image",
        "with contentDispositionType inline dev support with next.config.js should resize absolute url from localhost",
        "with contentDispositionType inline dev support with next.config.js should resize avif",
        "with contentDispositionType inline dev support with next.config.js should resize avif and maintain format",
        "with contentDispositionType inline dev support with next.config.js should resize gif (not animated)",
        "with contentDispositionType inline dev support with next.config.js should resize relative url and new Chrome accept header as avif",
        "with contentDispositionType inline dev support with next.config.js should resize relative url and old Chrome accept header as webp",
        "with contentDispositionType inline dev support with next.config.js should resize relative url and png accept header",
        "with contentDispositionType inline dev support with next.config.js should resize relative url and webp Firefox accept header",
        "with contentDispositionType inline dev support with next.config.js should resize relative url with invalid accept header as gif",
        "with contentDispositionType inline dev support with next.config.js should resize relative url with invalid accept header as png",
        "with contentDispositionType inline dev support with next.config.js should resize relative url with invalid accept header as tiff",
        "with contentDispositionType inline dev support with next.config.js should resize tiff",
        "with contentDispositionType inline dev support with next.config.js should return home page",
        "with contentDispositionType inline dev support with next.config.js should set 304 status without body when etag matches if-none-match",
        "with contentDispositionType inline dev support with next.config.js should set cache-control to immutable for static images",
        "with contentDispositionType inline dev support with next.config.js should timeout for upstream image exceeding 7 seconds",
        "with contentDispositionType inline dev support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
        "with contentDispositionType inline dev support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with contentDispositionType inline dev support with next.config.js should use cached image file when parameters are the same for animated gif"
      ],
      "failed": [],
      "pending": [
        "with contentDispositionType inline Production Mode Server support with next.config.js recursive url is not allowed should fail with absolute next image url",
        "with contentDispositionType inline Production Mode Server support with next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with contentDispositionType inline Production Mode Server support with next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with contentDispositionType inline Production Mode Server support with next.config.js recursive url is not allowed should fail with relative next image url",
        "with contentDispositionType inline Production Mode Server support with next.config.js should automatically detect image type when content-type is octet-stream",
        "with contentDispositionType inline Production Mode Server support with next.config.js should compress avif smaller than webp at q=100",
        "with contentDispositionType inline Production Mode Server support with next.config.js should compress avif smaller than webp at q=50",
        "with contentDispositionType inline Production Mode Server support with next.config.js should compress avif smaller than webp at q=75",
        "with contentDispositionType inline Production Mode Server support with next.config.js should downlevel avif format to jpeg for old Safari",
        "with contentDispositionType inline Production Mode Server support with next.config.js should downlevel webp format to jpeg for old Safari",
        "with contentDispositionType inline Production Mode Server support with next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with contentDispositionType inline Production Mode Server support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with contentDispositionType inline Production Mode Server support with next.config.js should error if the image file does not exist",
        "with contentDispositionType inline Production Mode Server support with next.config.js should error if the resource isn't a valid image",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when domain is not defined in next.config.js",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when internal url is not an image",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when q is greater than 100",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when q is less than 1",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when q is missing",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when q is not a number",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when q is not an integer",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when url fails to load an image",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when url has file protocol",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when url has ftp protocol",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when url is missing",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when url is protocol relative",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when url is too long",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when w is 0",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when w is less than 0",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when w is missing",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when w is not a number",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when w is not an integer",
        "with contentDispositionType inline Production Mode Server support with next.config.js should fail when width is not in next.config.js",
        "with contentDispositionType inline Production Mode Server support with next.config.js should handle concurrent requests",
        "with contentDispositionType inline Production Mode Server support with next.config.js should handle non-ascii characters in image url",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain animated gif",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain animated png",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain animated png 2",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain animated webp",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain bmp",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain icns",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain ico format",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain jpg format for old Safari",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain pic/pct",
        "with contentDispositionType inline Production Mode Server support with next.config.js should maintain png format for old Safari",
        "with contentDispositionType inline Production Mode Server support with next.config.js should normalize invalid status codes",
        "with contentDispositionType inline Production Mode Server support with next.config.js should not allow svg with application header",
        "with contentDispositionType inline Production Mode Server support with next.config.js should not allow svg with comma header",
        "with contentDispositionType inline Production Mode Server support with next.config.js should not allow svg with uppercase header",
        "with contentDispositionType inline Production Mode Server support with next.config.js should not allow svg with wrong header",
        "with contentDispositionType inline Production Mode Server support with next.config.js should not allow vector svg",
        "with contentDispositionType inline Production Mode Server support with next.config.js should not resize if requested width is larger than original source image",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize absolute url from localhost",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize avif",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize avif and maintain format",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize gif (not animated)",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize relative url and new Chrome accept header as avif",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize relative url and old Chrome accept header as webp",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize relative url and png accept header",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize relative url and webp Firefox accept header",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize relative url with invalid accept header as gif",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize relative url with invalid accept header as png",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize relative url with invalid accept header as tiff",
        "with contentDispositionType inline Production Mode Server support with next.config.js should resize tiff",
        "with contentDispositionType inline Production Mode Server support with next.config.js should return home page",
        "with contentDispositionType inline Production Mode Server support with next.config.js should set 304 status without body when etag matches if-none-match",
        "with contentDispositionType inline Production Mode Server support with next.config.js should set cache-control to immutable for static images",
        "with contentDispositionType inline Production Mode Server support with next.config.js should timeout for upstream image exceeding 7 seconds",
        "with contentDispositionType inline Production Mode Server support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
        "with contentDispositionType inline Production Mode Server support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with contentDispositionType inline Production Mode Server support with next.config.js should use cached image file when parameters are the same for animated gif"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/image-optimizer/test/dangerously-allow-svg.test.ts": {
      "passed": [
        "with dangerouslyAllowSVG config dev support with next.config.js recursive url is not allowed should fail with absolute next image url",
        "with dangerouslyAllowSVG config dev support with next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with dangerouslyAllowSVG config dev support with next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with dangerouslyAllowSVG config dev support with next.config.js recursive url is not allowed should fail with relative next image url",
        "with dangerouslyAllowSVG config dev support with next.config.js should automatically detect image type when content-type is octet-stream",
        "with dangerouslyAllowSVG config dev support with next.config.js should compress avif smaller than webp at q=100",
        "with dangerouslyAllowSVG config dev support with next.config.js should compress avif smaller than webp at q=50",
        "with dangerouslyAllowSVG config dev support with next.config.js should compress avif smaller than webp at q=75",
        "with dangerouslyAllowSVG config dev support with next.config.js should downlevel avif format to jpeg for old Safari",
        "with dangerouslyAllowSVG config dev support with next.config.js should downlevel webp format to jpeg for old Safari",
        "with dangerouslyAllowSVG config dev support with next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with dangerouslyAllowSVG config dev support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with dangerouslyAllowSVG config dev support with next.config.js should error if the image file does not exist",
        "with dangerouslyAllowSVG config dev support with next.config.js should error if the resource isn't a valid image",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when domain is not defined in next.config.js",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when internal url is not an image",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when q is greater than 100",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when q is less than 1",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when q is missing",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when q is not a number",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when q is not an integer",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when url fails to load an image",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when url has file protocol",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when url has ftp protocol",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when url is missing",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when url is protocol relative",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when url is too long",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when w is 0",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when w is less than 0",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when w is missing",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when w is not a number",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when w is not an integer",
        "with dangerouslyAllowSVG config dev support with next.config.js should fail when width is not in next.config.js",
        "with dangerouslyAllowSVG config dev support with next.config.js should handle concurrent requests",
        "with dangerouslyAllowSVG config dev support with next.config.js should handle non-ascii characters in image url",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain animated gif",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain animated png",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain animated png 2",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain animated webp",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain bmp",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain icns",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain ico format",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain jpg format for old Safari",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain pic/pct",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain png format for old Safari",
        "with dangerouslyAllowSVG config dev support with next.config.js should maintain vector svg",
        "with dangerouslyAllowSVG config dev support with next.config.js should normalize invalid status codes",
        "with dangerouslyAllowSVG config dev support with next.config.js should not resize if requested width is larger than original source image",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize absolute url from localhost",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize avif",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize avif and maintain format",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize gif (not animated)",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize relative url and new Chrome accept header as avif",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize relative url and old Chrome accept header as webp",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize relative url and png accept header",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize relative url and webp Firefox accept header",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize relative url with invalid accept header as gif",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize relative url with invalid accept header as png",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize relative url with invalid accept header as tiff",
        "with dangerouslyAllowSVG config dev support with next.config.js should resize tiff",
        "with dangerouslyAllowSVG config dev support with next.config.js should return home page",
        "with dangerouslyAllowSVG config dev support with next.config.js should set 304 status without body when etag matches if-none-match",
        "with dangerouslyAllowSVG config dev support with next.config.js should set cache-control to immutable for static images",
        "with dangerouslyAllowSVG config dev support with next.config.js should timeout for upstream image exceeding 7 seconds",
        "with dangerouslyAllowSVG config dev support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
        "with dangerouslyAllowSVG config dev support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with dangerouslyAllowSVG config dev support with next.config.js should use cached image file when parameters are the same for animated gif",
        "with dangerouslyAllowSVG config dev support with next.config.js should use cached image file when parameters are the same for svg"
      ],
      "failed": [],
      "pending": [
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js recursive url is not allowed should fail with absolute next image url",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js recursive url is not allowed should fail with relative next image url",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should automatically detect image type when content-type is octet-stream",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should compress avif smaller than webp at q=100",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should compress avif smaller than webp at q=50",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should compress avif smaller than webp at q=75",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should downlevel avif format to jpeg for old Safari",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should downlevel webp format to jpeg for old Safari",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should error if the image file does not exist",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should error if the resource isn't a valid image",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when domain is not defined in next.config.js",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when internal url is not an image",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when q is greater than 100",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when q is less than 1",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when q is missing",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when q is not a number",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when q is not an integer",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when url fails to load an image",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when url has file protocol",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when url has ftp protocol",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when url is missing",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when url is protocol relative",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when url is too long",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when w is 0",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when w is less than 0",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when w is missing",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when w is not a number",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when w is not an integer",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should fail when width is not in next.config.js",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should handle concurrent requests",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should handle non-ascii characters in image url",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain animated gif",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain animated png",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain animated png 2",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain animated webp",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain bmp",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain icns",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain ico format",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain jpg format for old Safari",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain pic/pct",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain png format for old Safari",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should maintain vector svg",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should normalize invalid status codes",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should not resize if requested width is larger than original source image",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize absolute url from localhost",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize avif",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize avif and maintain format",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize gif (not animated)",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize relative url and new Chrome accept header as avif",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize relative url and old Chrome accept header as webp",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize relative url and png accept header",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize relative url and webp Firefox accept header",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize relative url with invalid accept header as gif",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize relative url with invalid accept header as png",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize relative url with invalid accept header as tiff",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should resize tiff",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should return home page",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should set 304 status without body when etag matches if-none-match",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should set cache-control to immutable for static images",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should timeout for upstream image exceeding 7 seconds",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should use cached image file when parameters are the same for animated gif",
        "with dangerouslyAllowSVG config Production Mode Server support with next.config.js should use cached image file when parameters are the same for svg"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/image-optimizer/test/index.test.ts": {
      "passed": [
        "Image Optimizer External rewrite support with for serving static content in images production mode should return response when image is served from an external rewrite",
        "Image Optimizer Server support for headers in next.config.js production mode should not set max-age header when not matching next.config.js",
        "Image Optimizer Server support for headers in next.config.js production mode should set max-age header",
        "Image Optimizer Server support for trailingSlash in next.config.js should return successful response for original loader",
        "Image Optimizer config checks should error when assetPrefix is provided but is invalid",
        "Image Optimizer config checks should error when deviceSizes contains invalid widths",
        "Image Optimizer config checks should error when domains length exceeds 50",
        "Image Optimizer config checks should error when imageSizes contains invalid widths",
        "Image Optimizer config checks should error when images.contentDispositionType is not valid",
        "Image Optimizer config checks should error when images.contentSecurityPolicy is not a string",
        "Image Optimizer config checks should error when images.dangerouslyAllowSVG is not a boolean",
        "Image Optimizer config checks should error when images.formats contains invalid values",
        "Image Optimizer config checks should error when images.loader and images.loaderFile are both assigned",
        "Image Optimizer config checks should error when images.loader is assigned but images.path is not",
        "Image Optimizer config checks should error when images.loaderFile does not exist",
        "Image Optimizer config checks should error when images.minimumCacheTTL is not valid",
        "Image Optimizer config checks should error when images.remotePatterns is invalid",
        "Image Optimizer config checks should error when images.unoptimized is not a boolean",
        "Image Optimizer config checks should error when loader contains invalid value",
        "Image Optimizer config checks should error when remotePatterns has invalid prop",
        "Image Optimizer config checks should error when remotePatterns is missing hostname",
        "Image Optimizer config checks should error when remotePatterns length exceeds 50",
        "Image Optimizer config checks should error when sizes length exceeds 25",
        "Image Optimizer dev support for dynamic blur placeholder should support width 8 per BLUR_IMG_SIZE with next dev",
        "Image Optimizer dev support next.config.js cloudinary loader should 404 when loader is not default",
        "Image Optimizer images.unoptimized in next.config.js should 404 when unoptimized"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/image-optimizer/test/minimum-cache-ttl.test.ts": {
      "passed": [
        "with minimumCacheTTL of 5 sec dev support with next.config.js recursive url is not allowed should fail with absolute next image url",
        "with minimumCacheTTL of 5 sec dev support with next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with minimumCacheTTL of 5 sec dev support with next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with minimumCacheTTL of 5 sec dev support with next.config.js recursive url is not allowed should fail with relative next image url",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should automatically detect image type when content-type is octet-stream",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should compress avif smaller than webp at q=100",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should compress avif smaller than webp at q=50",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should compress avif smaller than webp at q=75",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should downlevel avif format to jpeg for old Safari",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should downlevel webp format to jpeg for old Safari",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should error if the image file does not exist",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should error if the resource isn't a valid image",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when domain is not defined in next.config.js",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when internal url is not an image",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when q is greater than 100",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when q is less than 1",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when q is missing",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when q is not a number",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when q is not an integer",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url fails to load an image",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url has file protocol",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url has ftp protocol",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url is missing",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url is protocol relative",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when url is too long",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when w is 0",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when w is less than 0",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when w is missing",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when w is not a number",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when w is not an integer",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should fail when width is not in next.config.js",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should handle concurrent requests",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should handle non-ascii characters in image url",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain animated gif",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain animated png",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain animated png 2",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain animated webp",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain bmp",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain icns",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain ico format",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain jpg format for old Safari",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain pic/pct",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should maintain png format for old Safari",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should normalize invalid status codes",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should not allow svg with application header",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should not allow svg with comma header",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should not allow svg with uppercase header",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should not allow svg with wrong header",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should not allow vector svg",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should not resize if requested width is larger than original source image",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize absolute url from localhost",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize avif",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize avif and maintain format",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize gif (not animated)",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url and new Chrome accept header as avif",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url and old Chrome accept header as webp",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url and png accept header",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url and webp Firefox accept header",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url with invalid accept header as gif",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url with invalid accept header as png",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize relative url with invalid accept header as tiff",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should resize tiff",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should return home page",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should set 304 status without body when etag matches if-none-match",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should set cache-control to immutable for static images",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should timeout for upstream image exceeding 7 seconds",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with minimumCacheTTL of 5 sec dev support with next.config.js should use cached image file when parameters are the same for animated gif"
      ],
      "failed": [],
      "pending": [
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js recursive url is not allowed should fail with absolute next image url",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js recursive url is not allowed should fail with relative next image url",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should automatically detect image type when content-type is octet-stream",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should compress avif smaller than webp at q=100",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should compress avif smaller than webp at q=50",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should compress avif smaller than webp at q=75",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should downlevel avif format to jpeg for old Safari",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should downlevel webp format to jpeg for old Safari",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should error if the image file does not exist",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should error if the resource isn't a valid image",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when domain is not defined in next.config.js",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when internal url is not an image",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when q is greater than 100",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when q is less than 1",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when q is missing",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when q is not a number",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when q is not an integer",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when url fails to load an image",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when url has file protocol",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when url has ftp protocol",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when url is missing",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when url is protocol relative",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when url is too long",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when w is 0",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when w is less than 0",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when w is missing",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when w is not a number",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when w is not an integer",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should fail when width is not in next.config.js",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should handle concurrent requests",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should handle non-ascii characters in image url",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain animated gif",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain animated png",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain animated png 2",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain animated webp",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain bmp",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain icns",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain ico format",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain jpg format for old Safari",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain pic/pct",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should maintain png format for old Safari",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should normalize invalid status codes",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should not allow svg with application header",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should not allow svg with comma header",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should not allow svg with uppercase header",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should not allow svg with wrong header",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should not allow vector svg",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should not resize if requested width is larger than original source image",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize absolute url from localhost",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize avif",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize avif and maintain format",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize gif (not animated)",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize relative url and new Chrome accept header as avif",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize relative url and old Chrome accept header as webp",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize relative url and png accept header",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize relative url and webp Firefox accept header",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize relative url with invalid accept header as gif",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize relative url with invalid accept header as png",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize relative url with invalid accept header as tiff",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should resize tiff",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should return home page",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should set 304 status without body when etag matches if-none-match",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should set cache-control to immutable for static images",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should timeout for upstream image exceeding 7 seconds",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with minimumCacheTTL of 5 sec Production Mode Server support with next.config.js should use cached image file when parameters are the same for animated gif"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/image-optimizer/test/sharp.test.ts": {
      "passed": [
        "with latest sharp dev support w/o next.config.js recursive url is not allowed should fail with absolute next image url",
        "with latest sharp dev support w/o next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with latest sharp dev support w/o next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with latest sharp dev support w/o next.config.js recursive url is not allowed should fail with relative next image url",
        "with latest sharp dev support w/o next.config.js should downlevel avif format to jpeg for old Safari",
        "with latest sharp dev support w/o next.config.js should downlevel webp format to jpeg for old Safari",
        "with latest sharp dev support w/o next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with latest sharp dev support w/o next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with latest sharp dev support w/o next.config.js should error if the image file does not exist",
        "with latest sharp dev support w/o next.config.js should error if the resource isn't a valid image",
        "with latest sharp dev support w/o next.config.js should fail when domain is not defined in next.config.js",
        "with latest sharp dev support w/o next.config.js should fail when internal url is not an image",
        "with latest sharp dev support w/o next.config.js should fail when q is greater than 100",
        "with latest sharp dev support w/o next.config.js should fail when q is less than 1",
        "with latest sharp dev support w/o next.config.js should fail when q is missing",
        "with latest sharp dev support w/o next.config.js should fail when q is not a number",
        "with latest sharp dev support w/o next.config.js should fail when q is not an integer",
        "with latest sharp dev support w/o next.config.js should fail when url has file protocol",
        "with latest sharp dev support w/o next.config.js should fail when url has ftp protocol",
        "with latest sharp dev support w/o next.config.js should fail when url is missing",
        "with latest sharp dev support w/o next.config.js should fail when url is protocol relative",
        "with latest sharp dev support w/o next.config.js should fail when url is too long",
        "with latest sharp dev support w/o next.config.js should fail when w is 0",
        "with latest sharp dev support w/o next.config.js should fail when w is less than 0",
        "with latest sharp dev support w/o next.config.js should fail when w is missing",
        "with latest sharp dev support w/o next.config.js should fail when w is not a number",
        "with latest sharp dev support w/o next.config.js should fail when w is not an integer",
        "with latest sharp dev support w/o next.config.js should fail when width is not in next.config.js",
        "with latest sharp dev support w/o next.config.js should handle non-ascii characters in image url",
        "with latest sharp dev support w/o next.config.js should maintain animated gif",
        "with latest sharp dev support w/o next.config.js should maintain animated png",
        "with latest sharp dev support w/o next.config.js should maintain animated png 2",
        "with latest sharp dev support w/o next.config.js should maintain animated webp",
        "with latest sharp dev support w/o next.config.js should maintain bmp",
        "with latest sharp dev support w/o next.config.js should maintain icns",
        "with latest sharp dev support w/o next.config.js should maintain ico format",
        "with latest sharp dev support w/o next.config.js should maintain jpg format for old Safari",
        "with latest sharp dev support w/o next.config.js should maintain pic/pct",
        "with latest sharp dev support w/o next.config.js should maintain png format for old Safari",
        "with latest sharp dev support w/o next.config.js should not allow svg with application header",
        "with latest sharp dev support w/o next.config.js should not allow svg with comma header",
        "with latest sharp dev support w/o next.config.js should not allow svg with uppercase header",
        "with latest sharp dev support w/o next.config.js should not allow svg with wrong header",
        "with latest sharp dev support w/o next.config.js should not allow vector svg",
        "with latest sharp dev support w/o next.config.js should not resize if requested width is larger than original source image",
        "with latest sharp dev support w/o next.config.js should resize avif",
        "with latest sharp dev support w/o next.config.js should resize gif (not animated)",
        "with latest sharp dev support w/o next.config.js should resize relative url and old Chrome accept header as webp",
        "with latest sharp dev support w/o next.config.js should resize relative url and png accept header",
        "with latest sharp dev support w/o next.config.js should resize relative url and webp Firefox accept header",
        "with latest sharp dev support w/o next.config.js should resize relative url with invalid accept header as gif",
        "with latest sharp dev support w/o next.config.js should resize relative url with invalid accept header as png",
        "with latest sharp dev support w/o next.config.js should resize relative url with invalid accept header as tiff",
        "with latest sharp dev support w/o next.config.js should resize tiff",
        "with latest sharp dev support w/o next.config.js should return home page",
        "with latest sharp dev support w/o next.config.js should set 304 status without body when etag matches if-none-match",
        "with latest sharp dev support w/o next.config.js should set cache-control to immutable for static images",
        "with latest sharp dev support w/o next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with latest sharp dev support w/o next.config.js should use cached image file when parameters are the same for animated gif",
        "with latest sharp dev support with next.config.js recursive url is not allowed should fail with absolute next image url",
        "with latest sharp dev support with next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with latest sharp dev support with next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with latest sharp dev support with next.config.js recursive url is not allowed should fail with relative next image url",
        "with latest sharp dev support with next.config.js should automatically detect image type when content-type is octet-stream",
        "with latest sharp dev support with next.config.js should compress avif smaller than webp at q=100",
        "with latest sharp dev support with next.config.js should compress avif smaller than webp at q=50",
        "with latest sharp dev support with next.config.js should compress avif smaller than webp at q=75",
        "with latest sharp dev support with next.config.js should downlevel avif format to jpeg for old Safari",
        "with latest sharp dev support with next.config.js should downlevel webp format to jpeg for old Safari",
        "with latest sharp dev support with next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with latest sharp dev support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with latest sharp dev support with next.config.js should error if the image file does not exist",
        "with latest sharp dev support with next.config.js should error if the resource isn't a valid image",
        "with latest sharp dev support with next.config.js should fail when domain is not defined in next.config.js",
        "with latest sharp dev support with next.config.js should fail when internal url is not an image",
        "with latest sharp dev support with next.config.js should fail when q is greater than 100",
        "with latest sharp dev support with next.config.js should fail when q is less than 1",
        "with latest sharp dev support with next.config.js should fail when q is missing",
        "with latest sharp dev support with next.config.js should fail when q is not a number",
        "with latest sharp dev support with next.config.js should fail when q is not an integer",
        "with latest sharp dev support with next.config.js should fail when url fails to load an image",
        "with latest sharp dev support with next.config.js should fail when url has file protocol",
        "with latest sharp dev support with next.config.js should fail when url has ftp protocol",
        "with latest sharp dev support with next.config.js should fail when url is missing",
        "with latest sharp dev support with next.config.js should fail when url is protocol relative",
        "with latest sharp dev support with next.config.js should fail when url is too long",
        "with latest sharp dev support with next.config.js should fail when w is 0",
        "with latest sharp dev support with next.config.js should fail when w is less than 0",
        "with latest sharp dev support with next.config.js should fail when w is missing",
        "with latest sharp dev support with next.config.js should fail when w is not a number",
        "with latest sharp dev support with next.config.js should fail when w is not an integer",
        "with latest sharp dev support with next.config.js should fail when width is not in next.config.js",
        "with latest sharp dev support with next.config.js should handle concurrent requests",
        "with latest sharp dev support with next.config.js should handle non-ascii characters in image url",
        "with latest sharp dev support with next.config.js should maintain animated gif",
        "with latest sharp dev support with next.config.js should maintain animated png",
        "with latest sharp dev support with next.config.js should maintain animated png 2",
        "with latest sharp dev support with next.config.js should maintain animated webp",
        "with latest sharp dev support with next.config.js should maintain bmp",
        "with latest sharp dev support with next.config.js should maintain icns",
        "with latest sharp dev support with next.config.js should maintain ico format",
        "with latest sharp dev support with next.config.js should maintain jpg format for old Safari",
        "with latest sharp dev support with next.config.js should maintain pic/pct",
        "with latest sharp dev support with next.config.js should maintain png format for old Safari",
        "with latest sharp dev support with next.config.js should normalize invalid status codes",
        "with latest sharp dev support with next.config.js should not allow svg with application header",
        "with latest sharp dev support with next.config.js should not allow svg with comma header",
        "with latest sharp dev support with next.config.js should not allow svg with uppercase header",
        "with latest sharp dev support with next.config.js should not allow svg with wrong header",
        "with latest sharp dev support with next.config.js should not allow vector svg",
        "with latest sharp dev support with next.config.js should not resize if requested width is larger than original source image",
        "with latest sharp dev support with next.config.js should resize absolute url from localhost",
        "with latest sharp dev support with next.config.js should resize avif",
        "with latest sharp dev support with next.config.js should resize avif and maintain format",
        "with latest sharp dev support with next.config.js should resize gif (not animated)",
        "with latest sharp dev support with next.config.js should resize relative url and new Chrome accept header as avif",
        "with latest sharp dev support with next.config.js should resize relative url and old Chrome accept header as webp",
        "with latest sharp dev support with next.config.js should resize relative url and png accept header",
        "with latest sharp dev support with next.config.js should resize relative url and webp Firefox accept header",
        "with latest sharp dev support with next.config.js should resize relative url with invalid accept header as gif",
        "with latest sharp dev support with next.config.js should resize relative url with invalid accept header as png",
        "with latest sharp dev support with next.config.js should resize relative url with invalid accept header as tiff",
        "with latest sharp dev support with next.config.js should resize tiff",
        "with latest sharp dev support with next.config.js should return home page",
        "with latest sharp dev support with next.config.js should set 304 status without body when etag matches if-none-match",
        "with latest sharp dev support with next.config.js should set cache-control to immutable for static images",
        "with latest sharp dev support with next.config.js should timeout for upstream image exceeding 7 seconds",
        "with latest sharp dev support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
        "with latest sharp dev support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with latest sharp dev support with next.config.js should use cached image file when parameters are the same for animated gif"
      ],
      "failed": [],
      "pending": [
        "with latest sharp Production Mode Server support w/o next.config.js recursive url is not allowed should fail with absolute next image url",
        "with latest sharp Production Mode Server support w/o next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with latest sharp Production Mode Server support w/o next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with latest sharp Production Mode Server support w/o next.config.js recursive url is not allowed should fail with relative next image url",
        "with latest sharp Production Mode Server support w/o next.config.js should downlevel avif format to jpeg for old Safari",
        "with latest sharp Production Mode Server support w/o next.config.js should downlevel webp format to jpeg for old Safari",
        "with latest sharp Production Mode Server support w/o next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with latest sharp Production Mode Server support w/o next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with latest sharp Production Mode Server support w/o next.config.js should error if the image file does not exist",
        "with latest sharp Production Mode Server support w/o next.config.js should error if the resource isn't a valid image",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when domain is not defined in next.config.js",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when internal url is not an image",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when q is greater than 100",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when q is less than 1",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when q is missing",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when q is not a number",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when q is not an integer",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when url has file protocol",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when url has ftp protocol",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when url is missing",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when url is protocol relative",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when url is too long",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when w is 0",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when w is less than 0",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when w is missing",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when w is not a number",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when w is not an integer",
        "with latest sharp Production Mode Server support w/o next.config.js should fail when width is not in next.config.js",
        "with latest sharp Production Mode Server support w/o next.config.js should handle non-ascii characters in image url",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain animated gif",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain animated png",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain animated png 2",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain animated webp",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain bmp",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain icns",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain ico format",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain jpg format for old Safari",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain pic/pct",
        "with latest sharp Production Mode Server support w/o next.config.js should maintain png format for old Safari",
        "with latest sharp Production Mode Server support w/o next.config.js should not allow svg with application header",
        "with latest sharp Production Mode Server support w/o next.config.js should not allow svg with comma header",
        "with latest sharp Production Mode Server support w/o next.config.js should not allow svg with uppercase header",
        "with latest sharp Production Mode Server support w/o next.config.js should not allow svg with wrong header",
        "with latest sharp Production Mode Server support w/o next.config.js should not allow vector svg",
        "with latest sharp Production Mode Server support w/o next.config.js should not resize if requested width is larger than original source image",
        "with latest sharp Production Mode Server support w/o next.config.js should resize avif",
        "with latest sharp Production Mode Server support w/o next.config.js should resize gif (not animated)",
        "with latest sharp Production Mode Server support w/o next.config.js should resize relative url and old Chrome accept header as webp",
        "with latest sharp Production Mode Server support w/o next.config.js should resize relative url and png accept header",
        "with latest sharp Production Mode Server support w/o next.config.js should resize relative url and webp Firefox accept header",
        "with latest sharp Production Mode Server support w/o next.config.js should resize relative url with invalid accept header as gif",
        "with latest sharp Production Mode Server support w/o next.config.js should resize relative url with invalid accept header as png",
        "with latest sharp Production Mode Server support w/o next.config.js should resize relative url with invalid accept header as tiff",
        "with latest sharp Production Mode Server support w/o next.config.js should resize tiff",
        "with latest sharp Production Mode Server support w/o next.config.js should return home page",
        "with latest sharp Production Mode Server support w/o next.config.js should set 304 status without body when etag matches if-none-match",
        "with latest sharp Production Mode Server support w/o next.config.js should set cache-control to immutable for static images",
        "with latest sharp Production Mode Server support w/o next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with latest sharp Production Mode Server support w/o next.config.js should use cached image file when parameters are the same for animated gif",
        "with latest sharp Production Mode Server support with next.config.js recursive url is not allowed should fail with absolute next image url",
        "with latest sharp Production Mode Server support with next.config.js recursive url is not allowed should fail with encoded relative image url",
        "with latest sharp Production Mode Server support with next.config.js recursive url is not allowed should fail with relative image url with assetPrefix",
        "with latest sharp Production Mode Server support with next.config.js recursive url is not allowed should fail with relative next image url",
        "with latest sharp Production Mode Server support with next.config.js should automatically detect image type when content-type is octet-stream",
        "with latest sharp Production Mode Server support with next.config.js should compress avif smaller than webp at q=100",
        "with latest sharp Production Mode Server support with next.config.js should compress avif smaller than webp at q=50",
        "with latest sharp Production Mode Server support with next.config.js should compress avif smaller than webp at q=75",
        "with latest sharp Production Mode Server support with next.config.js should downlevel avif format to jpeg for old Safari",
        "with latest sharp Production Mode Server support with next.config.js should downlevel webp format to jpeg for old Safari",
        "with latest sharp Production Mode Server support with next.config.js should emit blur svg when width is 8 in dev but not prod",
        "with latest sharp Production Mode Server support with next.config.js should emit blur svg when width is less than 8 in dev but not prod",
        "with latest sharp Production Mode Server support with next.config.js should error if the image file does not exist",
        "with latest sharp Production Mode Server support with next.config.js should error if the resource isn't a valid image",
        "with latest sharp Production Mode Server support with next.config.js should fail when domain is not defined in next.config.js",
        "with latest sharp Production Mode Server support with next.config.js should fail when internal url is not an image",
        "with latest sharp Production Mode Server support with next.config.js should fail when q is greater than 100",
        "with latest sharp Production Mode Server support with next.config.js should fail when q is less than 1",
        "with latest sharp Production Mode Server support with next.config.js should fail when q is missing",
        "with latest sharp Production Mode Server support with next.config.js should fail when q is not a number",
        "with latest sharp Production Mode Server support with next.config.js should fail when q is not an integer",
        "with latest sharp Production Mode Server support with next.config.js should fail when url fails to load an image",
        "with latest sharp Production Mode Server support with next.config.js should fail when url has file protocol",
        "with latest sharp Production Mode Server support with next.config.js should fail when url has ftp protocol",
        "with latest sharp Production Mode Server support with next.config.js should fail when url is missing",
        "with latest sharp Production Mode Server support with next.config.js should fail when url is protocol relative",
        "with latest sharp Production Mode Server support with next.config.js should fail when url is too long",
        "with latest sharp Production Mode Server support with next.config.js should fail when w is 0",
        "with latest sharp Production Mode Server support with next.config.js should fail when w is less than 0",
        "with latest sharp Production Mode Server support with next.config.js should fail when w is missing",
        "with latest sharp Production Mode Server support with next.config.js should fail when w is not a number",
        "with latest sharp Production Mode Server support with next.config.js should fail when w is not an integer",
        "with latest sharp Production Mode Server support with next.config.js should fail when width is not in next.config.js",
        "with latest sharp Production Mode Server support with next.config.js should handle concurrent requests",
        "with latest sharp Production Mode Server support with next.config.js should handle non-ascii characters in image url",
        "with latest sharp Production Mode Server support with next.config.js should maintain animated gif",
        "with latest sharp Production Mode Server support with next.config.js should maintain animated png",
        "with latest sharp Production Mode Server support with next.config.js should maintain animated png 2",
        "with latest sharp Production Mode Server support with next.config.js should maintain animated webp",
        "with latest sharp Production Mode Server support with next.config.js should maintain bmp",
        "with latest sharp Production Mode Server support with next.config.js should maintain icns",
        "with latest sharp Production Mode Server support with next.config.js should maintain ico format",
        "with latest sharp Production Mode Server support with next.config.js should maintain jpg format for old Safari",
        "with latest sharp Production Mode Server support with next.config.js should maintain pic/pct",
        "with latest sharp Production Mode Server support with next.config.js should maintain png format for old Safari",
        "with latest sharp Production Mode Server support with next.config.js should normalize invalid status codes",
        "with latest sharp Production Mode Server support with next.config.js should not allow svg with application header",
        "with latest sharp Production Mode Server support with next.config.js should not allow svg with comma header",
        "with latest sharp Production Mode Server support with next.config.js should not allow svg with uppercase header",
        "with latest sharp Production Mode Server support with next.config.js should not allow svg with wrong header",
        "with latest sharp Production Mode Server support with next.config.js should not allow vector svg",
        "with latest sharp Production Mode Server support with next.config.js should not resize if requested width is larger than original source image",
        "with latest sharp Production Mode Server support with next.config.js should resize absolute url from localhost",
        "with latest sharp Production Mode Server support with next.config.js should resize avif",
        "with latest sharp Production Mode Server support with next.config.js should resize avif and maintain format",
        "with latest sharp Production Mode Server support with next.config.js should resize gif (not animated)",
        "with latest sharp Production Mode Server support with next.config.js should resize relative url and new Chrome accept header as avif",
        "with latest sharp Production Mode Server support with next.config.js should resize relative url and old Chrome accept header as webp",
        "with latest sharp Production Mode Server support with next.config.js should resize relative url and png accept header",
        "with latest sharp Production Mode Server support with next.config.js should resize relative url and webp Firefox accept header",
        "with latest sharp Production Mode Server support with next.config.js should resize relative url with invalid accept header as gif",
        "with latest sharp Production Mode Server support with next.config.js should resize relative url with invalid accept header as png",
        "with latest sharp Production Mode Server support with next.config.js should resize relative url with invalid accept header as tiff",
        "with latest sharp Production Mode Server support with next.config.js should resize tiff",
        "with latest sharp Production Mode Server support with next.config.js should return home page",
        "with latest sharp Production Mode Server support with next.config.js should set 304 status without body when etag matches if-none-match",
        "with latest sharp Production Mode Server support with next.config.js should set cache-control to immutable for static images",
        "with latest sharp Production Mode Server support with next.config.js should timeout for upstream image exceeding 7 seconds",
        "with latest sharp Production Mode Server support with next.config.js should use cache and stale-while-revalidate when query is the same for external image",
        "with latest sharp Production Mode Server support with next.config.js should use cache and stale-while-revalidate when query is the same for internal image",
        "with latest sharp Production Mode Server support with next.config.js should use cached image file when parameters are the same for animated gif"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/import-assertion/test/index.test.js": {
      "passed": [
        "import-assertion dev should handle json assertions",
        "production mode import-assertion prod should handle json assertions"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/import-attributes/test/index.test.js": {
      "passed": [
        "import-attributes dev should handle json attributes",
        "production mode import-attributes prod should handle json attributes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/index-index/test/index.test.js": {
      "passed": [
        "nested index.js production mode should 404 on /index/index/index",
        "nested index.js production mode should client render page /",
        "nested index.js production mode should client render page /index",
        "nested index.js production mode should client render page /index/index",
        "nested index.js production mode should client render page /index/project",
        "nested index.js production mode should client render page /index/user",
        "nested index.js production mode should follow link to /",
        "nested index.js production mode should follow link to /index",
        "nested index.js production mode should follow link to /index/project",
        "nested index.js production mode should follow link to /index/user",
        "nested index.js production mode should not find a link to /index/index/index",
        "nested index.js production mode should ssr page /",
        "nested index.js production mode should ssr page /index",
        "nested index.js production mode should ssr page /index/index",
        "nested index.js production mode should ssr page /index/project",
        "nested index.js production mode should ssr page /index/user"
      ],
      "failed": [
        "nested index.js production mode should follow link to /index/index"
      ],
      "pending": [
        "nested index.js development mode should 404 on /index/index/index",
        "nested index.js development mode should client render page /",
        "nested index.js development mode should client render page /index",
        "nested index.js development mode should client render page /index/index",
        "nested index.js development mode should client render page /index/project",
        "nested index.js development mode should client render page /index/user",
        "nested index.js development mode should follow link to /",
        "nested index.js development mode should follow link to /index",
        "nested index.js development mode should follow link to /index/index",
        "nested index.js development mode should follow link to /index/project",
        "nested index.js development mode should follow link to /index/user",
        "nested index.js development mode should not find a link to /index/index/index",
        "nested index.js development mode should ssr page /",
        "nested index.js development mode should ssr page /index",
        "nested index.js development mode should ssr page /index/index",
        "nested index.js development mode should ssr page /index/project",
        "nested index.js development mode should ssr page /index/user"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/initial-ref/test/index.test.js": {
      "passed": ["Initial Refs production mode Has correct initial ref values"],
      "failed": [],
      "pending": [
        "Initial Refs development mode Has correct initial ref values"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/invalid-config-values/test/index.test.js": {
      "passed": [
        "Handles valid/invalid assetPrefix production mode should not error when assetPrefix is a string",
        "Handles valid/invalid assetPrefix production mode should not error without usage of assetPrefix"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/invalid-custom-routes/test/index.test.js": {
      "passed": [
        "Errors on invalid custom routes production mode should error during next build for invalid headers",
        "Errors on invalid custom routes production mode should error during next build for invalid redirects",
        "Errors on invalid custom routes production mode should error during next build for invalid rewrites",
        "Errors on invalid custom routes production mode should error when empty headers array is present on header item",
        "Errors on invalid custom routes production mode should error when source and destination length is exceeded",
        "Errors on invalid custom routes production mode should show formatted error for redirect source parse fail",
        "Errors on invalid custom routes production mode should show valid error when non-array is returned from headers",
        "Errors on invalid custom routes production mode should show valid error when non-array is returned from redirects",
        "Errors on invalid custom routes production mode should show valid error when non-array is returned from rewrites",
        "Errors on invalid custom routes production mode should show valid error when segments not in source are used in destination"
      ],
      "failed": [],
      "pending": [
        "Errors on invalid custom routes development mode should error during next build for invalid headers",
        "Errors on invalid custom routes development mode should error during next build for invalid redirects",
        "Errors on invalid custom routes development mode should error during next build for invalid rewrites",
        "Errors on invalid custom routes development mode should error when empty headers array is present on header item",
        "Errors on invalid custom routes development mode should error when source and destination length is exceeded",
        "Errors on invalid custom routes development mode should show formatted error for redirect source parse fail",
        "Errors on invalid custom routes development mode should show valid error when non-array is returned from headers",
        "Errors on invalid custom routes development mode should show valid error when non-array is returned from redirects",
        "Errors on invalid custom routes development mode should show valid error when non-array is returned from rewrites",
        "Errors on invalid custom routes development mode should show valid error when segments not in source are used in destination"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/invalid-document-image-import/test/index.test.js": {
      "passed": [],
      "failed": [
        "Invalid static image import in _document production mode Should fail to build when disableStaticImages in next.config.js",
        "Invalid static image import in _document production mode Should fail to build when no next.config.js"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/invalid-href/test/index.test.js": {
      "passed": [
        "Invalid hrefs production mode does not show error in production when https://google.com is used as href on Link",
        "Invalid hrefs production mode does not show error in production when mailto: is used as href on Link",
        "Invalid hrefs production mode does not show error when internal href is used with external as",
        "Invalid hrefs production mode doesn't fail on invalid url",
        "Invalid hrefs production mode renders a link with invalid href",
        "Invalid hrefs production mode renders a link with mailto: href",
        "Invalid hrefs production mode shows error when dynamic route mismatch is used on Link"
      ],
      "failed": [],
      "pending": [
        "Invalid hrefs development mode does not show error when https://google.com is used as href on Link",
        "Invalid hrefs development mode does not show error when mailto: is used as href on Link",
        "Invalid hrefs development mode does not throw error when dynamic route mismatch is used on Link and params are manually provided",
        "Invalid hrefs development mode doesn't fail on invalid url",
        "Invalid hrefs development mode shows error when dynamic route mismatch is used on Link",
        "Invalid hrefs development mode shows error when internal href is used with external as",
        "Invalid hrefs development mode shows warning when dynamic route mismatch is used on Link"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/invalid-middleware-matchers/test/index.test.js": {
      "passed": [],
      "failed": [
        "Errors on invalid custom middleware matchers production mode should error during next build for invalid matchers",
        "Errors on invalid custom middleware matchers production mode should error when source length is exceeded"
      ],
      "pending": [
        "Errors on invalid custom middleware matchers development mode should error during next build for invalid matchers",
        "Errors on invalid custom middleware matchers development mode should error when source length is exceeded"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/invalid-multi-match/test/index.test.js": {
      "passed": [
        "Custom routes invalid multi-match production mode should show error for invalid mulit-match"
      ],
      "failed": [],
      "pending": [
        "Custom routes invalid multi-match development mode should show error for invalid mulit-match"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/invalid-page-automatic-static-optimization/test/index.test.js": {
      "passed": [
        "Invalid Page automatic static optimization production mode Fails softly with descriptive error",
        "Invalid Page automatic static optimization production mode handles non-error correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/invalid-revalidate-values/test/index.test.js": {
      "passed": [
        "Invalid revalidate values should not show error for false revalidate value",
        "Invalid revalidate values should not show error for true revalidate value",
        "Invalid revalidate values should not show error initially",
        "Invalid revalidate values should show error for float revalidate value",
        "Invalid revalidate values should show error for null revalidate value",
        "Invalid revalidate values should show error for string revalidate value"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/invalid-server-options/test/index.test.js": {
      "passed": [
        "Invalid server options next() called with dev as array should send warning",
        "Invalid server options next() called with dev as function should send warning",
        "Invalid server options next() called with dev as number should send warning",
        "Invalid server options next() called with dev as object should send warning",
        "Invalid server options next() called with dev as string should send warning",
        "Invalid server options next() called with no parameters should throw error",
        "Invalid server options next() called with null parameter should throw error",
        "Invalid server options next() called with undefined parameter should throw error"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/jsconfig-baseurl/test/index.test.js": {
      "passed": [
        "jsconfig.json baseurl default behavior should have correct module not found error",
        "jsconfig.json baseurl default behavior should render the page",
        "jsconfig.json baseurl should build production mode should trace correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/jsconfig-empty/test/index.test.js": {
      "passed": [
        "Empty JSConfig Support production mode should compile successfully"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/jsconfig-paths-wildcard/test/index.test.js": {
      "passed": [
        "jsconfig paths wildcard default behavior should resolve a wildcard alias",
        "jsconfig paths without baseurl wildcard default behavior should resolve a wildcard alias"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/jsconfig-paths/test/index.test.js": {
      "passed": [
        "jsconfig paths default behavior should alias components",
        "jsconfig paths default behavior should have correct module not found error",
        "jsconfig paths default behavior should resolve a single matching alias",
        "jsconfig paths default behavior should resolve the first item in the array first",
        "jsconfig paths default behavior should resolve the second item as fallback",
        "jsconfig paths without baseurl default behavior should alias components",
        "jsconfig paths without baseurl default behavior should have correct module not found error",
        "jsconfig paths without baseurl default behavior should resolve a single matching alias",
        "jsconfig paths without baseurl default behavior should resolve the first item in the array first",
        "jsconfig paths without baseurl default behavior should resolve the second item as fallback",
        "jsconfig paths should build production mode should trace correctly",
        "jsconfig paths without baseurl should build production mode should trace correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/jsconfig/test/index.test.js": {
      "passed": [
        "jsconfig.json production mode should build normally",
        "jsconfig.json production mode should fail on invalid jsconfig.json"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/json-serialize-original-error/test/index.test.js": {
      "passed": [
        "JSON Serialization production mode should fail with original error"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/link-ref/test/index.test.js": {
      "passed": [
        "Invalid hrefs production mode should not have a race condition with a click handler",
        "Invalid hrefs production mode should preload with child ref with React.createRef",
        "Invalid hrefs production mode should preload with child ref with function",
        "Invalid hrefs production mode should preload with child ref with function that returns a cleanup function",
        "Invalid hrefs production mode should preload with forwardRef"
      ],
      "failed": [],
      "pending": [
        "Invalid hrefs development mode should handle child ref that is a function",
        "Invalid hrefs development mode should handle child ref that is a function that returns a cleanup function",
        "Invalid hrefs development mode should handle child ref with React.createRef",
        "Invalid hrefs development mode should not have a race condition with a click handler",
        "Invalid hrefs development mode should not show error for class component as child of next/link",
        "Invalid hrefs development mode should not show error for function component with forwardRef"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/link-with-encoding/test/index.test.js": {
      "passed": [
        "Link Component with Encoding colon should have correct parsing of url query params",
        "Link Component with Encoding colon should have correct query on Router#push",
        "Link Component with Encoding colon should have correct query on SSR",
        "Link Component with Encoding colon should have correct query on simple client-side <Link>",
        "Link Component with Encoding double quote should have correct query on Router#push",
        "Link Component with Encoding double quote should have correct query on SSR",
        "Link Component with Encoding double quote should have correct query on simple client-side <Link>",
        "Link Component with Encoding forward slash should have correct query on Router#push",
        "Link Component with Encoding forward slash should have correct query on SSR",
        "Link Component with Encoding forward slash should have correct query on simple client-side <Link>",
        "Link Component with Encoding percent should have correct query on Router#push",
        "Link Component with Encoding percent should have correct query on SSR",
        "Link Component with Encoding percent should have correct query on simple client-side <Link>",
        "Link Component with Encoding spaces should have correct query on Router#push",
        "Link Component with Encoding spaces should have correct query on SSR",
        "Link Component with Encoding spaces should have correct query on simple client-side <Link>"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/link-with-multiple-child/test/index.test.js": {
      "passed": [
        "multiple child with default legacyBehavior",
        "multiple child with forced legacyBehavior=false",
        "single child"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/link-without-router/test/index.test.js": {
      "passed": [
        "Link without a router production mode should not throw when rendered"
      ],
      "failed": [],
      "pending": [
        "Link without a router development mode should not throw when rendered"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/middleware-basic/test/index.test.js": {
      "passed": ["production mode loads a middleware"],
      "failed": [],
      "pending": ["development mode loads a middleware"],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/middleware-build-errors/test/index.test.js": {
      "passed": [
        "Middleware validation during build production mode given a middleware building body with JSON.stringify does not throw an error",
        "Middleware validation during build production mode given a middleware building response body with a variable does not throw an error",
        "Middleware validation during build production mode given a middleware building response body with custom code does not throw an error",
        "Middleware validation during build production mode given a middleware returning a null body builds successfully",
        "Middleware validation during build production mode given a middleware returning a text body does not throw an error",
        "Middleware validation during build production mode given a middleware returning a text body with NextResponse does not throw an error",
        "Middleware validation during build production mode given a middleware returning an undefined body builds successfully"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/middleware-dev-update/test/index.test.js": {
      "passed": [
        "Middleware development errors when matcher is added sends response correctly",
        "Middleware development errors when middleware is added sends response correctly",
        "Middleware development errors when middleware is removed and re-added sends response correctly",
        "Middleware development errors when middleware is removed sends response correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/middleware-overrides-node.js-api/test/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Middleware overriding a Node.js API development mode does not show a warning and allows overriding"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/middleware-prefetch/tests/index.test.js": {
      "passed": [
        "Middleware Production Prefetch production mode does not prefetch provided path if it will be rewritten",
        "Middleware Production Prefetch production mode prefetch correctly for unexistent routes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/middleware-src/test/index.test.js": {
      "passed": [
        "Middleware in src/ and / folders production mode should warn about middleware on export",
        "Middleware in src/ folder production mode should warn about middleware on export"
      ],
      "failed": [],
      "pending": [
        "Middleware in src/ and / folders development mode loads and runs only root middleware",
        "Middleware in src/ folder development mode loads an runs src middleware"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/missing-document-component-error/test/index.test.js": {
      "passed": [
        "Missing _document components error should detect missing Head component",
        "Missing _document components error should detect missing Html component",
        "Missing _document components error should detect missing Main component",
        "Missing _document components error should detect missing NextScript component",
        "Missing _document components error should detect multiple missing document components"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/mixed-ssg-serverprops-error/test/index.test.js": {
      "passed": [
        "Mixed getStaticProps and getServerSideProps error production mode should error when exporting getStaticPaths on a non-dynamic page"
      ],
      "failed": [],
      "pending": [
        "Mixed getStaticProps and getServerSideProps error production mode should error when exporting both getStaticPaths and getServerSideProps",
        "Mixed getStaticProps and getServerSideProps error production mode should error when exporting both getStaticProps and getServerSideProps",
        "Mixed getStaticProps and getServerSideProps error production mode should error with getStaticProps but no default export"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-dynamic-css/test/index.test.js": {
      "passed": ["next/dynamic production mode should load page correctly"],
      "failed": [],
      "pending": ["next/dynamic development mode should load page correctly"],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-dynamic-lazy-compilation/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "next/dynamic lazy compilation development mode should render dynamic server rendered values before hydration",
        "next/dynamic lazy compilation development mode should render dynamic server rendered values on client mount",
        "next/dynamic lazy compilation development mode should render server value",
        "next/dynamic lazy compilation production mode should render dynamic server rendered values before hydration",
        "next/dynamic lazy compilation production mode should render dynamic server rendered values on client mount",
        "next/dynamic lazy compilation production mode should render server value"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-dynamic/test/index.test.js": {
      "passed": ["next/dynamic production mode should render server value"],
      "failed": [
        "next/dynamic production mode should render dynamic server rendered values on client mount"
      ],
      "pending": [
        "next/dynamic development mode should render dynamic server rendered values on client mount",
        "next/dynamic development mode should render server value"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/asset-prefix/test/index.test.ts": {
      "passed": [
        "Image Component assetPrefix Tests production mode should use base64 data url with placeholder=blur during next start"
      ],
      "failed": [],
      "pending": [
        "Image Component assetPrefix Tests development mode should include assetPrefix when placeholder=blur during next dev"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/base-path/test/index.test.ts": {
      "passed": [
        "Image Component basePath Tests production mode should correctly ignore prose styles",
        "Image Component basePath Tests production mode should correctly rotate image",
        "Image Component basePath Tests production mode should load the images",
        "Image Component basePath Tests production mode should update the image on src change",
        "Image Component basePath Tests production mode should work when using flexbox",
        "Image Component basePath Tests production mode should work with layout-fill to fill the parent and stretch with viewport",
        "Image Component basePath Tests production mode should work with layout-fill to fill the parent but NOT stretch with viewport",
        "Image Component basePath Tests production mode should work with layout-fixed so resizing window does not resize image",
        "Image Component basePath Tests production mode should work with layout-intrinsic so resizing window maintains image aspect ratio",
        "Image Component basePath Tests production mode should work with layout-responsive so resizing window maintains image aspect ratio",
        "Image Component basePath Tests production mode should work with sizes and automatically use layout-responsive"
      ],
      "failed": [],
      "pending": [
        "Image Component basePath Tests development mode should correctly ignore prose styles",
        "Image Component basePath Tests development mode should load the images",
        "Image Component basePath Tests development mode should show invalid src error",
        "Image Component basePath Tests development mode should show invalid src error when protocol-relative",
        "Image Component basePath Tests development mode should show missing src error",
        "Image Component basePath Tests development mode should update the image on src change",
        "Image Component basePath Tests development mode should work when using flexbox",
        "Image Component basePath Tests development mode should work with layout-fill to fill the parent and stretch with viewport",
        "Image Component basePath Tests development mode should work with layout-fill to fill the parent but NOT stretch with viewport",
        "Image Component basePath Tests development mode should work with layout-fixed so resizing window does not resize image",
        "Image Component basePath Tests development mode should work with layout-intrinsic so resizing window maintains image aspect ratio",
        "Image Component basePath Tests development mode should work with layout-responsive so resizing window maintains image aspect ratio",
        "Image Component basePath Tests development mode should work with sizes and automatically use layout-responsive"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/base-path/test/static.test.ts": {
      "passed": [
        "Build Error Tests for basePath production mode should throw build error when import statement is used with missing file",
        "Static Image Component Tests for basePath production mode Should add a blur placeholder to statically imported jpg",
        "Static Image Component Tests for basePath production mode Should add a blur placeholder to statically imported png",
        "Static Image Component Tests for basePath production mode Should allow an image with a static src to omit height and width",
        "Static Image Component Tests for basePath production mode Should allow provided width and height to override intrinsic",
        "Static Image Component Tests for basePath production mode Should automatically provide an image height and width",
        "Static Image Component Tests for basePath production mode Should use immutable cache-control header even when unoptimized",
        "Static Image Component Tests for basePath production mode Should use immutable cache-control header for static import"
      ],
      "failed": [],
      "pending": [
        "Static Image Component Tests for basePath development mode Should add a blur placeholder to statically imported jpg",
        "Static Image Component Tests for basePath development mode Should add a blur placeholder to statically imported png",
        "Static Image Component Tests for basePath development mode Should allow an image with a static src to omit height and width",
        "Static Image Component Tests for basePath development mode Should allow provided width and height to override intrinsic",
        "Static Image Component Tests for basePath development mode Should automatically provide an image height and width",
        "Static Image Component Tests for basePath development mode Should use immutable cache-control header for static import"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/basic/test/index.test.ts": {
      "passed": [
        "Image Component Tests production mode Client-side Image Component Tests Client-side Errors Should not log an error when an unregistered host is used in production",
        "Image Component Tests production mode Client-side Image Component Tests should add a srcset based on the loader",
        "Image Component Tests production mode Client-side Image Component Tests should add a srcset even with preceding slash in prop",
        "Image Component Tests production mode Client-side Image Component Tests should correctly generate src even if preceding slash is included in prop",
        "Image Component Tests production mode Client-side Image Component Tests should keep auto parameter if already set",
        "Image Component Tests production mode Client-side Image Component Tests should keep fit parameter if already set",
        "Image Component Tests production mode Client-side Image Component Tests should keep width parameter if already set",
        "Image Component Tests production mode Client-side Image Component Tests should modify src with the loader",
        "Image Component Tests production mode Client-side Image Component Tests should not add a srcset if unoptimized attribute present",
        "Image Component Tests production mode Client-side Image Component Tests should only be loaded once if `sizes` is set",
        "Image Component Tests production mode Client-side Image Component Tests should render an image tag",
        "Image Component Tests production mode Client-side Image Component Tests should support passing through arbitrary attributes",
        "Image Component Tests production mode Client-side Image Component Tests should support the unoptimized attribute",
        "Image Component Tests production mode Client-side Image Component Tests should use imageSizes when width matches, not deviceSizes from next.config.js",
        "Image Component Tests production mode Client-side Lazy Loading Tests should have loaded the first image immediately",
        "Image Component Tests production mode Client-side Lazy Loading Tests should load the fifth image eagerly, without scrolling",
        "Image Component Tests production mode Client-side Lazy Loading Tests should load the fourth image lazily after scrolling down",
        "Image Component Tests production mode Client-side Lazy Loading Tests should load the second image after scrolling down",
        "Image Component Tests production mode Client-side Lazy Loading Tests should load the sixth image, which has lazyBoundary property after scrolling down",
        "Image Component Tests production mode Client-side Lazy Loading Tests should load the third image, which is unoptimized, after scrolling further down",
        "Image Component Tests production mode Client-side Lazy Loading Tests should not have loaded the second image immediately",
        "Image Component Tests production mode Client-side Lazy Loading Tests should not have loaded the third image after scrolling down",
        "Image Component Tests production mode Client-side Lazy Loading Tests should pass through classes on a lazy loaded image",
        "Image Component Tests production mode SSR Image Component Tests should add a preload tag for a priority image",
        "Image Component Tests production mode SSR Image Component Tests should add a preload tag for a priority image with preceding slash",
        "Image Component Tests production mode SSR Image Component Tests should add a preload tag for a priority image, with arbitrary host",
        "Image Component Tests production mode SSR Image Component Tests should add a preload tag for a priority image, with quality",
        "Image Component Tests production mode SSR Image Component Tests should add a srcset based on the loader",
        "Image Component Tests production mode SSR Image Component Tests should add a srcset even with preceding slash in prop",
        "Image Component Tests production mode SSR Image Component Tests should add data-nimg data attribute based on layout",
        "Image Component Tests production mode SSR Image Component Tests should correctly generate src even if preceding slash is included in prop",
        "Image Component Tests production mode SSR Image Component Tests should keep auto parameter if already set",
        "Image Component Tests production mode SSR Image Component Tests should keep fit parameter if already set",
        "Image Component Tests production mode SSR Image Component Tests should keep width parameter if already set",
        "Image Component Tests production mode SSR Image Component Tests should modify src with the loader",
        "Image Component Tests production mode SSR Image Component Tests should not add a srcset if unoptimized attribute present",
        "Image Component Tests production mode SSR Image Component Tests should not create any preload tags higher up the page than CSS preload tags",
        "Image Component Tests production mode SSR Image Component Tests should not pass config to custom loader prop",
        "Image Component Tests production mode SSR Image Component Tests should render an image tag",
        "Image Component Tests production mode SSR Image Component Tests should support passing through arbitrary attributes",
        "Image Component Tests production mode SSR Image Component Tests should support the unoptimized attribute",
        "Image Component Tests production mode SSR Image Component Tests should use imageSizes when width matches, not deviceSizes from next.config.js",
        "Image Component Tests production mode SSR Lazy Loading Tests should have loaded the first image immediately",
        "Image Component Tests production mode SSR Lazy Loading Tests should load the fifth image eagerly, without scrolling",
        "Image Component Tests production mode SSR Lazy Loading Tests should load the fourth image lazily after scrolling down",
        "Image Component Tests production mode SSR Lazy Loading Tests should load the second image after scrolling down",
        "Image Component Tests production mode SSR Lazy Loading Tests should load the sixth image, which has lazyBoundary property after scrolling down",
        "Image Component Tests production mode SSR Lazy Loading Tests should load the third image, which is unoptimized, after scrolling further down",
        "Image Component Tests production mode SSR Lazy Loading Tests should not have loaded the second image immediately",
        "Image Component Tests production mode SSR Lazy Loading Tests should not have loaded the third image after scrolling down",
        "Image Component Tests production mode SSR Lazy Loading Tests should pass through classes on a lazy loaded image"
      ],
      "failed": [],
      "pending": [
        "Image Component Tests production mode Client-side Image Component Tests should NOT add a preload tag for a priority image"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/custom-resolver/test/index.test.ts": {
      "passed": [
        "Custom Resolver Tests production mode Client-side Custom Loader Tests Should use a custom resolver for image URL",
        "Custom Resolver Tests production mode Client-side Custom Loader Tests should add a srcset based on the custom resolver",
        "Custom Resolver Tests production mode Client-side Custom Loader Tests should support the unoptimized attribute",
        "Custom Resolver Tests production mode SSR Custom Loader Tests Should use a custom resolver for image URL",
        "Custom Resolver Tests production mode SSR Custom Loader Tests should add a srcset based on the custom resolver",
        "Custom Resolver Tests production mode SSR Custom Loader Tests should support the unoptimized attribute"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/default/test/index.test.ts": {
      "passed": [
        "Image Component Tests production mode should apply filter style after image loads",
        "Image Component Tests production mode should apply style inheritance for img elements but not wrapper elements",
        "Image Component Tests production mode should be valid HTML",
        "Image Component Tests production mode should callback native onError when error occurred while loading image",
        "Image Component Tests production mode should callback native onLoad in most cases",
        "Image Component Tests production mode should callback onLoadingComplete when image is fully loaded",
        "Image Component Tests production mode should correctly ignore prose styles",
        "Image Component Tests production mode should correctly rotate image",
        "Image Component Tests production mode should emit image for next/dynamic with non ssr case",
        "Image Component Tests production mode should handle the styles prop appropriately",
        "Image Component Tests production mode should have blurry placeholder when enabled",
        "Image Component Tests production mode should initially load only two of four images using lazyroot",
        "Image Component Tests production mode should load the images",
        "Image Component Tests production mode should not create an image folder in server/chunks",
        "Image Component Tests production mode should not pass through user-provided srcset (causing a flash)",
        "Image Component Tests production mode should not use blurry placeholder for <noscript> image",
        "Image Component Tests production mode should preload priority images",
        "Image Component Tests production mode should re-lazyload images after src changes",
        "Image Component Tests production mode should remove blurry placeholder after image loads",
        "Image Component Tests production mode should update the image on src change",
        "Image Component Tests production mode should work when using flexbox",
        "Image Component Tests production mode should work with image with blob src",
        "Image Component Tests production mode should work with layout-fill to fill the parent and stretch with viewport",
        "Image Component Tests production mode should work with layout-fill to fill the parent but NOT stretch with viewport",
        "Image Component Tests production mode should work with layout-fixed so resizing window does not resize image",
        "Image Component Tests production mode should work with layout-intrinsic so resizing window maintains image aspect ratio",
        "Image Component Tests production mode should work with layout-responsive so resizing window maintains image aspect ratio",
        "Image Component Tests production mode should work with sizes and automatically use layout-responsive"
      ],
      "failed": [],
      "pending": [
        "Image Component Tests development mode should apply filter style after image loads",
        "Image Component Tests development mode should apply style inheritance for img elements but not wrapper elements",
        "Image Component Tests development mode should be valid HTML",
        "Image Component Tests development mode should callback native onError when error occurred while loading image",
        "Image Component Tests development mode should callback native onLoad in most cases",
        "Image Component Tests development mode should callback onLoadingComplete when image is fully loaded",
        "Image Component Tests development mode should correctly ignore prose styles",
        "Image Component Tests development mode should emit image for next/dynamic with non ssr case",
        "Image Component Tests development mode should handle the styles prop appropriately",
        "Image Component Tests development mode should have blurry placeholder when enabled",
        "Image Component Tests development mode should initially load only two of four images using lazyroot",
        "Image Component Tests development mode should load the images",
        "Image Component Tests development mode should not pass through user-provided srcset (causing a flash)",
        "Image Component Tests development mode should not use blurry placeholder for <noscript> image",
        "Image Component Tests development mode should not warn when Image is child of p",
        "Image Component Tests development mode should not warn when svg, even if with loader prop or without",
        "Image Component Tests development mode should preload priority images",
        "Image Component Tests development mode should re-lazyload images after src changes",
        "Image Component Tests development mode should remove blurry placeholder after image loads",
        "Image Component Tests development mode should show error when not numeric string width or height",
        "Image Component Tests development mode should show error when static import and placeholder=blur and blurDataUrl is missing",
        "Image Component Tests development mode should show error when string src and placeholder=blur and blurDataURL is missing",
        "Image Component Tests development mode should show invalid src error",
        "Image Component Tests development mode should show invalid src error when protocol-relative",
        "Image Component Tests development mode should show missing src error",
        "Image Component Tests development mode should update the image on src change",
        "Image Component Tests development mode should warn at most once even after state change",
        "Image Component Tests development mode should warn when img with layout=fill is inside a container without position relative",
        "Image Component Tests development mode should warn when img with layout=responsive is inside flex container",
        "Image Component Tests development mode should warn when loader is missing width",
        "Image Component Tests development mode should warn when priority prop is missing on LCP image",
        "Image Component Tests development mode should warn when using a very small image with placeholder=blur",
        "Image Component Tests development mode should warn when using sizes with incorrect layout",
        "Image Component Tests development mode should work when using flexbox",
        "Image Component Tests development mode should work with image with blob src",
        "Image Component Tests development mode should work with layout-fill to fill the parent and stretch with viewport",
        "Image Component Tests development mode should work with layout-fill to fill the parent but NOT stretch with viewport",
        "Image Component Tests development mode should work with layout-fixed so resizing window does not resize image",
        "Image Component Tests development mode should work with layout-intrinsic so resizing window maintains image aspect ratio",
        "Image Component Tests development mode should work with layout-responsive so resizing window maintains image aspect ratio",
        "Image Component Tests development mode should work with sizes and automatically use layout-responsive"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/default/test/static.test.ts": {
      "passed": [
        "Build Error Tests production mode should throw build error when import statement is used with missing file",
        "Static Image Component Tests production mode Should add a blur placeholder to statically imported jpg",
        "Static Image Component Tests production mode Should add a blur placeholder to statically imported png",
        "Static Image Component Tests production mode Should allow an image with a static src to omit height and width",
        "Static Image Component Tests production mode Should allow provided width and height to override intrinsic",
        "Static Image Component Tests production mode Should automatically provide an image height and width",
        "Static Image Component Tests production mode Should use immutable cache-control header even when unoptimized",
        "Static Image Component Tests production mode Should use immutable cache-control header for static import",
        "Static Image Component Tests production mode should load direct imported image",
        "Static Image Component Tests production mode should load staticprops imported image"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/image-from-node-modules/test/index.test.ts": {
      "passed": [
        "Image Component Tests In Prod Mode production mode should apply image config for node_modules",
        "Image Component Tests In development mode should apply image config for node_modules"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/no-intersection-observer-fallback/test/index.test.ts": {
      "passed": [
        "Image Component No IntersectionObserver test production mode Client-side Lazy Loading Tests should automatically load images if observer does not exist",
        "Image Component No IntersectionObserver test production mode SSR Lazy Loading Tests should automatically load images if observer does not exist"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/noscript/test/index.test.ts": {
      "passed": [
        "Noscript Tests production mode Noscript page source tests should use loader url for noscript img#image-with-loader src attribute",
        "Noscript Tests production mode Noscript page source tests should use local API for noscript img#basic-image src attribute"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/react-virtualized/test/index.test.ts": {
      "passed": [
        "react-virtualized wrapping next/legacy/image production mode should not cancel requests for images"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/svgo-webpack/test/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "svgo-webpack with Image Component development mode should print error when invalid Image usage",
        "svgo-webpack with Image Component production mode should not fail to build invalid usage of the Image component"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/trailing-slash/test/index.test.ts": {
      "passed": [
        "Image Component Trailing Slash Tests production mode should include trailing slash when trailingSlash is set on config file during next start"
      ],
      "failed": [],
      "pending": [
        "Image Component Trailing Slash Tests development mode should include trailing slash when trailingSlash is set on config file during next dev"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/typescript/test/index.test.ts": {
      "passed": [
        "TypeScript Image Component development mode 2 should remove global image types when disabled (dev)",
        "TypeScript Image Component production mode should fail to build invalid usage of the Image component",
        "TypeScript Image Component production mode should remove global image types when disabled"
      ],
      "failed": [],
      "pending": [
        "TypeScript Image Component development mode should have image types when enabled",
        "TypeScript Image Component development mode should print error when invalid Image usage",
        "TypeScript Image Component development mode should render the valid Image usage and not print error"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/unicode/test/index.test.ts": {
      "passed": [
        "Image Component Unicode Image URL production mode should load external image with space",
        "Image Component Unicode Image URL production mode should load external unicode image",
        "Image Component Unicode Image URL production mode should load internal image with space",
        "Image Component Unicode Image URL production mode should load internal unicode image",
        "Image Component Unicode Image URL production mode should load static unicode image"
      ],
      "failed": [],
      "pending": [
        "Image Component Unicode Image URL development mode should load external image with space",
        "Image Component Unicode Image URL development mode should load external unicode image",
        "Image Component Unicode Image URL development mode should load internal image with space",
        "Image Component Unicode Image URL development mode should load internal unicode image",
        "Image Component Unicode Image URL development mode should load static unicode image"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-legacy/unoptimized/test/index.test.ts": {
      "passed": [
        "Unoptimized Image Tests production mode should not optimize any image"
      ],
      "failed": [],
      "pending": [
        "Unoptimized Image Tests development mode should not optimize any image"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/app-dir-image-from-node-modules/test/index.test.ts": {
      "passed": [
        "Image Component from node_modules development mode should apply image config for node_modules",
        "Image Component from node_modules prod mode production mode should apply image config for node_modules"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/app-dir/test/index.test.ts": {
      "passed": [
        "Image Component Default Tests production mode Fill-mode tests should add 100% width and height to fill images",
        "Image Component Default Tests production mode Fill-mode tests should add position styles to fill images",
        "Image Component Default Tests production mode Fill-mode tests should add position:absolute to fill images",
        "Image Component Default Tests production mode Fill-mode tests should include a data-attribute on fill images",
        "Image Component Default Tests production mode should apply filter style after image loads",
        "Image Component Default Tests production mode should apply style inheritance for img elements but not wrapper elements",
        "Image Component Default Tests production mode should be valid HTML",
        "Image Component Default Tests production mode should call callback ref cleanups when unmounting",
        "Image Component Default Tests production mode should callback native onError even when error before hydration",
        "Image Component Default Tests production mode should callback native onError when error occurred while loading image",
        "Image Component Default Tests production mode should callback native onLoad with sythetic event",
        "Image Component Default Tests production mode should callback onLoadingComplete when image is fully loaded",
        "Image Component Default Tests production mode should correctly ignore prose styles",
        "Image Component Default Tests production mode should correctly rotate image",
        "Image Component Default Tests production mode should emit image for next/dynamic with non ssr case",
        "Image Component Default Tests production mode should handle the styles prop appropriately",
        "Image Component Default Tests production mode should have blurry placeholder when enabled",
        "Image Component Default Tests production mode should have data url placeholder when enabled",
        "Image Component Default Tests production mode should lazy load with placeholder=blur",
        "Image Component Default Tests production mode should load the images",
        "Image Component Default Tests production mode should not create an image folder in server/chunks",
        "Image Component Default Tests production mode should not pass through user-provided srcset (causing a flash)",
        "Image Component Default Tests production mode should preload priority images",
        "Image Component Default Tests production mode should remove blurry placeholder after image loads",
        "Image Component Default Tests production mode should remove data url placeholder after image loads",
        "Image Component Default Tests production mode should render as unoptimized with empty string src prop",
        "Image Component Default Tests production mode should render as unoptimized with missing src prop",
        "Image Component Default Tests production mode should render correct objectFit when blurDataURL and fill",
        "Image Component Default Tests production mode should render correct objectFit when data url placeholder and fill",
        "Image Component Default Tests production mode should render no wrappers or sizers",
        "Image Component Default Tests production mode should render picture via getImageProps",
        "Image Component Default Tests production mode should update the image on src change",
        "Image Component Default Tests production mode should warn when legacy prop layout=fill",
        "Image Component Default Tests production mode should warn when legacy prop layout=responsive",
        "Image Component Default Tests production mode should work when using flexbox",
        "Image Component Default Tests production mode should work when using overrideSrc prop",
        "Image Component Default Tests production mode should work with image with blob src",
        "Image Component Default Tests production mode should work with sizes and automatically use responsive srcset"
      ],
      "failed": [],
      "pending": [
        "Image Component Default Tests development mode Fill-mode tests should add 100% width and height to fill images",
        "Image Component Default Tests development mode Fill-mode tests should add position styles to fill images",
        "Image Component Default Tests development mode Fill-mode tests should add position:absolute to fill images",
        "Image Component Default Tests development mode Fill-mode tests should include a data-attribute on fill images",
        "Image Component Default Tests development mode Fill-mode tests should log warnings when using fill mode incorrectly",
        "Image Component Default Tests development mode Fill-mode tests should not log incorrect warnings",
        "Image Component Default Tests development mode Fill-mode tests should not log warnings when image unmounts",
        "Image Component Default Tests development mode should apply filter style after image loads",
        "Image Component Default Tests development mode should apply style inheritance for img elements but not wrapper elements",
        "Image Component Default Tests development mode should be valid HTML",
        "Image Component Default Tests development mode should call callback ref cleanups when unmounting",
        "Image Component Default Tests development mode should callback native onError even when error before hydration",
        "Image Component Default Tests development mode should callback native onError when error occurred while loading image",
        "Image Component Default Tests development mode should callback native onLoad with sythetic event",
        "Image Component Default Tests development mode should callback onLoadingComplete when image is fully loaded",
        "Image Component Default Tests development mode should correctly ignore prose styles",
        "Image Component Default Tests development mode should emit image for next/dynamic with non ssr case",
        "Image Component Default Tests development mode should handle the styles prop appropriately",
        "Image Component Default Tests development mode should have blurry placeholder when enabled",
        "Image Component Default Tests development mode should have data url placeholder when enabled",
        "Image Component Default Tests development mode should lazy load with placeholder=blur",
        "Image Component Default Tests development mode should load the images",
        "Image Component Default Tests development mode should not pass through user-provided srcset (causing a flash)",
        "Image Component Default Tests development mode should not warn when Image is child of p",
        "Image Component Default Tests development mode should not warn when data url image with fill and sizes props",
        "Image Component Default Tests development mode should not warn when svg, even if with loader prop or without",
        "Image Component Default Tests development mode should preload priority images",
        "Image Component Default Tests development mode should remove blurry placeholder after image loads",
        "Image Component Default Tests development mode should remove data url placeholder after image loads",
        "Image Component Default Tests development mode should render correct objectFit when blurDataURL and fill",
        "Image Component Default Tests development mode should render correct objectFit when data url placeholder and fill",
        "Image Component Default Tests development mode should render no wrappers or sizers",
        "Image Component Default Tests development mode should render picture via getImageProps",
        "Image Component Default Tests development mode should show empty string src error",
        "Image Component Default Tests development mode should show error when CSS position changed on fill image",
        "Image Component Default Tests development mode should show error when invalid Infinity width prop",
        "Image Component Default Tests development mode should show error when invalid height prop",
        "Image Component Default Tests development mode should show error when invalid width prop",
        "Image Component Default Tests development mode should show error when missing height prop",
        "Image Component Default Tests development mode should show error when missing width prop",
        "Image Component Default Tests development mode should show error when static import and placeholder=blur and blurDataUrl is missing",
        "Image Component Default Tests development mode should show error when string src and placeholder=blur and blurDataURL is missing",
        "Image Component Default Tests development mode should show error when width prop on fill image",
        "Image Component Default Tests development mode should show invalid src error",
        "Image Component Default Tests development mode should show invalid src error when protocol-relative",
        "Image Component Default Tests development mode should show invalid src with leading space",
        "Image Component Default Tests development mode should show invalid src with trailing space",
        "Image Component Default Tests development mode should show missing alt error",
        "Image Component Default Tests development mode should show missing src error",
        "Image Component Default Tests development mode should update the image on src change",
        "Image Component Default Tests development mode should warn at most once even after state change",
        "Image Component Default Tests development mode should warn when legacy prop layout=fill",
        "Image Component Default Tests development mode should warn when legacy prop layout=responsive",
        "Image Component Default Tests development mode should warn when loader is missing width",
        "Image Component Default Tests development mode should warn when priority prop is missing on LCP image",
        "Image Component Default Tests development mode should warn when using a very small image with placeholder=blur",
        "Image Component Default Tests development mode should work when using flexbox",
        "Image Component Default Tests development mode should work when using overrideSrc prop",
        "Image Component Default Tests development mode should work with image with blob src",
        "Image Component Default Tests development mode should work with sizes and automatically use responsive srcset"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/app-dir/test/static.test.ts": {
      "passed": [
        "Build Error Tests production mode should throw build error when import statement is used with missing file",
        "Static Image Component Tests production mode Should allow an image with a static src to omit height and width",
        "Static Image Component Tests production mode Should automatically provide an image height and width",
        "Static Image Component Tests production mode Should use immutable cache-control header even when unoptimized",
        "Static Image Component Tests production mode Should use immutable cache-control header for static import",
        "Static Image Component Tests production mode should add a blur placeholder a statically imported jpg",
        "Static Image Component Tests production mode should add a blur placeholder a statically imported png",
        "Static Image Component Tests production mode should add a blur placeholder a statically imported png with fill",
        "Static Image Component Tests production mode should add a data URL placeholder to an image",
        "Static Image Component Tests production mode should add placeholder even when blurDataURL aspect ratio does not match width/height ratio",
        "Static Image Component Tests production mode should add placeholder with blurDataURL and fill",
        "Static Image Component Tests production mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
        "Static Image Component Tests production mode should load direct imported image",
        "Static Image Component Tests production mode should use height prop to adjust both width and height",
        "Static Image Component Tests production mode should use width and height prop to override import",
        "Static Image Component Tests production mode should use width prop to adjust both width and height"
      ],
      "failed": [],
      "pending": [
        "Static Image Component Tests development mode Should allow an image with a static src to omit height and width",
        "Static Image Component Tests development mode Should automatically provide an image height and width",
        "Static Image Component Tests development mode should add a blur placeholder a statically imported jpg",
        "Static Image Component Tests development mode should add a blur placeholder a statically imported png",
        "Static Image Component Tests development mode should add a blur placeholder a statically imported png with fill",
        "Static Image Component Tests development mode should add a data URL placeholder to an image",
        "Static Image Component Tests development mode should add placeholder even when blurDataURL aspect ratio does not match width/height ratio",
        "Static Image Component Tests development mode should add placeholder with blurDataURL and fill",
        "Static Image Component Tests development mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
        "Static Image Component Tests development mode should load direct imported image",
        "Static Image Component Tests development mode should use height prop to adjust both width and height",
        "Static Image Component Tests development mode should use width and height prop to override import",
        "Static Image Component Tests development mode should use width prop to adjust both width and height"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/asset-prefix/test/index.test.js": {
      "passed": [
        "Image Component assetPrefix Tests production mode should not log a deprecation warning about using `images.domains`",
        "Image Component assetPrefix Tests production mode should use base64 data url with placeholder=blur during next start"
      ],
      "failed": [],
      "pending": [
        "Image Component assetPrefix Tests development mode should include assetPrefix when placeholder=blur during next dev",
        "Image Component assetPrefix Tests development mode should not log a deprecation warning about using `images.domains`"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/base-path/test/index.test.js": {
      "passed": [
        "Image Component basePath Tests production mode should correctly ignore prose styles",
        "Image Component basePath Tests production mode should load the images",
        "Image Component basePath Tests production mode should update the image on src change",
        "Image Component basePath Tests production mode should work when using flexbox"
      ],
      "failed": [],
      "pending": [
        "Image Component basePath Tests development mode should correctly ignore prose styles",
        "Image Component basePath Tests development mode should load the images",
        "Image Component basePath Tests development mode should show invalid src error",
        "Image Component basePath Tests development mode should show invalid src error when protocol-relative",
        "Image Component basePath Tests development mode should show missing src error",
        "Image Component basePath Tests development mode should update the image on src change",
        "Image Component basePath Tests development mode should work when using flexbox"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/base-path/test/static.test.js": {
      "passed": [
        "Static Image Component Tests for basePath production mode Should allow an image with a static src to omit height and width",
        "Static Image Component Tests for basePath production mode Should automatically provide an image height and width",
        "Static Image Component Tests for basePath production mode Should use immutable cache-control header even when unoptimized",
        "Static Image Component Tests for basePath production mode Should use immutable cache-control header for static import",
        "Static Image Component Tests for basePath production mode should add a blur placeholder a statically imported jpg",
        "Static Image Component Tests for basePath production mode should add a blur placeholder a statically imported png",
        "Static Image Component Tests for basePath production mode should add a data URL placeholder to an image",
        "Static Image Component Tests for basePath production mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
        "Static Image Component Tests for basePath production mode should use height prop to adjust both width and height",
        "Static Image Component Tests for basePath production mode should use width and height prop to override import",
        "Static Image Component Tests for basePath production mode should use width prop to adjust both width and height",
        "Build Error Tests production mode should throw build error when import statement is used with missing file"
      ],
      "failed": [],
      "pending": [
        "Static Image Component Tests for basePath development mode Should allow an image with a static src to omit height and width",
        "Static Image Component Tests for basePath development mode Should automatically provide an image height and width",
        "Static Image Component Tests for basePath development mode should add a blur placeholder a statically imported jpg",
        "Static Image Component Tests for basePath development mode should add a blur placeholder a statically imported png",
        "Static Image Component Tests for basePath development mode should add a data URL placeholder to an image",
        "Static Image Component Tests for basePath development mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
        "Static Image Component Tests for basePath development mode should use height prop to adjust both width and height",
        "Static Image Component Tests for basePath development mode should use width and height prop to override import",
        "Static Image Component Tests for basePath development mode should use width prop to adjust both width and height"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/both-basepath-trailingslash/test/index.test.ts": {
      "passed": [
        "Image Component basePath + trailingSlash Tests production mode should correctly load image src from import",
        "Image Component basePath + trailingSlash Tests production mode should correctly load image src from string"
      ],
      "failed": [],
      "pending": [
        "Image Component basePath + trailingSlash Tests development mode should correctly load image src from import",
        "Image Component basePath + trailingSlash Tests development mode should correctly load image src from string"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/default/test/index.test.ts": {
      "passed": [
        "Image Component Default Tests production mode Fill-mode tests should add 100% width and height to fill images",
        "Image Component Default Tests production mode Fill-mode tests should add position styles to fill images",
        "Image Component Default Tests production mode Fill-mode tests should add position:absolute to fill images",
        "Image Component Default Tests production mode Fill-mode tests should include a data-attribute on fill images",
        "Image Component Default Tests production mode should apply filter style after image loads",
        "Image Component Default Tests production mode should apply style inheritance for img elements but not wrapper elements",
        "Image Component Default Tests production mode should be valid HTML",
        "Image Component Default Tests production mode should callback native onError even when error before hydration",
        "Image Component Default Tests production mode should callback native onError when error occurred while loading image",
        "Image Component Default Tests production mode should callback native onLoad with sythetic event",
        "Image Component Default Tests production mode should callback onLoadingComplete when image is fully loaded",
        "Image Component Default Tests production mode should correctly ignore prose styles",
        "Image Component Default Tests production mode should correctly rotate image",
        "Image Component Default Tests production mode should create images folder in static/media for edge runtime",
        "Image Component Default Tests production mode should emit image for next/dynamic with non ssr case",
        "Image Component Default Tests production mode should handle the styles prop appropriately",
        "Image Component Default Tests production mode should have blurry placeholder when enabled",
        "Image Component Default Tests production mode should have data url placeholder when enabled",
        "Image Component Default Tests production mode should lazy load with placeholder=blur",
        "Image Component Default Tests production mode should load the images",
        "Image Component Default Tests production mode should not create an image folder in server/chunks",
        "Image Component Default Tests production mode should not pass through user-provided srcset (causing a flash)",
        "Image Component Default Tests production mode should preload priority images",
        "Image Component Default Tests production mode should remove blurry placeholder after image loads",
        "Image Component Default Tests production mode should remove data url placeholder after image loads",
        "Image Component Default Tests production mode should render as unoptimized with empty string src prop",
        "Image Component Default Tests production mode should render as unoptimized with missing src prop",
        "Image Component Default Tests production mode should render correct objectFit when blurDataURL and fill",
        "Image Component Default Tests production mode should render correct objectFit when data url placeholder and fill",
        "Image Component Default Tests production mode should render no wrappers or sizers",
        "Image Component Default Tests production mode should render picture via getImageProps",
        "Image Component Default Tests production mode should update the image on src change",
        "Image Component Default Tests production mode should warn when legacy prop layout=fill",
        "Image Component Default Tests production mode should warn when legacy prop layout=responsive",
        "Image Component Default Tests production mode should work when using flexbox",
        "Image Component Default Tests production mode should work when using overrideSrc prop",
        "Image Component Default Tests production mode should work with image with blob src",
        "Image Component Default Tests production mode should work with sizes and automatically use responsive srcset"
      ],
      "failed": [],
      "pending": [
        "Image Component Default Tests development mode Fill-mode tests should add 100% width and height to fill images",
        "Image Component Default Tests development mode Fill-mode tests should add position styles to fill images",
        "Image Component Default Tests development mode Fill-mode tests should add position:absolute to fill images",
        "Image Component Default Tests development mode Fill-mode tests should include a data-attribute on fill images",
        "Image Component Default Tests development mode Fill-mode tests should log warnings when using fill mode incorrectly",
        "Image Component Default Tests development mode Fill-mode tests should not log incorrect warnings",
        "Image Component Default Tests development mode Fill-mode tests should not log warnings when image unmounts",
        "Image Component Default Tests development mode should apply filter style after image loads",
        "Image Component Default Tests development mode should apply style inheritance for img elements but not wrapper elements",
        "Image Component Default Tests development mode should be valid HTML",
        "Image Component Default Tests development mode should callback native onError even when error before hydration",
        "Image Component Default Tests development mode should callback native onError when error occurred while loading image",
        "Image Component Default Tests development mode should callback native onLoad with sythetic event",
        "Image Component Default Tests development mode should callback onLoadingComplete when image is fully loaded",
        "Image Component Default Tests development mode should correctly ignore prose styles",
        "Image Component Default Tests development mode should emit image for next/dynamic with non ssr case",
        "Image Component Default Tests development mode should handle the styles prop appropriately",
        "Image Component Default Tests development mode should have blurry placeholder when enabled",
        "Image Component Default Tests development mode should have data url placeholder when enabled",
        "Image Component Default Tests development mode should lazy load with placeholder=blur",
        "Image Component Default Tests development mode should load the images",
        "Image Component Default Tests development mode should not pass through user-provided srcset (causing a flash)",
        "Image Component Default Tests development mode should not warn when Image is child of p",
        "Image Component Default Tests development mode should not warn when data url image with fill and sizes props",
        "Image Component Default Tests development mode should not warn when svg, even if with loader prop or without",
        "Image Component Default Tests development mode should preload priority images",
        "Image Component Default Tests development mode should remove blurry placeholder after image loads",
        "Image Component Default Tests development mode should remove data url placeholder after image loads",
        "Image Component Default Tests development mode should render correct objectFit when blurDataURL and fill",
        "Image Component Default Tests development mode should render correct objectFit when data url placeholder and fill",
        "Image Component Default Tests development mode should render no wrappers or sizers",
        "Image Component Default Tests development mode should render picture via getImageProps",
        "Image Component Default Tests development mode should show empty string src error",
        "Image Component Default Tests development mode should show error when CSS position changed on fill image",
        "Image Component Default Tests development mode should show error when invalid Infinity width prop",
        "Image Component Default Tests development mode should show error when invalid height prop",
        "Image Component Default Tests development mode should show error when invalid width prop",
        "Image Component Default Tests development mode should show error when missing height prop",
        "Image Component Default Tests development mode should show error when missing width prop",
        "Image Component Default Tests development mode should show error when static import and placeholder=blur and blurDataUrl is missing",
        "Image Component Default Tests development mode should show error when string src and placeholder=blur and blurDataURL is missing",
        "Image Component Default Tests development mode should show error when width prop on fill image",
        "Image Component Default Tests development mode should show invalid src error",
        "Image Component Default Tests development mode should show invalid src error when protocol-relative",
        "Image Component Default Tests development mode should show invalid src with leading space",
        "Image Component Default Tests development mode should show invalid src with trailing space",
        "Image Component Default Tests development mode should show missing alt error",
        "Image Component Default Tests development mode should show missing src error",
        "Image Component Default Tests development mode should update the image on src change",
        "Image Component Default Tests development mode should warn at most once even after state change",
        "Image Component Default Tests development mode should warn when legacy prop layout=fill",
        "Image Component Default Tests development mode should warn when legacy prop layout=responsive",
        "Image Component Default Tests development mode should warn when loader is missing width",
        "Image Component Default Tests development mode should warn when priority prop is missing on LCP image",
        "Image Component Default Tests development mode should warn when using a very small image with placeholder=blur",
        "Image Component Default Tests development mode should work when using flexbox",
        "Image Component Default Tests development mode should work when using overrideSrc prop",
        "Image Component Default Tests development mode should work with image with blob src",
        "Image Component Default Tests development mode should work with sizes and automatically use responsive srcset"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/default/test/static.test.ts": {
      "passed": [
        "Build Error Tests production mode should throw build error when import statement is used with missing file",
        "Static Image Component Tests production mode Should allow an image with a static src to omit height and width",
        "Static Image Component Tests production mode Should automatically provide an image height and width",
        "Static Image Component Tests production mode Should use immutable cache-control header even when unoptimized",
        "Static Image Component Tests production mode Should use immutable cache-control header for static import",
        "Static Image Component Tests production mode should add a blur placeholder a statically imported jpg",
        "Static Image Component Tests production mode should add a blur placeholder a statically imported png",
        "Static Image Component Tests production mode should add a blur placeholder a statically imported png with fill",
        "Static Image Component Tests production mode should add a data URL placeholder to an image",
        "Static Image Component Tests production mode should add placeholder even when blurDataURL aspect ratio does not match width/height ratio",
        "Static Image Component Tests production mode should add placeholder with blurDataURL and fill",
        "Static Image Component Tests production mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
        "Static Image Component Tests production mode should load direct imported image",
        "Static Image Component Tests production mode should load staticprops imported image",
        "Static Image Component Tests production mode should use height prop to adjust both width and height",
        "Static Image Component Tests production mode should use width and height prop to override import",
        "Static Image Component Tests production mode should use width prop to adjust both width and height"
      ],
      "failed": [],
      "pending": [
        "Static Image Component Tests development mode Should allow an image with a static src to omit height and width",
        "Static Image Component Tests development mode Should automatically provide an image height and width",
        "Static Image Component Tests development mode should add a blur placeholder a statically imported jpg",
        "Static Image Component Tests development mode should add a blur placeholder a statically imported png",
        "Static Image Component Tests development mode should add a blur placeholder a statically imported png with fill",
        "Static Image Component Tests development mode should add a data URL placeholder to an image",
        "Static Image Component Tests development mode should add placeholder even when blurDataURL aspect ratio does not match width/height ratio",
        "Static Image Component Tests development mode should add placeholder with blurDataURL and fill",
        "Static Image Component Tests development mode should have <head> containing <meta name=\"viewport\"> followed by <link rel=\"preload\"> for priority image",
        "Static Image Component Tests development mode should load direct imported image",
        "Static Image Component Tests development mode should load staticprops imported image",
        "Static Image Component Tests development mode should use height prop to adjust both width and height",
        "Static Image Component Tests development mode should use width and height prop to override import",
        "Static Image Component Tests development mode should use width prop to adjust both width and height"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/export-config/test/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "next/image with output export config development mode should error"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/image-from-node-modules/test/index.test.ts": {
      "passed": [
        "Image Component from node_modules development mode should apply image config for node_modules",
        "Image Component from node_modules prod mode production mode should apply image config for node_modules"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/invalid-image-import/test/index.test.ts": {
      "passed": [
        "Missing Import Image Tests production mode should show error"
      ],
      "failed": [],
      "pending": [
        "Missing Import Image Tests development mode should show error"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/loader-config-default-loader-with-file/test/index.test.ts": {
      "passed": [
        "Image Loader Config development mode - component should work with loader prop",
        "Image Loader Config development mode - component should work with loaderFile config, leaving default image optimization enabled",
        "Image Loader Config development mode - getImageProps should work with loader prop",
        "Image Loader Config development mode - getImageProps should work with loaderFile config, leaving default image optimization enabled",
        "Image Loader Config production mode - component should work with loader prop",
        "Image Loader Config production mode - component should work with loaderFile config, leaving default image optimization enabled",
        "Image Loader Config production mode - getImageProps should work with loader prop",
        "Image Loader Config production mode - getImageProps should work with loaderFile config, leaving default image optimization enabled"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/loader-config-edge-runtime/test/index.test.ts": {
      "passed": [
        "Image Loader Config with Edge Runtime production mode should add \"src\" to img1 based on the loader config",
        "Image Loader Config with Edge Runtime production mode should add \"src\" to img2 based on the loader prop",
        "Image Loader Config with Edge Runtime production mode should add \"srcset\" to img1 based on the loader config",
        "Image Loader Config with Edge Runtime production mode should add \"srcset\" to img2 based on the loader prop"
      ],
      "failed": [],
      "pending": [
        "Image Loader Config with Edge Runtime development mode should add \"src\" to img1 based on the loader config",
        "Image Loader Config with Edge Runtime development mode should add \"src\" to img2 based on the loader prop",
        "Image Loader Config with Edge Runtime development mode should add \"srcset\" to img1 based on the loader config",
        "Image Loader Config with Edge Runtime development mode should add \"srcset\" to img2 based on the loader prop"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/loader-config/test/index.test.ts": {
      "passed": [
        "Image Loader Config new development mode - component should work with loader prop",
        "Image Loader Config new development mode - component should work with loaderFile config",
        "Image Loader Config new development mode - getImageProps should work with loader prop",
        "Image Loader Config new development mode - getImageProps should work with loaderFile config",
        "Image Loader Config new production mode - component should work with loader prop",
        "Image Loader Config new production mode - component should work with loaderFile config",
        "Image Loader Config new production mode - getImageProps should work with loader prop",
        "Image Loader Config new production mode - getImageProps should work with loaderFile config"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/middleware/test/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Image with middleware in edge func development mode should not error"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/react-virtualized/test/index.test.ts": {
      "passed": [
        "react-virtualized wrapping next/image production mode should not cancel requests for images"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/svgo-webpack/test/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "svgo-webpack with Image Component development mode should print error when invalid Image usage",
        "svgo-webpack with Image Component production mode should not fail to build invalid usage of the Image component"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/trailing-slash/test/index.test.ts": {
      "passed": [
        "Image Component Trailing Slash Tests production mode should include trailing slash when trailingSlash is set on config file during next start"
      ],
      "failed": [],
      "pending": [
        "Image Component Trailing Slash Tests development mode should include trailing slash when trailingSlash is set on config file during next dev"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/typescript/test/index.test.ts": {
      "passed": [
        "TypeScript Image Component production mode should fail to build invalid usage of the Image component",
        "TypeScript Image Component production mode should remove global image types when disabled",
        "TypeScript Image Component should remove global image types when disabled (dev)"
      ],
      "failed": [],
      "pending": [
        "TypeScript Image Component development mode should have image types when enabled",
        "TypeScript Image Component development mode should print error when invalid Image usage",
        "TypeScript Image Component development mode should render the valid Image usage and not print error"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/unicode/test/index.test.ts": {
      "passed": [
        "Image Component Unicode Image URL production mode should load external image with space",
        "Image Component Unicode Image URL production mode should load external unicode image",
        "Image Component Unicode Image URL production mode should load internal image with space",
        "Image Component Unicode Image URL production mode should load internal unicode image",
        "Image Component Unicode Image URL production mode should load static unicode image"
      ],
      "failed": [],
      "pending": [
        "Image Component Unicode Image URL development mode should load external image with space",
        "Image Component Unicode Image URL development mode should load external unicode image",
        "Image Component Unicode Image URL development mode should load internal image with space",
        "Image Component Unicode Image URL development mode should load internal unicode image",
        "Image Component Unicode Image URL development mode should load static unicode image"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/next-image-new/unoptimized/test/index.test.ts": {
      "passed": [
        "Unoptimized Image Tests development mode - component should not optimize any image",
        "Unoptimized Image Tests development mode - getImageProps should not optimize any image",
        "Unoptimized Image Tests production mode - component should not optimize any image",
        "Unoptimized Image Tests production mode - getImageProps should not optimize any image"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/no-op-export/test/index.test.js": {
      "passed": [
        "no-op export production mode should not error for all server-side pages build",
        "no-op export production mode should not error for empty exportPathMap"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/no-override-next-props/test/index.test.js": {
      "passed": [
        "Dynamic require should show error when a Next prop is returned in _app.getInitialProps"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/no-page-props/test/index.test.js": {
      "passed": [
        "Error no pageProps production mode should load 404 page correctly",
        "Error no pageProps production mode should load auto-export page correctly",
        "Error no pageProps production mode should load getServerSideProps page correctly",
        "Error no pageProps production mode should load getStaticProps page correctly",
        "Error no pageProps production mode should navigate between pages correctly"
      ],
      "failed": [],
      "pending": [
        "Error no pageProps development mode should load 404 page correctly",
        "Error no pageProps development mode should load auto-export page correctly",
        "Error no pageProps development mode should load getServerSideProps page correctly",
        "Error no pageProps development mode should load getStaticProps page correctly",
        "Error no pageProps development mode should navigate between pages correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/node-fetch-keep-alive/test/index.test.js": {
      "passed": [
        "node-fetch-keep-alive dev should send keep-alive for getServerSideProps",
        "node-fetch-keep-alive dev should send keep-alive for getStaticPaths",
        "node-fetch-keep-alive dev should send keep-alive for getStaticProps",
        "node-fetch-keep-alive dev should send keep-alive for json API",
        "node-fetch-keep-alive production mode should send keep-alive for getServerSideProps",
        "node-fetch-keep-alive production mode should send keep-alive for getStaticPaths",
        "node-fetch-keep-alive production mode should send keep-alive for getStaticProps",
        "node-fetch-keep-alive production mode should send keep-alive for json API"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/non-next-dist-exclude/test/index.test.js": {
      "passed": [
        "Non-Next externalization production mode Externalized non-Next dist-using package"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/non-standard-node-env-warning/test/index.test.js": {
      "passed": [
        "Non-Standard NODE_ENV production mode should show the warning with NODE_ENV set to development with next build",
        "Non-Standard NODE_ENV production mode should show the warning with NODE_ENV set to development with next start",
        "Non-Standard NODE_ENV should not show the warning with NODE_ENV set to valid value",
        "Non-Standard NODE_ENV should not show the warning with NODE_ENV set to valid value (custom server)",
        "Non-Standard NODE_ENV should not show the warning with no NODE_ENV set",
        "Non-Standard NODE_ENV should show the warning with NODE_ENV set to invalid value",
        "Non-Standard NODE_ENV should show the warning with NODE_ENV set to invalid value (custom server)",
        "Non-Standard NODE_ENV should show the warning with NODE_ENV set to production with next dev"
      ],
      "failed": [
        "Non-Standard NODE_ENV production mode should still DCE NODE_ENV specific code"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/not-found-revalidate/test/index.test.js": {
      "passed": [
        "SSG notFound revalidate production mode should revalidate after notFound is returned for fallback: blocking",
        "SSG notFound revalidate production mode should revalidate after notFound is returned for fallback: true",
        "SSG notFound revalidate production mode should revalidate page when notFund returned during build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/nullish-config/test/index.test.js": {
      "passed": [
        "Nullish configs in next.config.js production mode should ignore configs set to `null` in next.config.js",
        "Nullish configs in next.config.js production mode should ignore configs set to `undefined` in next.config.js"
      ],
      "failed": [],
      "pending": [
        "Nullish configs in next.config.js development mode should ignore configs set to `null` in next.config.js",
        "Nullish configs in next.config.js development mode should ignore configs set to `undefined` in next.config.js"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/numeric-sep/test/index.test.js": {
      "passed": [
        "Numeric Separator Support production mode should successfully build for a JavaScript file"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/ondemand/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "On Demand Entries should compile pages for JSON page requests",
        "On Demand Entries should compile pages for SSR",
        "On Demand Entries should dispose inactive pages",
        "On Demand Entries should navigate to pages with dynamic imports",
        "On Demand Entries should pass"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/optional-chaining-nullish-coalescing/test/index.test.js": {
      "passed": [
        "Optional chaining and nullish coalescing support production mode should support nullish coalescing",
        "Optional chaining and nullish coalescing support production mode should support optional chaining"
      ],
      "failed": [],
      "pending": [
        "Optional chaining and nullish coalescing support development mode should support nullish coalescing",
        "Optional chaining and nullish coalescing support development mode should support optional chaining"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/page-config/test/index.test.js": {
      "passed": [
        "Page Config production mode builds without error when export const config is used outside page",
        "Page Config production mode shows error when page config has invalid properties",
        "Page Config production mode shows error when page config has invalid property value",
        "Page Config production mode shows error when page config has spread properties",
        "Page Config production mode shows error when page config is export from",
        "Page Config production mode shows error when page config is imported and exported",
        "Page Config production mode shows valid error when page config has no init",
        "Page Config production mode shows valid error when page config is a string"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/page-extensions/test/index.test.js": {
      "passed": [
        "Page Extensions production mode should not throw if .d.ts file inside the pages folder",
        "Page Extensions production mode should throw if pageExtensions has invalid extensions",
        "Page Extensions production mode should throw if pageExtensions is an empty array",
        "Page Extensions production mode should use the default pageExtensions if set to undefined"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/plugin-mdx-rs/test/index.test.js": {
      "passed": [
        "MDX-rs Configuration MDX-rs Plugin support should render an MDX page correctly",
        "MDX-rs Configuration MDX-rs Plugin support should render an MDX page with component correctly",
        "MDX-rs Configuration MDX-rs Plugin support should render an MDX page with globally provided components (from `mdx-components.js`) correctly",
        "MDX-rs Configuration MDX-rs Plugin support with mdx transform options should render an MDX page correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/polyfilling-minimal/test/index.test.js": {
      "passed": [
        "Polyfilling (minimal) production mode should compile successfully"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/polyfills/test/index.test.js": {
      "passed": [
        "Polyfills production mode should alias fetch",
        "Polyfills production mode should allow using process.env when there is an element with `id` of `process`",
        "Polyfills production mode should contain generated page count in output"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/port-env-var/test/index.test.js": {
      "passed": [
        "PORT environment variable production mode should serve on the configured port"
      ],
      "failed": [],
      "pending": [
        "PORT environment variable development mode should serve on the configured port"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/preload-viewport/test/index.test.js": {
      "passed": [
        "Prefetching Links in viewport production mode should correctly omit pre-generated dynamic pages from SSG manifest",
        "Prefetching Links in viewport production mode should de-dupe inflight SSG requests",
        "Prefetching Links in viewport production mode should handle timed out prefetch correctly",
        "Prefetching Links in viewport production mode should inject a <script> tag when onMouseEnter (even with invalid ref)",
        "Prefetching Links in viewport production mode should inject script on hover with prefetching disabled",
        "Prefetching Links in viewport production mode should inject script on hover with prefetching disabled and fetch data",
        "Prefetching Links in viewport production mode should not duplicate prefetches",
        "Prefetching Links in viewport production mode should not have unhandledRejection when failing to prefetch on link",
        "Prefetching Links in viewport production mode should not prefetch when prefetch is explicitly set to false",
        "Prefetching Links in viewport production mode should not prefetch with bot UA",
        "Prefetching Links in viewport production mode should not re-prefetch for an already prefetched page",
        "Prefetching Links in viewport production mode should prefetch data files",
        "Prefetching Links in viewport production mode should prefetch data files when mismatched",
        "Prefetching Links in viewport production mode should prefetch rewritten href with link in viewport onload",
        "Prefetching Links in viewport production mode should prefetch with a different asPath for a prefetched page",
        "Prefetching Links in viewport production mode should prefetch with link in viewport and inject script on hover",
        "Prefetching Links in viewport production mode should prefetch with link in viewport on scroll",
        "Prefetching Links in viewport production mode should prefetch with link in viewport onload",
        "Prefetching Links in viewport production mode should prefetch with link in viewport when href changes",
        "Prefetching Links in viewport production mode should prefetch with non-bot UA"
      ],
      "failed": [],
      "pending": [
        "Prefetching Links in viewport production mode should not prefetch already loaded scripts"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/prerender-export/test/index.test.js": {
      "passed": [
        "SSG Prerender export production mode export mode should copy prerender files and honor exportTrailingSlash"
      ],
      "failed": [
        "SSG Prerender export production mode export mode should navigate between pages successfully"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/prerender-fallback-encoding/test/index.test.js": {
      "passed": [
        "Fallback path encoding production mode should handle non-prerendered paths correctly",
        "Fallback path encoding production mode should navigate client-side correctly with interpolating",
        "Fallback path encoding production mode should navigate client-side correctly with string href",
        "Fallback path encoding production mode should output paths correctly",
        "Fallback path encoding production mode should render correctly in the browser for prerender paths",
        "Fallback path encoding production mode should respond with the prerendered data correctly",
        "Fallback path encoding production mode should respond with the prerendered pages correctly"
      ],
      "failed": [],
      "pending": [
        "Fallback path encoding development mode should navigate client-side correctly with interpolating",
        "Fallback path encoding development mode should navigate client-side correctly with string href",
        "Fallback path encoding development mode should render correctly in the browser for prerender paths",
        "Fallback path encoding development mode should respond with the prerendered data correctly",
        "Fallback path encoding development mode should respond with the prerendered pages correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/prerender-invalid-catchall-params/test/index.test.js": {
      "passed": [
        "Invalid Prerender Catchall Params production mode should fail the build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/prerender-invalid-paths/test/index.test.js": {
      "passed": [
        "Legacy Prerender production mode handles old getStaticParams should fail the build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/prerender-no-revalidate/test/index.test.js": {
      "passed": [
        "SSG Prerender No Revalidate production mode [/] should not revalidate /_next/data when set to false",
        "SSG Prerender No Revalidate production mode [/] should not revalidate when set to false",
        "SSG Prerender No Revalidate production mode [/named] should not revalidate /_next/data when set to false",
        "SSG Prerender No Revalidate production mode [/named] should not revalidate when set to false",
        "SSG Prerender No Revalidate production mode [/nested/named] should not revalidate /_next/data when set to false",
        "SSG Prerender No Revalidate production mode [/nested/named] should not revalidate when set to false",
        "SSG Prerender No Revalidate production mode [/nested] should not revalidate /_next/data when set to false",
        "SSG Prerender No Revalidate production mode [/nested] should not revalidate when set to false"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/prerender-preview/test/index.test.js": {
      "passed": [
        "Prerender Preview Mode production mode should compile successfully",
        "Prerender Preview Mode production mode should enable preview mode",
        "Prerender Preview Mode production mode should expire cookies with a maxAge",
        "Prerender Preview Mode production mode should not return fallback page on preview request",
        "Prerender Preview Mode production mode should pass the preview data to API routes",
        "Prerender Preview Mode production mode should pass undefined to API routes when not in preview",
        "Prerender Preview Mode production mode should return cookies to be expired on reset request",
        "Prerender Preview Mode production mode should return cookies to be expired on reset request with path specified",
        "Prerender Preview Mode production mode should return correct caching headers for data preview request",
        "Prerender Preview Mode production mode should return prerendered page on first request",
        "Prerender Preview Mode production mode should return prerendered page on second request",
        "Prerender Preview Mode production mode should set custom path cookies",
        "Prerender Preview Mode production mode should start production application",
        "Prerender Preview Mode production mode should throw error when setting too large of preview data"
      ],
      "failed": [],
      "pending": [
        "Prerender Preview Mode development mode should enable preview mode",
        "Prerender Preview Mode development mode should fetch live static props with preview active",
        "Prerender Preview Mode development mode should fetch prerendered data",
        "Prerender Preview Mode development mode should fetch preview data on CST",
        "Prerender Preview Mode development mode should fetch preview data on SSR",
        "Prerender Preview Mode development mode should return cookies to be expired after dev server reboot",
        "Prerender Preview Mode development mode should start development application",
        "Prerender Preview Mode development mode should start the client-side browser"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/prerender-revalidate/test/index.test.js": {
      "passed": [
        "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded production mode [/] should regenerate /_next/data when revalidate time exceeded",
        "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded production mode [/] should regenerate page when revalidate time exceeded",
        "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded production mode [/named] should regenerate /_next/data when revalidate time exceeded",
        "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded production mode [/named] should regenerate page when revalidate time exceeded",
        "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded production mode [/nested/named] should regenerate /_next/data when revalidate time exceeded",
        "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded production mode [/nested/named] should regenerate page when revalidate time exceeded",
        "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded production mode [/nested] should regenerate /_next/data when revalidate time exceeded",
        "SSG Prerender Revalidate [regression] production mode and incremental cache size exceeded production mode [/nested] should regenerate page when revalidate time exceeded",
        "SSG Prerender Revalidate production mode [/] should regenerate /_next/data when revalidate time exceeded",
        "SSG Prerender Revalidate production mode [/] should regenerate page when revalidate time exceeded",
        "SSG Prerender Revalidate production mode [/named] should regenerate /_next/data when revalidate time exceeded",
        "SSG Prerender Revalidate production mode [/named] should regenerate page when revalidate time exceeded",
        "SSG Prerender Revalidate production mode [/nested/named] should regenerate /_next/data when revalidate time exceeded",
        "SSG Prerender Revalidate production mode [/nested/named] should regenerate page when revalidate time exceeded",
        "SSG Prerender Revalidate production mode [/nested] should regenerate /_next/data when revalidate time exceeded",
        "SSG Prerender Revalidate production mode [/nested] should regenerate page when revalidate time exceeded",
        "SSG Prerender Revalidate production mode should return cache-control header on 304 status"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/prerender/test/index.test.js": {
      "passed": [
        "SSG Prerender development mode getStaticPaths should not cache getStaticPaths errors",
        "SSG Prerender development mode getStaticPaths should work with firebase import and getStaticPaths"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/preview-fallback/test/index.test.js": {
      "passed": [
        "Preview mode with fallback pages production mode should get preview cookie correctly",
        "Preview mode with fallback pages production mode should not write preview dynamic SSG page to cache no fallback",
        "Preview mode with fallback pages production mode should not write preview dynamic non-prerendered SSG page to cache with fallback",
        "Preview mode with fallback pages production mode should not write preview dynamic prerendered SSG page to cache no fallback",
        "Preview mode with fallback pages production mode should not write preview dynamic prerendered SSG page to cache with fallback",
        "Preview mode with fallback pages production mode should not write preview index SSG page to cache"
      ],
      "failed": [],
      "pending": [
        "Preview mode with fallback pages development mode should get preview cookie correctly",
        "Preview mode with fallback pages development mode should not write preview dynamic SSG page to cache no fallback",
        "Preview mode with fallback pages development mode should not write preview dynamic non-prerendered SSG page to cache with fallback",
        "Preview mode with fallback pages development mode should not write preview dynamic prerendered SSG page to cache no fallback",
        "Preview mode with fallback pages development mode should not write preview dynamic prerendered SSG page to cache with fallback",
        "Preview mode with fallback pages development mode should not write preview index SSG page to cache"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/production-browser-sourcemaps/test/index.test.js": {
      "passed": [],
      "failed": [
        "Production browser sourcemaps production mode Server support correctly generated the source map",
        "Production browser sourcemaps production mode Server support includes sourcemaps for all browser files"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/production-build-dir/test/index.test.js": {
      "passed": [
        "Production Custom Build Directory production mode With basic usage should render the page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/production-config/test/index.test.js": {
      "passed": [
        "Production Config Usage production mode env should allow __ within env key",
        "Production Config Usage production mode env should fail with NEXT_RUNTIME in env key",
        "Production Config Usage production mode env should fail with NODE_ in env key",
        "Production Config Usage production mode env should fail with leading __ in env key",
        "Production Config Usage production mode with generateBuildId should add the custom buildid"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/production-nav/test/index.test.js": {
      "passed": [
        "Production Usage production mode should navigate forward and back correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/production-start-no-build/test/index.test.js": {
      "passed": [
        "Production Usage without production build should show error when there is no production build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/query-with-encoding/test/index.test.js": {
      "passed": [
        "Query String with Encoding production mode new line should have correct query on Router#push",
        "Query String with Encoding production mode new line should have correct query on SSR",
        "Query String with Encoding production mode new line should have correct query on complex client-side <Link>",
        "Query String with Encoding production mode new line should have correct query on simple client-side <Link>",
        "Query String with Encoding production mode percent should have correct query on Router#push",
        "Query String with Encoding production mode percent should have correct query on SSR",
        "Query String with Encoding production mode percent should have correct query on complex client-side <Link>",
        "Query String with Encoding production mode percent should have correct query on simple client-side <Link>",
        "Query String with Encoding production mode plus should have correct query on Router#push",
        "Query String with Encoding production mode plus should have correct query on SSR",
        "Query String with Encoding production mode plus should have correct query on complex client-side <Link>",
        "Query String with Encoding production mode plus should have correct query on simple client-side <Link>",
        "Query String with Encoding production mode trailing space should have correct query on Router#push",
        "Query String with Encoding production mode trailing space should have correct query on SSR",
        "Query String with Encoding production mode trailing space should have correct query on complex client-side <Link>",
        "Query String with Encoding production mode trailing space should have correct query on simple client-side <Link>"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/re-export-all-exports-from-page-disallowed/test/index.test.js": {
      "passed": [
        "Re-export all exports from page is disallowed production mode builds without error when no `export * from \"...\"` is used in pages",
        "Re-export all exports from page is disallowed production mode shows error when a page re-export all exports"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/react-current-version/test/index.test.js": {
      "passed": [
        "Basics default setting dev hydrates correctly for normal page",
        "Basics default setting dev no warnings for image related link props",
        "Basics default setting dev should contain dynamicIds in next data for dynamic imports",
        "Basics default setting dev should only render once in SSR",
        "Basics default setting dev useId() values should match on hydration",
        "Basics production mode default setting prod hydrates correctly for normal page",
        "Basics production mode default setting prod no warnings for image related link props",
        "Basics production mode default setting prod should contain dynamicIds in next data for dynamic imports",
        "Basics production mode default setting prod should only render once in SSR",
        "Basics production mode default setting prod useId() values should match on hydration",
        "Concurrent mode in the experimental-edge runtime dev <RouteAnnouncer /> should not have the initial route announced",
        "Concurrent mode in the experimental-edge runtime dev flushes styled-jsx styles as the page renders",
        "Concurrent mode in the experimental-edge runtime dev should not have invalid config warning",
        "Concurrent mode in the nodejs runtime dev <RouteAnnouncer /> should not have the initial route announced",
        "Concurrent mode in the nodejs runtime dev flushes styled-jsx styles as the page renders",
        "Concurrent mode in the nodejs runtime dev should not have invalid config warning",
        "production mode Concurrent mode in the experimental-edge runtime prod <RouteAnnouncer /> should not have the initial route announced",
        "production mode Concurrent mode in the experimental-edge runtime prod flushes styled-jsx styles as the page renders",
        "production mode Concurrent mode in the experimental-edge runtime prod should not have invalid config warning",
        "production mode Concurrent mode in the nodejs runtime prod <RouteAnnouncer /> should not have the initial route announced",
        "production mode Concurrent mode in the nodejs runtime prod flushes styled-jsx styles as the page renders",
        "production mode Concurrent mode in the nodejs runtime prod should not have invalid config warning"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/react-profiling-mode/test/index.test.js": {
      "passed": [
        "React Profiling Mode production mode with config enabled should have used the react-dom profiling bundle for client component",
        "React Profiling Mode production mode with config enabled should have used the react-dom profiling bundle for pages",
        "React Profiling Mode production mode with config enabled should have used the react-dom profiling bundle for server component",
        "React Profiling Mode production mode without config enabled should not have used the react-dom profiling bundle"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/react-streaming/test/index.test.js": {
      "passed": [
        "production mode streaming prod prod should not stream to crawlers or google pagerender bot",
        "production mode streaming prod prod should render fallback if error raised from suspense during streaming",
        "production mode streaming prod prod should support streaming for fizz response",
        "streaming dev dev should not stream to crawlers or google pagerender bot",
        "streaming dev dev should render 500 error correctly",
        "streaming dev dev should render fallback if error raised from suspense during streaming",
        "streaming dev dev should support streaming for fizz response"
      ],
      "failed": [
        "production mode streaming prod prod should render 500 error correctly"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/read-only-source-hmr/test/index.test.js": {
      "passed": [
        "Read-only source HMR should detect a new page",
        "Read-only source HMR should detect changes to a page",
        "Read-only source HMR should handle page deletion and subsequent recreation"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/relay-graphql-swc-multi-project/test/index.test.js": {
      "passed": [
        "Relay Compiler Transform - Multi Project Config production mode project-a should resolve index page correctly",
        "Relay Compiler Transform - Multi Project Config production mode project-b should resolve index page correctly"
      ],
      "failed": [],
      "pending": [
        "Relay Compiler Transform - Multi Project Config development mode project-a should resolve index page correctly",
        "Relay Compiler Transform - Multi Project Config development mode project-b should resolve index page correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/relay-graphql-swc-single-project/test/index.test.js": {
      "passed": [
        "Relay Compiler Transform - Single Project Config production mode should resolve index page correctly"
      ],
      "failed": [],
      "pending": [
        "Relay Compiler Transform - Single Project Config development mode should resolve index page correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/render-error-on-module-error/test/index.test.js": {
      "passed": ["Module Init Error production mode should render error page"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/render-error-on-top-level-error/with-get-initial-props/test/index.test.js": {
      "passed": [
        "Top Level Error production mode should render error page with getInitialProps"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/render-error-on-top-level-error/without-get-initial-props/test/index.test.js": {
      "passed": ["Top Level Error production mode should render error page"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/repeated-slashes/test/index.test.js": {
      "passed": [
        "404 handling custom _error next dev should handle backslashes correctly",
        "404 handling custom _error next dev should handle double slashes correctly",
        "404 handling custom _error next dev should handle double slashes correctly with encoded",
        "404 handling custom _error next dev should handle double slashes correctly with encoded and hash",
        "404 handling custom _error next dev should handle double slashes correctly with encoded and query",
        "404 handling custom _error next dev should handle double slashes correctly with hash",
        "404 handling custom _error next dev should handle double slashes correctly with query",
        "404 handling custom _error next dev should handle mixed backslashes/forward slashes correctly",
        "404 handling custom _error next dev should handle slashes in next/link correctly",
        "404 handling custom _error next dev should handle slashes in router push correctly",
        "404 handling custom _error next dev should have no error from encoded slashes in router push",
        "404 handling custom _error next dev should normalize repeated slashes in redirects correctly",
        "404 handling custom _error production mode next export should handle backslashes correctly",
        "404 handling custom _error production mode next export should handle double slashes correctly",
        "404 handling custom _error production mode next export should handle double slashes correctly with encoded",
        "404 handling custom _error production mode next export should handle double slashes correctly with encoded and hash",
        "404 handling custom _error production mode next export should handle double slashes correctly with encoded and query",
        "404 handling custom _error production mode next export should handle double slashes correctly with hash",
        "404 handling custom _error production mode next export should handle double slashes correctly with query",
        "404 handling custom _error production mode next export should handle mixed backslashes/forward slashes correctly",
        "404 handling custom _error production mode next export should handle slashes in next/link correctly",
        "404 handling custom _error production mode next export should handle slashes in router push correctly",
        "404 handling custom _error production mode next export should have no error from encoded slashes in router push",
        "404 handling custom _error production mode next start should handle backslashes correctly",
        "404 handling custom _error production mode next start should handle double slashes correctly",
        "404 handling custom _error production mode next start should handle double slashes correctly with encoded",
        "404 handling custom _error production mode next start should handle double slashes correctly with encoded and hash",
        "404 handling custom _error production mode next start should handle double slashes correctly with encoded and query",
        "404 handling custom _error production mode next start should handle double slashes correctly with hash",
        "404 handling custom _error production mode next start should handle double slashes correctly with query",
        "404 handling custom _error production mode next start should handle mixed backslashes/forward slashes correctly",
        "404 handling custom _error production mode next start should handle slashes in next/link correctly",
        "404 handling custom _error production mode next start should handle slashes in router push correctly",
        "404 handling custom _error production mode next start should have no error from encoded slashes in router push",
        "404 handling custom _error production mode next start should normalize repeated slashes in redirects correctly",
        "404 handling pages/404 production mode next dev should handle backslashes correctly",
        "404 handling pages/404 production mode next dev should handle double slashes correctly",
        "404 handling pages/404 production mode next dev should handle double slashes correctly with encoded",
        "404 handling pages/404 production mode next dev should handle double slashes correctly with encoded and hash",
        "404 handling pages/404 production mode next dev should handle double slashes correctly with encoded and query",
        "404 handling pages/404 production mode next dev should handle double slashes correctly with hash",
        "404 handling pages/404 production mode next dev should handle double slashes correctly with query",
        "404 handling pages/404 production mode next dev should handle mixed backslashes/forward slashes correctly",
        "404 handling pages/404 production mode next dev should handle slashes in next/link correctly",
        "404 handling pages/404 production mode next dev should handle slashes in router push correctly",
        "404 handling pages/404 production mode next dev should have no error from encoded slashes in router push",
        "404 handling pages/404 production mode next dev should normalize repeated slashes in redirects correctly",
        "404 handling pages/404 production mode production mode next export should handle backslashes correctly",
        "404 handling pages/404 production mode production mode next export should handle double slashes correctly",
        "404 handling pages/404 production mode production mode next export should handle double slashes correctly with encoded",
        "404 handling pages/404 production mode production mode next export should handle double slashes correctly with encoded and hash",
        "404 handling pages/404 production mode production mode next export should handle double slashes correctly with encoded and query",
        "404 handling pages/404 production mode production mode next export should handle double slashes correctly with hash",
        "404 handling pages/404 production mode production mode next export should handle double slashes correctly with query",
        "404 handling pages/404 production mode production mode next export should handle mixed backslashes/forward slashes correctly",
        "404 handling pages/404 production mode production mode next export should handle slashes in next/link correctly",
        "404 handling pages/404 production mode production mode next export should handle slashes in router push correctly",
        "404 handling pages/404 production mode production mode next export should have no error from encoded slashes in router push",
        "404 handling pages/404 production mode production mode next start should handle backslashes correctly",
        "404 handling pages/404 production mode production mode next start should handle double slashes correctly",
        "404 handling pages/404 production mode production mode next start should handle double slashes correctly with encoded",
        "404 handling pages/404 production mode production mode next start should handle double slashes correctly with encoded and hash",
        "404 handling pages/404 production mode production mode next start should handle double slashes correctly with encoded and query",
        "404 handling pages/404 production mode production mode next start should handle double slashes correctly with hash",
        "404 handling pages/404 production mode production mode next start should handle double slashes correctly with query",
        "404 handling pages/404 production mode production mode next start should handle mixed backslashes/forward slashes correctly",
        "404 handling pages/404 production mode production mode next start should handle slashes in next/link correctly",
        "404 handling pages/404 production mode production mode next start should handle slashes in router push correctly",
        "404 handling pages/404 production mode production mode next start should have no error from encoded slashes in router push",
        "404 handling pages/404 production mode production mode next start should normalize repeated slashes in redirects correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/required-server-files-ssr-404/test/index.test.js": {
      "passed": [
        "Required Server Files production mode should bubble error correctly for gip page",
        "Required Server Files production mode should bubble error correctly for gsp page",
        "Required Server Files production mode should bubble error correctly for gssp page",
        "Required Server Files production mode should handle 404s properly",
        "Required Server Files production mode should match the index page correctly",
        "Required Server Files production mode should match the root dynamic page correctly",
        "Required Server Files production mode should normalize catch-all rewrite query values correctly",
        "Required Server Files production mode should normalize optional values correctly for API page",
        "Required Server Files production mode should normalize optional values correctly for SSG page",
        "Required Server Files production mode should normalize optional values correctly for SSP page",
        "Required Server Files production mode should not apply trailingSlash redirect",
        "Required Server Files production mode should output required-server-files manifest correctly",
        "Required Server Files production mode should render SSR page correctly",
        "Required Server Files production mode should render SSR page correctly with x-matched-path",
        "Required Server Files production mode should render dynamic SSR page correctly",
        "Required Server Files production mode should render dynamic SSR page correctly with x-matched-path",
        "Required Server Files production mode should render fallback optional catch-all route correctly with x-matched-path and routes-matches",
        "Required Server Files production mode should render fallback page correctly",
        "Required Server Files production mode should render fallback page correctly with x-matched-path and routes-matches",
        "Required Server Files production mode should return data correctly with x-matched-path",
        "Required Server Files production mode should return data correctly with x-matched-path for optional catch-all route"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/revalidate-as-path/test/index.test.js": {
      "passed": [
        "Revalidate asPath Normalizing production mode should render with correct asPath with / requested",
        "Revalidate asPath Normalizing production mode should render with correct asPath with /_next/data /another/index requested",
        "Revalidate asPath Normalizing production mode should render with correct asPath with /_next/data /index requested",
        "Revalidate asPath Normalizing production mode should render with correct asPath with /another/index requested"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/rewrite-with-browser-history/test/index.test.js": {
      "passed": [
        "rewrites persist with browser history actions production mode back-button should go back to rewritten path successfully"
      ],
      "failed": [],
      "pending": [
        "rewrites persist with browser history actions development mode back-button should go back to rewritten path successfully"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/rewrites-client-resolving/test/index.test.js": {
      "passed": [
        "Client-side rewrites resolving production mode should break rewrites chain after matching /category",
        "Client-side rewrites resolving production mode should break rewrites chain when dynamic catch-all route matches",
        "Client-side rewrites resolving production mode should break rewrites chain when dynamic catch-all route multi-level matches",
        "Client-side rewrites resolving production mode should break rewrites chain when dynamic route matches",
        "Client-side rewrites resolving production mode should break rewrites chain when normal page matches"
      ],
      "failed": [],
      "pending": [
        "Client-side rewrites resolving development mode should break rewrites chain after matching /category",
        "Client-side rewrites resolving development mode should break rewrites chain when dynamic catch-all route matches",
        "Client-side rewrites resolving development mode should break rewrites chain when dynamic catch-all route multi-level matches",
        "Client-side rewrites resolving development mode should break rewrites chain when dynamic route matches",
        "Client-side rewrites resolving development mode should break rewrites chain when normal page matches"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/rewrites-destination-query-array/test/index.test.js": {
      "passed": [
        "rewrites destination query production mode should contain all values passed in param as array"
      ],
      "failed": [],
      "pending": [
        "rewrites destination query development mode should contain all values passed in param as array"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/rewrites-has-condition/test/index.test.js": {
      "passed": [
        "rewrites has condition production mode should navigate to a has rewrite without error",
        "rewrites has condition production mode should navigate to a simple rewrite without error"
      ],
      "failed": [],
      "pending": [
        "rewrites has condition development mode should navigate to a has rewrite without error",
        "rewrites has condition development mode should navigate to a simple rewrite without error"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/rewrites-manual-href-as/test/index.test.js": {
      "passed": [
        "rewrites manual href/as production mode should allow manual href/as on dynamic page",
        "rewrites manual href/as production mode should allow manual href/as on index page"
      ],
      "failed": [],
      "pending": [
        "rewrites manual href/as development mode should allow manual href/as on dynamic page",
        "rewrites manual href/as development mode should allow manual href/as on index page"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/root-catchall-cache/test/index.test.js": {
      "passed": [
        "Root Catch-all Cache production mode should cache / correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/root-optional-revalidate/test/index.test.js": {
      "passed": [
        "Root Optional Catch-all Revalidate production mode should render / correctly",
        "Root Optional Catch-all Revalidate production mode should render /a correctly",
        "Root Optional Catch-all Revalidate production mode should render /hello/world correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/route-index/test/index.test.js": {
      "passed": [
        "Route index handling production mode should handle / correctly",
        "Route index handling production mode should handle /index correctly",
        "Route index handling production mode should handle /index/?bar%60%3C%25%22%27%7B%24%2A%25%5C correctly",
        "Route index handling production mode should handle /index/index correctly",
        "Route index handling production mode should handle /index?file%3A%5C correctly"
      ],
      "failed": [],
      "pending": [
        "Route index handling development mode should handle / correctly",
        "Route index handling development mode should handle /index correctly",
        "Route index handling development mode should handle /index/?bar%60%3C%25%22%27%7B%24%2A%25%5C correctly",
        "Route index handling development mode should handle /index/index correctly",
        "Route index handling development mode should handle /index?file%3A%5C correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/route-indexes/test/index.test.js": {
      "passed": [
        "Route indexes handling production mode should handle / correctly",
        "Route indexes handling production mode should handle /api/sub correctly",
        "Route indexes handling production mode should handle /api/sub/another correctly",
        "Route indexes handling production mode should handle /api/sub/another/index correctly",
        "Route indexes handling production mode should handle /api/sub/index correctly",
        "Route indexes handling production mode should handle /api/sub/index/index correctly",
        "Route indexes handling production mode should handle /index correctly",
        "Route indexes handling production mode should handle /index/index correctly",
        "Route indexes handling production mode should handle /nested-index correctly",
        "Route indexes handling production mode should handle /nested-index/index correctly",
        "Route indexes handling production mode should handle /nested-index/index/index correctly",
        "Route indexes handling production mode should handle /sub correctly",
        "Route indexes handling production mode should handle /sub/another correctly",
        "Route indexes handling production mode should handle /sub/another/index correctly",
        "Route indexes handling production mode should handle /sub/index correctly",
        "Route indexes handling production mode should handle /sub/index/index correctly"
      ],
      "failed": [],
      "pending": [
        "Route indexes handling development mode should handle / correctly",
        "Route indexes handling development mode should handle /api/sub correctly",
        "Route indexes handling development mode should handle /api/sub/another correctly",
        "Route indexes handling development mode should handle /api/sub/another/index correctly",
        "Route indexes handling development mode should handle /api/sub/index correctly",
        "Route indexes handling development mode should handle /api/sub/index/index correctly",
        "Route indexes handling development mode should handle /index correctly",
        "Route indexes handling development mode should handle /index/index correctly",
        "Route indexes handling development mode should handle /nested-index correctly",
        "Route indexes handling development mode should handle /nested-index/index correctly",
        "Route indexes handling development mode should handle /nested-index/index/index correctly",
        "Route indexes handling development mode should handle /sub correctly",
        "Route indexes handling development mode should handle /sub/another correctly",
        "Route indexes handling development mode should handle /sub/another/index correctly",
        "Route indexes handling development mode should handle /sub/index correctly",
        "Route indexes handling development mode should handle /sub/index/index correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/route-load-cancel-css/test/index.test.js": {
      "passed": [
        "route cancel via CSS production mode should cancel slow page loads on re-navigation"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/route-load-cancel/test/index.test.js": {
      "passed": [
        "next/dynamic production mode should cancel slow page loads on re-navigation"
      ],
      "failed": [],
      "pending": [
        "next/dynamic development mode should cancel slow page loads on re-navigation"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/router-hash-navigation/test/index.test.js": {
      "passed": [
        "router.isReady production mode scrolls to top when href=\"/\" and url already contains a hash"
      ],
      "failed": [],
      "pending": [
        "router.isReady development mode scrolls to top when href=\"/\" and url already contains a hash"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/router-is-ready-app-gip/test/index.test.js": {
      "passed": [
        "router.isReady with appGip production mode isReady should be true after query update for getStaticProps page with query",
        "router.isReady with appGip production mode isReady should be true immediately for getStaticProps page without query",
        "router.isReady with appGip production mode isReady should be true immediately for pages without getStaticProps",
        "router.isReady with appGip production mode isReady should be true immediately for pages without getStaticProps, with query"
      ],
      "failed": [],
      "pending": [
        "router.isReady with appGip development mode isReady should be true after query update for getStaticProps page with query",
        "router.isReady with appGip development mode isReady should be true immediately for getStaticProps page without query",
        "router.isReady with appGip development mode isReady should be true immediately for pages without getStaticProps",
        "router.isReady with appGip development mode isReady should be true immediately for pages without getStaticProps, with query"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/router-is-ready/test/index.test.js": {
      "passed": [
        "router.isReady production mode isReady should be true after query update for auto-export page with query",
        "router.isReady production mode isReady should be true after query update for dynamic auto-export page with query",
        "router.isReady production mode isReady should be true after query update for dynamic auto-export page without query",
        "router.isReady production mode isReady should be true after query update for getStaticProps page with query",
        "router.isReady production mode isReady should be true immediately for auto-export page without query",
        "router.isReady production mode isReady should be true immediately for getInitialProps page",
        "router.isReady production mode isReady should be true immediately for getInitialProps page with query",
        "router.isReady production mode isReady should be true immediately for getServerSideProps page",
        "router.isReady production mode isReady should be true immediately for getServerSideProps page with query",
        "router.isReady production mode isReady should be true immediately for getStaticProps page without query"
      ],
      "failed": [],
      "pending": [
        "router.isReady development mode isReady should be true after query update for auto-export page with query",
        "router.isReady development mode isReady should be true after query update for dynamic auto-export page with query",
        "router.isReady development mode isReady should be true after query update for dynamic auto-export page without query",
        "router.isReady development mode isReady should be true after query update for getStaticProps page with query",
        "router.isReady development mode isReady should be true immediately for auto-export page without query",
        "router.isReady development mode isReady should be true immediately for getInitialProps page",
        "router.isReady development mode isReady should be true immediately for getInitialProps page with query",
        "router.isReady development mode isReady should be true immediately for getServerSideProps page",
        "router.isReady development mode isReady should be true immediately for getServerSideProps page with query",
        "router.isReady development mode isReady should be true immediately for getStaticProps page without query"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/router-prefetch/test/index.test.js": {
      "passed": [
        "Router prefetch production mode should resolve prefetch promise with invalid href"
      ],
      "failed": [],
      "pending": [
        "Router prefetch development mode should not prefetch",
        "Router prefetch development mode should resolve prefetch promise"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/router-rerender/test/index.test.js": {
      "passed": [
        "router rerender production mode with middleware should not trigger unnecessary rerenders when middleware is used"
      ],
      "failed": [],
      "pending": [
        "router rerender development mode with middleware should not trigger unnecessary rerenders when middleware is used",
        "router rerender development mode with rewrites should not trigger unnecessary rerenders when rewrites are used",
        "router rerender development mode with rewrites should rerender with the correct query parameter if present with rewrites",
        "router rerender production mode with rewrites should not trigger unnecessary rerenders when rewrites are used",
        "router rerender production mode with rewrites should rerender with the correct query parameter if present with rewrites"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/script-loader/test/index.test.js": {
      "passed": [
        "Next.js Script - Primary Strategies - Production Mode production mode Does not duplicate inline scripts",
        "Next.js Script - Primary Strategies - Production Mode production mode Error message is shown if Partytown is not installed locally",
        "Next.js Script - Primary Strategies - Production Mode production mode onReady fires after load event and then on every subsequent re-mount",
        "Next.js Script - Primary Strategies - Production Mode production mode onReady should only fires once after loaded (issue #39993)",
        "Next.js Script - Primary Strategies - Production Mode production mode onload fires correctly",
        "Next.js Script - Primary Strategies - Production Mode production mode priority afterInteractive",
        "Next.js Script - Primary Strategies - Production Mode production mode priority beforeInteractive",
        "Next.js Script - Primary Strategies - Production Mode production mode priority beforeInteractive - older version",
        "Next.js Script - Primary Strategies - Production Mode production mode priority beforeInteractive on navigate",
        "Next.js Script - Primary Strategies - Production Mode production mode priority beforeInteractive with inline script should execute",
        "Next.js Script - Primary Strategies - Production Mode production mode priority lazyOnload",
        "Next.js Script - Primary Strategies - Strict Mode Does not duplicate inline scripts",
        "Next.js Script - Primary Strategies - Strict Mode onReady fires after load event and then on every subsequent re-mount",
        "Next.js Script - Primary Strategies - Strict Mode onReady should only fires once after loaded (issue #39993)",
        "Next.js Script - Primary Strategies - Strict Mode onload fires correctly",
        "Next.js Script - Primary Strategies - Strict Mode priority afterInteractive",
        "Next.js Script - Primary Strategies - Strict Mode priority beforeInteractive",
        "Next.js Script - Primary Strategies - Strict Mode priority beforeInteractive - older version",
        "Next.js Script - Primary Strategies - Strict Mode priority beforeInteractive on navigate",
        "Next.js Script - Primary Strategies - Strict Mode priority beforeInteractive with inline script",
        "Next.js Script - Primary Strategies - Strict Mode priority beforeInteractive with inline script should execute",
        "Next.js Script - Primary Strategies - Strict Mode priority lazyOnload",
        "Next.js Script - Primary Strategies - Production Mode production mode priority beforeInteractive with inline script"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/scroll-back-restoration/test/index.test.js": {
      "passed": [
        "Scroll Back Restoration Support production mode should restore the scroll position on navigating back"
      ],
      "failed": [],
      "pending": [
        "Scroll Back Restoration Support development mode should restore the scroll position on navigating back"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/scroll-forward-restoration/test/index.test.js": {
      "passed": [
        "Scroll Forward Restoration Support production mode should restore the scroll position on navigating forward"
      ],
      "failed": [],
      "pending": [
        "Scroll Forward Restoration Support development mode should restore the scroll position on navigating forward"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/server-asset-modules/test/index.test.js": {
      "passed": [
        "serverside asset modules production mode should enable reading local files in api routes"
      ],
      "failed": [],
      "pending": [
        "serverside asset modules development mode should enable reading local files in api routes"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/server-side-dev-errors/test/index.test.js": {
      "passed": [
        "server-side dev errors should show server-side error for api route correctly",
        "server-side dev errors should show server-side error for dynamic api route correctly",
        "server-side dev errors should show server-side error for dynamic gssp page correctly",
        "server-side dev errors should show server-side error for gsp page correctly",
        "server-side dev errors should show server-side error for gssp page correctly",
        "server-side dev errors should show server-side error for uncaught empty exception correctly",
        "server-side dev errors should show server-side error for uncaught empty rejection correctly",
        "server-side dev errors should show server-side error for uncaught exception correctly",
        "server-side dev errors should show server-side error for uncaught rejection correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/sharp-api/test/sharp-api.test.ts": {
      "passed": [],
      "failed": [],
      "pending": ["sharp api should handle custom sharp usage"],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/src-dir-support-double-dir/test/index.test.js": {
      "passed": [
        "Dynamic Routing production mode should render from pages",
        "Dynamic Routing production mode should render not render from src/pages"
      ],
      "failed": [],
      "pending": [
        "Dynamic Routing development mode should render from pages",
        "Dynamic Routing development mode should render not render from src/pages"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/src-dir-support/test/index.test.js": {
      "passed": [
        "Dynamic Routing production mode should navigate to a dynamic page successfully",
        "Dynamic Routing production mode should navigate to a nested dynamic page successfully",
        "Dynamic Routing production mode should pass params in getInitialProps during SSR",
        "Dynamic Routing production mode should prioritize a non-dynamic page",
        "Dynamic Routing production mode should render another normal route",
        "Dynamic Routing production mode should render dynamic page",
        "Dynamic Routing production mode should render nested dynamic page",
        "Dynamic Routing production mode should render normal route"
      ],
      "failed": [],
      "pending": [
        "Dynamic Routing development mode should navigate to a dynamic page successfully",
        "Dynamic Routing development mode should navigate to a nested dynamic page successfully",
        "Dynamic Routing development mode should pass params in getInitialProps during SSR",
        "Dynamic Routing development mode should prioritize a non-dynamic page",
        "Dynamic Routing development mode should render another normal route",
        "Dynamic Routing development mode should render dynamic page",
        "Dynamic Routing development mode should render nested dynamic page",
        "Dynamic Routing development mode should render normal route"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/ssg-data-404/test/index.test.js": {
      "passed": [
        "SSG data 404 production mode should hard navigate when a new deployment occurs"
      ],
      "failed": [],
      "pending": [
        "SSG data 404 development mode should hard navigate when a new deployment occurs"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/ssg-dynamic-routes-404-page/test/index.test.js": {
      "passed": [
        "Custom 404 Page for static site generation with dynamic routes production mode should build successfully",
        "Custom 404 Page for static site generation with dynamic routes production mode should respond to a not existing page with 404"
      ],
      "failed": [],
      "pending": [
        "Custom 404 Page for static site generation with dynamic routes development mode should respond to a not existing page with 404"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/static-404/test/index.test.js": {
      "passed": [
        "Static 404 page With config enabled production mode should export 404 page without custom _error",
        "Static 404 page With config enabled production mode should not export 404 page with custom _error GIP",
        "Static 404 page With config enabled production mode should not export 404 page with getInitialProps in _app"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/static-page-name/test/index.test.js": {
      "passed": [
        "Static Page Name production mode should navigate to static page name correctly",
        "Static Page Name production mode should render the page via SSR correctly"
      ],
      "failed": [],
      "pending": [
        "Static Page Name development mode should navigate to static page name correctly",
        "Static Page Name development mode should render the page via SSR correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/styled-jsx-plugin/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "styled-jsx using in node_modules production mode should serve a page correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/telemetry/test/config.test.js": {
      "passed": [
        "config telemetry production mode detects i18n and image configs for session start",
        "config telemetry production mode detects output config for session start",
        "config telemetry production mode detects rewrites, headers, and redirects for next build",
        "config telemetry production mode emits telemetry for `next lint`",
        "config telemetry production mode emits telemetry for configured React Compiler options",
        "config telemetry production mode emits telemetry for default React Compiler options",
        "config telemetry production mode emits telemetry for enabled React Compiler",
        "config telemetry production mode emits telemetry for lint during build",
        "config telemetry production mode emits telemetry for lint during build when '--no-lint' is specified",
        "config telemetry production mode emits telemetry for lint during build when 'ignoreDuringBuilds' is specified",
        "config telemetry production mode emits telemetry for usage of `nextScriptWorkers`",
        "config telemetry production mode emits telemetry for usage of `optimizeCss`",
        "config telemetry production mode emits telemetry for usage of middleware",
        "config telemetry production mode emits telemetry for usage of swc plugins"
      ],
      "failed": [],
      "pending": [
        "config telemetry production mode emits telemetry for middleware related options",
        "config telemetry production mode emits telemetry for transpilePackages",
        "config telemetry production mode emits telemery for usage of image, script & dynamic",
        "config telemetry production mode emits telemetry for usage of swc",
        "config telemetry production mode emits telemetry for usage of @vercel/og",
        "config telemetry production mode emits telemetry for usage of next/legacy/image"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/telemetry/test/index.test.js": {
      "passed": [
        "Telemetry CLI can disable telemetry with env NEXT_TELEMETRY_DISABLED",
        "Telemetry CLI can disable telemetry with flag",
        "Telemetry CLI can disable telemetry without flag",
        "Telemetry CLI can enable telemetry with flag",
        "Telemetry CLI can enable telemetry without flag",
        "Telemetry CLI can print telemetry status",
        "Telemetry CLI can re-disable telemetry",
        "Telemetry CLI can re-enable telemetry",
        "Telemetry CLI detects isSrcDir dir correctly for `next dev`",
        "Telemetry CLI production mode cli session: babel tooling config",
        "Telemetry CLI production mode cli session: custom babel config (plugin)",
        "Telemetry CLI production mode cli session: custom babel config (preset)",
        "Telemetry CLI production mode cli session: next config with webpack",
        "Telemetry CLI production mode cli session: package.json custom babel config (plugin)",
        "Telemetry CLI production mode detect page counts correctly for `next build`",
        "Telemetry CLI production mode detect static 404 correctly for `next build`",
        "Telemetry CLI production mode detects correct cli session defaults",
        "Telemetry CLI production mode detects tests correctly for `next build`",
        "Telemetry CLI production mode emits event when swc fails to load",
        "Telemetry CLI production mode detects isSrcDir dir correctly for `next build`",
        "Telemetry CLI production mode logs completed `next build` with warnings"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/telemetry/test/page-features.test.js": {
      "passed": [
        "page features telemetry detects --turbo correctly for `next dev`",
        "page features telemetry detects --turbo correctly for `next dev` stopped"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/trailing-slash-dist/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Trailing slash in distDir development mode supports trailing slash"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/trailing-slashes-href-resolving/test/index.test.js": {
      "passed": [
        "href resolving trailing-slash production mode should preload SSG routes correctly",
        "href resolving trailing-slash production mode should route to /another/ correctly",
        "href resolving trailing-slash production mode should route to /blog/another/ correctly",
        "href resolving trailing-slash production mode should route to /blog/first-post/ correctly",
        "href resolving trailing-slash production mode should route to /catch-all/first/ correctly",
        "href resolving trailing-slash production mode should route to /catch-all/hello/world/ correctly",
        "href resolving trailing-slash production mode should route to /top-level-slug/ correctly"
      ],
      "failed": [],
      "pending": [
        "href resolving trailing-slash development mode should route to /another/ correctly",
        "href resolving trailing-slash development mode should route to /blog/another/ correctly",
        "href resolving trailing-slash development mode should route to /blog/first-post/ correctly",
        "href resolving trailing-slash development mode should route to /catch-all/first/ correctly",
        "href resolving trailing-slash development mode should route to /catch-all/hello/world/ correctly",
        "href resolving trailing-slash development mode should route to /top-level-slug/ correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/trailing-slashes-rewrite/test/index.test.js": {
      "passed": [
        "Trailing Slash Rewrite Proxying production mode should proxy non-existent page correctly",
        "Trailing Slash Rewrite Proxying production mode should resolve a catch-all page correctly",
        "Trailing Slash Rewrite Proxying production mode should resolve a dynamic page correctly",
        "Trailing Slash Rewrite Proxying production mode should resolve index page correctly",
        "Trailing Slash Rewrite Proxying production mode should resolve products page correctly"
      ],
      "failed": [],
      "pending": [
        "Trailing Slash Rewrite Proxying development mode should proxy non-existent page correctly",
        "Trailing Slash Rewrite Proxying development mode should resolve a catch-all page correctly",
        "Trailing Slash Rewrite Proxying development mode should resolve a dynamic page correctly",
        "Trailing Slash Rewrite Proxying development mode should resolve index page correctly",
        "Trailing Slash Rewrite Proxying development mode should resolve products page correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/trailing-slashes/test/index.test.js": {
      "passed": [
        "Trailing slashes development mode, trailingSlash: false / should client side render /index.js, with router path /",
        "Trailing slashes development mode, trailingSlash: false / should resolve to /index.js, with router path /",
        "Trailing slashes development mode, trailingSlash: false /about should client side render /about.js, with router path /about",
        "Trailing slashes development mode, trailingSlash: false /about should resolve to /about.js, with router path /about",
        "Trailing slashes development mode, trailingSlash: false /about/ should redirect to /about",
        "Trailing slashes development mode, trailingSlash: false /about?hello=world should client side render /about.js, with router path /about",
        "Trailing slashes development mode, trailingSlash: false /about?hello=world should resolve to /about.js, with router path /about",
        "Trailing slashes development mode, trailingSlash: false /catch-all/hello.world/ should redirect to /catch-all/hello.world",
        "Trailing slashes development mode, trailingSlash: false /catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
        "Trailing slashes development mode, trailingSlash: false /catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
        "Trailing slashes development mode, trailingSlash: false /catch-all/hello/world/ should redirect to /catch-all/hello/world",
        "Trailing slashes development mode, trailingSlash: false /external-linker?href=https://nextjs.org should have href https://nextjs.org",
        "Trailing slashes development mode, trailingSlash: false /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/ should have href /",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/ should navigate to /",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/ should push route to /",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about should have href /about",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about should navigate to /about",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about should push route to /about",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about/ should have href /about",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about/ should navigate to /about",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about/ should push route to /about",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about/?hello=world should have href /about?hello=world",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about/?hello=world should navigate to /about?hello=world",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about/?hello=world should push route to /about?hello=world",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about?hello=world should have href /about?hello=world",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about?hello=world should navigate to /about?hello=world",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/about?hello=world should push route to /about?hello=world",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/catch-all/hello/ should have href /catch-all/hello",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/catch-all/hello/ should navigate to /catch-all/hello",
        "Trailing slashes development mode, trailingSlash: false /linker?href=/catch-all/hello/ should push route to /catch-all/hello",
        "Trailing slashes development mode, trailingSlash: true / should client side render /index.js, with router path /",
        "Trailing slashes development mode, trailingSlash: true / should resolve to /index.js, with router path /",
        "Trailing slashes development mode, trailingSlash: true /about should redirect to /about/",
        "Trailing slashes development mode, trailingSlash: true /about/ should client side render /about.js, with router path /about",
        "Trailing slashes development mode, trailingSlash: true /about/ should resolve to /about.js, with router path /about",
        "Trailing slashes development mode, trailingSlash: true /about/?hello=world should client side render /about.js, with router path /about",
        "Trailing slashes development mode, trailingSlash: true /about/?hello=world should resolve to /about.js, with router path /about",
        "Trailing slashes development mode, trailingSlash: true /catch-all/hello.world/ should redirect to /catch-all/hello.world",
        "Trailing slashes development mode, trailingSlash: true /catch-all/hello/world should redirect to /catch-all/hello/world/",
        "Trailing slashes development mode, trailingSlash: true /catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
        "Trailing slashes development mode, trailingSlash: true /catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
        "Trailing slashes development mode, trailingSlash: true /external-linker?href=https://nextjs.org should have href https://nextjs.org",
        "Trailing slashes development mode, trailingSlash: true /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/ should have href /",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/ should navigate to /",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/ should push route to /",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about should have href /about/",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about should navigate to /about/",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about should push route to /about/",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about/ should have href /about/",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about/ should navigate to /about/",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about/ should push route to /about/",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about/?hello=world should have href /about/?hello=world",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about/?hello=world should navigate to /about/?hello=world",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about/?hello=world should push route to /about/?hello=world",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about?hello=world should have href /about/?hello=world",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about?hello=world should navigate to /about/?hello=world",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/about?hello=world should push route to /about/?hello=world",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/catch-all/hello/ should have href /catch-all/hello/",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/",
        "Trailing slashes development mode, trailingSlash: true /linker?href=/catch-all/hello/ should push route to /catch-all/hello/",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs should redirect to /docs/",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs/about should redirect to /docs/about/",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs/linker?href=/ should have href /docs/",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs/linker?href=/ should navigate to /docs/",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs/linker?href=/ should push route to /docs/",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs/linker?href=/about should have href /docs/about/",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs/linker?href=/about should navigate to /docs/about/",
        "Trailing slashes development mode, with basepath, trailingSlash: true /docs/linker?href=/about should push route to /docs/about/",
        "Trailing slashes production mode, trailingSlash: false / should client side render /index.js, with router path /",
        "Trailing slashes production mode, trailingSlash: false / should resolve to /index.js, with router path /",
        "Trailing slashes production mode, trailingSlash: false /about should client side render /about.js, with router path /about",
        "Trailing slashes production mode, trailingSlash: false /about should resolve to /about.js, with router path /about",
        "Trailing slashes production mode, trailingSlash: false /about/ should redirect to /about",
        "Trailing slashes production mode, trailingSlash: false /about?hello=world should client side render /about.js, with router path /about",
        "Trailing slashes production mode, trailingSlash: false /about?hello=world should resolve to /about.js, with router path /about",
        "Trailing slashes production mode, trailingSlash: false /catch-all/hello.world/ should redirect to /catch-all/hello.world",
        "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
        "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
        "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world/ should redirect to /catch-all/hello/world",
        "Trailing slashes production mode, trailingSlash: false /external-linker?href=https://nextjs.org should have href https://nextjs.org",
        "Trailing slashes production mode, trailingSlash: false /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/ should have href /",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/ should navigate to /",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/ should push route to /",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about should have href /about",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about should navigate to /about",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about should push route to /about",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should have href /about",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should navigate to /about",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should push route to /about",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should have href /about?hello=world",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should navigate to /about?hello=world",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should push route to /about?hello=world",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should have href /about?hello=world",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should navigate to /about?hello=world",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should push route to /about?hello=world",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should have href /catch-all/hello",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should navigate to /catch-all/hello",
        "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should push route to /catch-all/hello",
        "Trailing slashes production mode, trailingSlash: false should have a redirect in the routesmanifest",
        "Trailing slashes production mode, trailingSlash: true / should client side render /index.js, with router path /",
        "Trailing slashes production mode, trailingSlash: true / should resolve to /index.js, with router path /",
        "Trailing slashes production mode, trailingSlash: true /about should redirect to /about/",
        "Trailing slashes production mode, trailingSlash: true /about/ should client side render /about.js, with router path /about",
        "Trailing slashes production mode, trailingSlash: true /about/ should resolve to /about.js, with router path /about",
        "Trailing slashes production mode, trailingSlash: true /about/?hello=world should client side render /about.js, with router path /about",
        "Trailing slashes production mode, trailingSlash: true /about/?hello=world should resolve to /about.js, with router path /about",
        "Trailing slashes production mode, trailingSlash: true /catch-all/hello.world/ should redirect to /catch-all/hello.world",
        "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world should redirect to /catch-all/hello/world/",
        "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
        "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
        "Trailing slashes production mode, trailingSlash: true /external-linker?href=https://nextjs.org should have href https://nextjs.org",
        "Trailing slashes production mode, trailingSlash: true /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/ should have href /",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/ should navigate to /",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/ should push route to /",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about should have href /about/",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about should navigate to /about/",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about should push route to /about/",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should have href /about/",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should navigate to /about/",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should push route to /about/",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should have href /about/?hello=world",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should navigate to /about/?hello=world",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should push route to /about/?hello=world",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should have href /about/?hello=world",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should navigate to /about/?hello=world",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should push route to /about/?hello=world",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should have href /catch-all/hello/",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/",
        "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should push route to /catch-all/hello/",
        "Trailing slashes production mode, trailingSlash: true should have a trailing redirect in the routesmanifest",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs should redirect to /docs/",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs/about should redirect to /docs/about/",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should have href /docs/",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should navigate to /docs/",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should push route to /docs/",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should have href /docs/about/",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should navigate to /docs/about/",
        "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should push route to /docs/about/"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/tsconfig-verifier/test/index.test.js": {
      "passed": [
        "tsconfig.json verifier Creates a default tsconfig.json when one is missing",
        "tsconfig.json verifier Updates an existing tsconfig.json without losing comments",
        "tsconfig.json verifier allows you to extend another configuration file",
        "tsconfig.json verifier allows you to set bundler moduleResolution mode",
        "tsconfig.json verifier allows you to set commonjs module mode",
        "tsconfig.json verifier allows you to set es2020 module mode",
        "tsconfig.json verifier allows you to set node16 module mode",
        "tsconfig.json verifier allows you to set node16 moduleResolution mode",
        "tsconfig.json verifier allows you to set target mode",
        "tsconfig.json verifier allows you to set verbatimModuleSyntax true via extends without adding isolatedModules",
        "tsconfig.json verifier allows you to set verbatimModuleSyntax true without adding isolatedModules",
        "tsconfig.json verifier creates compilerOptions when you extend another config",
        "tsconfig.json verifier Works with an empty tsconfig.json (docs)"
      ],
      "failed": [],
      "pending": [
        "tsconfig.json verifier allows you to skip moduleResolution, esModuleInterop and resolveJsonModule when using \"module: preserve\""
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/turbopack-unsupported-log/index.test.ts": {
      "passed": [
        "turbopack unsupported features log should not warn by default",
        "turbopack unsupported features log should not warn with empty next.config.js",
        "turbopack unsupported features log should warn with next.config.js with unsupported field"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/turborepo-access-trace/test/index.test.js": {
      "passed": [
        "build with proxy trace production mode should build and output trace correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/turbotrace-with-webpack-worker/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "build trace with extra entries production mode should build and trace correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typeof-window-replace/test/index.test.js": {
      "passed": [
        "typeof window replace production mode Does not replace `typeof window` for `node_modules` code",
        "typeof window replace production mode Replaces `typeof window` with object for client code",
        "typeof window replace production mode Replaces `typeof window` with undefined for server code"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-app-type-declarations/test/index.test.js": {
      "passed": [
        "TypeScript App Type Declarations should not touch an existing correct next-env.d.ts",
        "TypeScript App Type Declarations should overwrite next-env.d.ts if an incorrect one exists",
        "TypeScript App Type Declarations should write a new next-env.d.ts if none exist"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-baseurl/test/index.test.js": {
      "passed": ["TypeScript Features default behavior should render the page"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-custom-tsconfig/test/index.test.js": {
      "passed": [
        "Custom TypeScript Config production mode should warn when using custom typescript path"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-external-dir/project/test/index.test.js": {
      "passed": [
        "TypeScript Features default behavior should render the page with external TS/TSX dependencies"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-filtered-files/test/index.test.js": {
      "passed": [
        "TypeScript filtered files production mode should fail to build the app with a file named con*test*.js"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-hmr/test/index.test.js": {
      "passed": [
        "TypeScript HMR delete a page and add it back should detect the changes to typescript pages and display it",
        "TypeScript HMR should ignore type errors in development"
      ],
      "failed": [],
      "pending": ["TypeScript HMR should recover from a type error"],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-ignore-errors/test/index.test.js": {
      "passed": [
        "TypeScript with error handling options production mode ignoreBuildErrors: false Next fails to build the application despite type errors in incremental mode",
        "TypeScript with error handling options production mode ignoreBuildErrors: false Next fails to build the application despite type errors without incremental mode",
        "TypeScript with error handling options production mode ignoreBuildErrors: true Next builds the application despite type errors in incremental mode",
        "TypeScript with error handling options production mode ignoreBuildErrors: true Next builds the application despite type errors without incremental mode"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-only-remove-type-imports/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "TypeScript onlyRemoveTypeImports development mode should render a normal page correctly",
        "TypeScript onlyRemoveTypeImports development mode should render a page with type import correctly",
        "TypeScript onlyRemoveTypeImports production mode should render a normal page correctly",
        "TypeScript onlyRemoveTypeImports production mode should render a page with type import correctly"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-paths/test/index.test.js": {
      "passed": [
        "typescript paths default behavior should alias components",
        "typescript paths default behavior should not resolve to .d.ts files",
        "typescript paths default behavior should resolve a single matching alias",
        "typescript paths default behavior should resolve the first item in the array first",
        "typescript paths default behavior should resolve the second item in as a fallback",
        "typescript paths without baseurl default behavior should alias components",
        "typescript paths without baseurl default behavior should not resolve to .d.ts files",
        "typescript paths without baseurl default behavior should resolve a single matching alias",
        "typescript paths without baseurl default behavior should resolve the first item in the array first",
        "typescript paths without baseurl default behavior should resolve the second item in as a fallback"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript-workspaces-paths/packages/www/test/index.test.js": {
      "passed": [
        "TypeScript Features default behavior should alias components",
        "TypeScript Features default behavior should not resolve to .d.ts files",
        "TypeScript Features default behavior should resolve a single matching alias",
        "TypeScript Features default behavior should resolve the first item in the array first",
        "TypeScript Features default behavior should resolve the second item in as a fallback"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/typescript/test/index.test.js": {
      "passed": [
        "TypeScript Features default behavior should not fail to render when an inactive page has an error",
        "TypeScript Features default behavior should render the angle bracket type assertions page",
        "TypeScript Features default behavior should render the cookies page",
        "TypeScript Features default behavior should render the cookies page with cookies",
        "TypeScript Features default behavior should render the generics page",
        "TypeScript Features default behavior should render the page",
        "TypeScript Features default behavior should respond to async API route correctly",
        "TypeScript Features default behavior should respond to sync API route correctly",
        "TypeScript Features production mode should build the app",
        "TypeScript Features production mode should build the app with functions in next.config.js",
        "TypeScript Features production mode should compile with different types should compile async getInitialProps for _error",
        "TypeScript Features production mode should compile with different types should compile sync getStaticPaths & getStaticProps",
        "TypeScript Features production mode should not inform when using default tsconfig path"
      ],
      "failed": [],
      "pending": [
        "TypeScript Features default behavior should report type checking to stdout",
        "TypeScript Features default behavior should resolve files in correct order"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/undefined-webpack-config/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "undefined webpack config error production mode should show in production mode",
        "undefined webpack config error should show in development mode"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/url-imports/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Handle url imports with next build should allow url import in css",
        "Handle url imports with next build should client-render the /ssg page",
        "Handle url imports with next build should client-render the /ssr page",
        "Handle url imports with next build should client-render the /static page",
        "Handle url imports with next build should render a static url image import",
        "Handle url imports with next build should render the /ssg page",
        "Handle url imports with next build should render the /ssr page",
        "Handle url imports with next build should render the /static page",
        "Handle url imports with next build should respond on value api",
        "Handle url imports with next dev should allow url import in css",
        "Handle url imports with next dev should client-render the /ssg page",
        "Handle url imports with next dev should client-render the /ssr page",
        "Handle url imports with next dev should client-render the /static page",
        "Handle url imports with next dev should render a static url image import",
        "Handle url imports with next dev should render the /ssg page",
        "Handle url imports with next dev should render the /ssr page",
        "Handle url imports with next dev should render the /static page",
        "Handle url imports with next dev should respond on value api"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/url/test/index.test.js": {
      "passed": [
        "Handle new URL asset references in next dev should client-render the /ssg page",
        "Handle new URL asset references in next dev should client-render the /ssr page",
        "Handle new URL asset references in next dev should client-render the /static page",
        "Handle new URL asset references in next dev should render the /ssg page",
        "Handle new URL asset references in next dev should render the /ssr page",
        "Handle new URL asset references in next dev should render the /static page",
        "Handle new URL asset references in next dev should respond on basename api",
        "Handle new URL asset references in next dev should respond on size api"
      ],
      "failed": [],
      "pending": [
        "Handle new URL asset references in next build should client-render the /ssg page",
        "Handle new URL asset references in next build should client-render the /ssr page",
        "Handle new URL asset references in next build should client-render the /static page",
        "Handle new URL asset references in next build should render the /ssg page",
        "Handle new URL asset references in next build should render the /ssr page",
        "Handle new URL asset references in next build should render the /static page",
        "Handle new URL asset references in next build should respond on basename api",
        "Handle new URL asset references in next build should respond on size api"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/webpack-config-extensionalias/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "webpack config with extensionAlias setting should run correctly with an tsx file import with .js extension"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/webpack-config-mainjs/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Customized webpack config with main.js should run correctly with main.js customized"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/webpack-require-hook/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Handles Webpack Require Hook build Does not error during build",
        "Handles Webpack Require Hook development mode Applies and does not error during development"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/with-electron/test/index.test.js": {
      "passed": [
        "Should skip testing electron without process.env.TEST_ELECTRON set"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/integration/worker-webpack5/test/index.test.js": {
      "passed": [],
      "failed": [],
      "pending": [
        "Web Workers with webpack 5 development mode should pass on both client and worker",
        "Web Workers with webpack 5 production mode should pass on both client and worker"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/allow-development-build/allow-development-build.test.ts": {
      "passed": [
        "allow-development-build with NODE_ENV not set to development should fail the build with a message about not setting NODE_ENV",
        "allow-development-build with NODE_ENV set to development should show React development errors in app-page",
        "allow-development-build with NODE_ENV set to development should show React development errors in pages-page",
        "allow-development-build with NODE_ENV set to development should warn about a non-standard NODE_ENV"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir-edge-runtime-with-wasm/index.test.ts": {
      "passed": ["app-dir edge runtime with wasm should have built"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir-hide-suppressed-error-during-next-export/index.test.ts": {
      "passed": [
        "app-dir-hide-suppressed-error-during-next-export should not log suppressed error when exporting static page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir-prefetch-non-iso-url/index.test.ts": {
      "passed": [
        "app-dir-prefetch-non-iso-url should go to iso url",
        "app-dir-prefetch-non-iso-url should go to non-iso url"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir-prevent-304-caching/index.test.ts": {
      "passed": ["app-dir-prevent-304-caching should not cache 304 status"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/basic/basic-edge.test.ts": {
      "passed": [],
      "failed": [
        "actions-tree-shaking - basic should not have the unused action in the manifest"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/basic/basic.test.ts": {
      "passed": [
        "actions-tree-shaking - basic should not have the unused action in the manifest"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/mixed-module-actions/mixed-module-actions-edge.test.ts": {
      "passed": [
        "actions-tree-shaking - mixed-module-actions should not do tree shake for cjs module when import server actions"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/mixed-module-actions/mixed-module-actions.test.ts": {
      "passed": [
        "actions-tree-shaking - mixed-module-actions should not do tree shake for cjs module when import server actions"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/reexport/reexport-edge.test.ts": {
      "passed": [
        "actions-tree-shaking - reexport should not have the unused action in the manifest"
      ],
      "failed": [
        "actions-tree-shaking - reexport should keep all the action exports for namespace export case on client layer"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/reexport/reexport.test.ts": {
      "passed": [
        "actions-tree-shaking - reexport should not have the unused action in the manifest"
      ],
      "failed": [
        "actions-tree-shaking - reexport should keep all the action exports for namespace export case on client layer"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/shared-module-actions/shared-module-actions-edge.test.ts": {
      "passed": [
        "actions-tree-shaking - shared-module-actions should not have the unused action in the manifest"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/shared-module-actions/shared-module-actions.test.ts": {
      "passed": [
        "actions-tree-shaking - shared-module-actions should not have the unused action in the manifest"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/use-effect-actions/use-effect-actions-edge.test.ts": {
      "passed": [],
      "failed": [
        "actions-tree-shaking - use-effect-actions should not tree shake the used action under useEffect"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/use-effect-actions/use-effect-actions.test.ts": {
      "passed": [],
      "failed": [
        "actions-tree-shaking - use-effect-actions should not tree shake the used action under useEffect"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/actions-tree-shaking/client-actions-tree-shaking/client-actions-tree-shaking.test.ts": {
      "passed": [
        "app-dir - client-actions-tree-shaking should not bundle unused server reference id in client bundles"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/app-edge-middleware/app-edge-middleware.test.ts": {
      "passed": [
        "app edge middleware without node.js modules should not have any errors about using Node.js modules if not present in middleware"
      ],
      "failed": [
        "app edge middleware with node.js modules should have errors about using Node.js modules when present in middleware"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/app-fetch-build-cache/app-fetch-build-cache.test.ts": {
      "passed": [
        "app fetch build cache should have done initial build",
        "app fetch build cache should not use stale data if present"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/app-only-flag/app-only-flag.test.ts": {
      "passed": [
        "app-only-flag should serve app route",
        "app-only-flag should not serve about route"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/barrel-optimization/basic/index.test.ts": {
      "passed": [
        "Skipped in Turbopack app-dir - optimizePackageImports - basic should build successfully",
        "Skipped in Turbopack app-dir - optimizePackageImports - basic should handle mixed imports from barrel optimized lib correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/barrel-optimization/mui/index.test.ts": {
      "passed": [
        "Skipped in Turbopack app-dir - optimizePackageImports - mui should build successfully"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/build-output-debug/index.test.ts": {
      "passed": ["next build --debug should log Redirects above Route(app)"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/build-output/index.test.ts": {
      "passed": [
        "production - app dir - build output should always log version first then the rest jobs",
        "production - app dir - build output should match the expected output format",
        "production - app dir - build output should only log app routes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/client-components-tree-shaking/index.test.ts": {
      "passed": [
        "app-dir client-components-tree-shaking should able to resolve the client module entry with mixing rexports",
        "app-dir client-components-tree-shaking should handle mixing namespace imports and named imports from client components",
        "app-dir client-components-tree-shaking should only include imported components 3rd party package in browser bundle with direct imports",
        "app-dir client-components-tree-shaking should only include imported relative components in browser bundle with direct imports",
        "app-dir client-components-tree-shaking should only include the imported identifier of CJS module in browser bundle"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/client-page-error-bailout/client-page-error-bailout.test.ts": {
      "passed": [
        "app-dir - client-page-error-bailout should bail out in static generation build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/deopted-into-client-rendering-warning/deopted-into-client-rendering-warning.test.ts": {
      "passed": ["should not show deopted into client rendering warning"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/fetch-cache/fetch-cache.test.ts": {
      "passed": [],
      "failed": [
        "fetch-cache should have correct fetchUrl field for fetches and unstable_cache",
        "fetch-cache should not retry for failed fetch-cache GET",
        "fetch-cache should retry 3 times when revalidate times out",
        "fetch-cache should update cache TTL even if cache data does not change",
        "fetch-cache should batch revalidate tag requests if > 64"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/mangle-reserved/mangle-reserved.test.ts": {
      "passed": ["mangle-reserved should preserve the name"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/metadata-static-route-cache/metadata-static-route-cache.test.ts": {
      "passed": [],
      "failed": [
        "app dir - metadata static routes cache should generate different content after replace the static metadata file"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/metadata-static/metadata-static.test.ts": {
      "passed": [
        "app dir - metadata should have statically optimized metadata routes by default"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/parallel-routes-static/index.test.ts": {
      "passed": [
        "app-dir parallel-routes-static should static generate parallel routes"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/revalidate/revalidate.test.ts": {
      "passed": [
        "app-dir revalidate should be able to revalidate the cache via pages/api"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/server-action-period-hash/server-action-period-hash.test.ts": {
      "passed": [],
      "failed": [
        "app-dir - server-action-period-hash should have same manifest between continuous two builds",
        "app-dir - server-action-period-hash should have different manifest between two builds with period hash"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/server-action-period-hash/server-action-period-hash-custom-key.test.ts": {
      "passed": [],
      "failed": [
        "app-dir - server-action-period-hash-custom-key should have different manifest if the encryption key from process env is changed",
        "app-dir - server-action-period-hash-custom-key should have different manifest if the encryption key from process env is same"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/ssg-single-pass/ssg-single-pass.test.ts": {
      "passed": [
        "ssg-single-pass should only render the page once during an ISR revalidation",
        "ssg-single-pass should only render the page once during build"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/subresource-integrity/subresource-integrity.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Subresource Integrity does not include nonce when not enabled",
        "Subresource Integrity includes a nonce value with bootstrap scripts when Content-Security-Policy header is defined",
        "Subresource Integrity includes a nonce value with inline scripts when Content-Security-Policy header is defined",
        "Subresource Integrity includes a nonce value with inline scripts when Content-Security-Policy-Report-Only header is defined",
        "Subresource Integrity includes an integrity attribute on scripts",
        "Subresource Integrity throws when escape characters are included in nonce"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/symbolic-file-links/symbolic-file-links.test.ts": {
      "passed": [],
      "failed": [
        "symbolic-file-links should work using browser",
        "symbolic-file-links should work using cheerio",
        "symbolic-file-links should work with fetch",
        "symbolic-file-links should work with html"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/typed-routes-with-webpack-worker/typed-routes-with-webpack-worker.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "app dir - typed-routes-with-webpack-worker builds successfully without errors",
        "app dir - typed-routes-with-webpack-worker builds with valid errors"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/unexpected-error/unexpected-error.test.ts": {
      "passed": [
        "unexpected-error cannot change response status when streaming has started",
        "unexpected-error should set response status to 500 for unexpected errors in isr app route",
        "unexpected-error should set response status to 500 for unexpected errors in ssr app route"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/worker-restart/worker-restart.test.ts": {
      "passed": [
        "worker-restart should properly exhaust all restart attempts and not fail with any worker errors",
        "worker-restart should support configurable static generation retries"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/bfcache-routing/index.test.ts": {
      "passed": [
        "bfcache-routing should not suspend indefinitely when page is restored from bfcache after an mpa navigation"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/build-spinners/index.test.ts": {
      "passed": [
        "build-spinners should handle build spinners correctly app and pages",
        "build-spinners should handle build spinners correctly app dir - (compile workers)",
        "build-spinners should handle build spinners correctly app dir - basic",
        "build-spinners should handle build spinners correctly page dir",
        "build-spinners should handle build spinners correctly page dir (compile workers)"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/ci-missing-typescript-deps/index.test.ts": {
      "passed": [
        "ci-missing-typescript-deps should not throw an error if beta version of @types/react and @types/react-dom is installed",
        "ci-missing-typescript-deps should show missing TypeScript dependencies error in CI"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/custom-error-500/index.test.ts": {
      "passed": [
        "custom-error-500 should correctly use pages/500 and call Error.getInitialProps",
        "custom-error-500 should work correctly with pages/404 present"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/custom-server/custom-server.test.ts": {
      "passed": [
        "custom server can navigate to /a",
        "custom server can navigate to /b",
        "custom server can navigate to /c",
        "custom server should log any error messages when server is started without \"quiet\" setting",
        "custom server with app dir should render app with react rc",
        "custom server with app dir should render pages with installed react",
        "custom server with quiet setting should not log any error messages when server is started with \"quiet\" setting"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/dependencies-can-use-env-vars-in-middlewares/index.test.ts": {
      "passed": [
        "dependencies can use env vars in middlewares does not error from patching lockfile",
        "dependencies can use env vars in middlewares uses the environment variables"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/deployment-id-handling/deployment-id-handling.test.ts": {
      "passed": [
        "deployment-id-handling disabled should not append dpl query to all assets for /",
        "deployment-id-handling disabled should not append dpl query to all assets for /from-app",
        "deployment-id-handling disabled should not append dpl query to all assets for /from-app/edge",
        "deployment-id-handling disabled should not append dpl query to all assets for /pages-edge",
        "deployment-id-handling enabled with CUSTOM_DEPLOYMENT_ID should contain deployment id in RSC payload request headers",
        "deployment-id-handling enabled with CUSTOM_DEPLOYMENT_ID should have deployment id env available",
        "deployment-id-handling enabled with NEXT_DEPLOYMENT_ID should contain deployment id in RSC payload request headers",
        "deployment-id-handling enabled with NEXT_DEPLOYMENT_ID should have deployment id env available"
      ],
      "failed": [
        "deployment-id-handling enabled with CUSTOM_DEPLOYMENT_ID should append dpl query to all assets correctly for /",
        "deployment-id-handling enabled with CUSTOM_DEPLOYMENT_ID should append dpl query to all assets correctly for /from-app",
        "deployment-id-handling enabled with CUSTOM_DEPLOYMENT_ID should append dpl query to all assets correctly for /from-app/edge",
        "deployment-id-handling enabled with CUSTOM_DEPLOYMENT_ID should append dpl query to all assets correctly for /pages-edge",
        "deployment-id-handling enabled with NEXT_DEPLOYMENT_ID should append dpl query to all assets correctly for /",
        "deployment-id-handling enabled with NEXT_DEPLOYMENT_ID should append dpl query to all assets correctly for /from-app",
        "deployment-id-handling enabled with NEXT_DEPLOYMENT_ID should append dpl query to all assets correctly for /from-app/edge",
        "deployment-id-handling enabled with NEXT_DEPLOYMENT_ID should append dpl query to all assets correctly for /pages-edge"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/deterministic-build/index.test.ts": {
      "passed": [],
      "failed": ["deterministic build should have same md5 file across build"],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/disable-fallback-polyfills/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Disable fallback polyfills Fallback polyfills added by default",
        "Disable fallback polyfills Pass build without error if non-polyfilled module is unreachable",
        "Disable fallback polyfills Reduced bundle size when polyfills are disabled"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/edge-config-validations/index.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "Edge config validations fails to build when unstable_allowDynamic is not a string"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/edge-dynamic-code-eval/index.test.ts": {
      "passed": [
        "Dynamic Code Evaluation (DCE) should not fail when \"function-bind\" package is used"
      ],
      "failed": [],
      "pending": [
        "Dynamic Code Evaluation (DCE) should show the user's import trace"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/edge-runtime-is-addressable/index.test.ts": {
      "passed": [
        "Edge Runtime can be set to the production provider EdgeRuntime evaluates to a string",
        "Edge Runtime is addressable EdgeRuntime evaluates to a string",
        "Edge Runtime is addressable removes the undefined branch with dead code elimination"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/emit-decorator-metadata/index.test.ts": {
      "passed": [
        "emitDecoratorMetadata SWC option should compile with emitDecoratorMetadata enabled"
      ],
      "failed": [
        "emitDecoratorMetadata SWC option should compile with emitDecoratorMetadata enabled for API"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/enoent-during-require/index.test.ts": {
      "passed": ["ENOENT during require should show ENOENT error correctly"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/error-hydration/error-hydration.test.ts": {
      "passed": [
        "error-hydration invokes _error's getInitialProps for client-side errors",
        "error-hydration should log a message for client-side errors, including the full, custom error",
        "error-hydration should not invoke the error page getInitialProps client-side for server-side errors",
        "error-hydration should not log server-side errors"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/escheck-output/index.test.ts": {
      "passed": [],
      "failed": ["ES Check .next output should emit ES2020 with default"],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/eslint-plugin-deps/index.test.ts": {
      "passed": ["eslint plugin deps should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/eslint/test/next-build-and-lint.test.ts": {
      "passed": [
        "Next Build production mode first time setup",
        "Next Build production mode first time setup with TypeScript"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/export/index.test.ts": {
      "passed": [
        "static export API routes export Should throw if a route is matched",
        "static export Dynamic routes export Should throw error not matched route",
        "static export Render via SSR Should render dynamic files with query",
        "static export Render via SSR Should serve public files",
        "static export Render via SSR Should serve static files",
        "static export Render via SSR should give empty object for query if there is no query",
        "static export Render via SSR should render _error on /404/index.html",
        "static export Render via SSR should render _error on 404.html even if not provided in exportPathMap",
        "static export Render via SSR should render a dynamically rendered custom url page",
        "static export Render via SSR should render a page with getInitialProps",
        "static export Render via SSR should render links correctly",
        "static export Render via SSR should render pages with dynamic imports",
        "static export Render via SSR should render paths with extensions",
        "static export Render via SSR should render the about page",
        "static export Render via SSR should render the home page",
        "static export Render via browser pages in the nested level: level1 should render the about page",
        "static export Render via browser pages in the nested level: level1 should render the home page",
        "static export Render via browser should add trailing slash on Link",
        "static export Render via browser should do navigations via Link",
        "static export Render via browser should do navigations via Router",
        "static export Render via browser should do run client side javascript",
        "static export Render via browser should navigate even if used a button inside <Link />",
        "static export Render via browser should not add any slash on hash Link",
        "static export Render via browser should not add trailing slash on Link when disabled",
        "static export Render via browser should preserve hash symbol on empty hash Link",
        "static export Render via browser should preserve question mark on empty query Link",
        "static export Render via browser should render 404 when visiting a page that returns notFound from gsp",
        "static export Render via browser should render dynamic import components in the client",
        "static export Render via browser should render dynamic pages with custom urls",
        "static export Render via browser should render pages using getInitialProps",
        "static export Render via browser should render pages with url hash correctly",
        "static export Render via browser should render the home page",
        "static export Render via browser should support client side navigation",
        "static export Render via browser should update query after mount",
        "static export exportTrailingSlash is not ignored",
        "static export should delete existing exported files",
        "static export should handle trailing slash in getStaticPaths",
        "static export should honor trailingSlash for 404 page",
        "static export should not duplicate /index with trailingSlash",
        "static export should only output 404.html without trailingSlash"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/exported-runtimes-value-validation/index.test.ts": {
      "passed": [
        "Exported runtimes value validation fails to build on malformed input"
      ],
      "failed": [
        "Exported runtimes value validation warns on unrecognized runtimes value"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/fallback-export-error/index.test.ts": {
      "passed": [
        "fallback export error should error with invalid exportPathMap",
        "fallback export error should have built",
        "fallback export error should not error with default exportPathMap",
        "fallback export error should not error with valid exportPathMap"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/fatal-render-errror/index.test.ts": {
      "passed": [
        "fatal-render-errror should handle fatal error in _app and _error without loop on client-transition",
        "fatal-render-errror should handle fatal error in _app and _error without loop on direct visit",
        "fatal-render-errror should render page without error correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/generate-middleware-source-maps/index.test.ts": {
      "passed": [
        "Middleware source maps generates a source map for Edge API",
        "Middleware source maps generates a source map for Middleware"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/graceful-shutdown/index.test.ts": {
      "passed": [
        "Graceful Shutdown development (next dev) should shut down child immediately",
        "Graceful Shutdown production (next start) should not accept new requests during shutdown cleanup when there is no activity"
      ],
      "failed": [
        "Graceful Shutdown production (standalone mode) should not accept new requests during shutdown cleanup when there is no activity"
      ],
      "pending": [
        "Graceful Shutdown production (next start) should not accept new requests during shutdown cleanup when request is made before shutdown",
        "Graceful Shutdown production (next start) should wait for requests to complete before exiting",
        "Graceful Shutdown production (standalone mode) should not accept new requests during shutdown cleanup when request is made before shutdown",
        "Graceful Shutdown production (standalone mode) should wait for requests to complete before exiting"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/handle-already-sent-response/handle-already-sent-response.test.ts": {
      "passed": ["handle already sent response should work with fetch"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/instrumentation/required-files-instrumentation-entry/required-files-instrumentation-entry.test.ts": {
      "passed": [
        "instrumentation - required-files-instrumentation-entry should not contain edge entry in required files manifest"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/ipc-forbidden-headers/ipc-forbidden-headers.test.ts": {
      "passed": [
        "ipc-forbidden-headers should not error if expect header is included",
        "ipc-forbidden-headers should not error on content-length: 0 if request shouldn't contain a payload"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/jest/index.test.ts": {
      "passed": ["next/jest should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/jest/new-link-behavior.test.ts": {
      "passed": ["next/jest newLinkBehavior should use new link behavior"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/jest/next-image-preload/next-image-preload.test.ts": {
      "passed": ["next/jest Should not throw preload is undefined error"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/jest/relay/relay-jest.test.ts": {
      "passed": [],
      "failed": [],
      "pending": ["next/jest should work"],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/jest/remove-react-properties/remove-react-properties-jest.test.ts": {
      "passed": ["next/jest data-testid should be removed in production"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/jest/rsc/lib/utils.test.js": {
      "passed": ["works with server-only code"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/jest/transpile-packages.test.ts": {
      "passed": ["next/jest should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/app-dir/metadata-revalidate/metadata-revalidate.test.ts": {
      "passed": [],
      "failed": [
        "app-dir - metadata-revalidate should contain the routes in prerender manifest"
      ],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/middleware-typescript/test/index.test.ts": {
      "passed": ["middleware-typescript should have built and started"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/next-font/babel-unsupported.test.ts": {
      "passed": [],
      "failed": [],
      "pending": ["@next/font babel unsupported Build error when using babel"],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/next-font/telemetry.test.ts": {
      "passed": [],
      "failed": [],
      "pending": [
        "next/font unused telemetry should not send next/font/google and next/font/local usage event",
        "next/font used telemetry should send next/font/google and next/font/local usage event"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/pages-dir/production/test/index.test.ts": {
      "passed": [
        "Production Usage API routes does not work with pages/api/readfile-dirname.js",
        "Production Usage API routes should work with dynamic params and search string",
        "Production Usage API routes should work with pages/api/hello.js",
        "Production Usage API routes should work with pages/api/index.js",
        "Production Usage API routes should work with pages/api/readfile-processcwd.js",
        "Production Usage Dynamic import custom loading should render custom loading on the server side when `ssr:false` and `loading` is provided",
        "Production Usage Dynamic import custom loading should render the component on client side",
        "Production Usage Dynamic import default behavior should bundle two css modules for nested components into one css file",
        "Production Usage Dynamic import default behavior should bundle two css modules for one dynamically imported component into one css file",
        "Production Usage Dynamic import default behavior should not remove css styles for same css file between page transitions",
        "Production Usage Dynamic import default behavior should output two css files even in case of three css module files while one is shared across files",
        "Production Usage Dynamic import default behavior should render dynamic import components",
        "Production Usage Dynamic import default behavior should render even there are no physical chunk exists",
        "Production Usage Dynamic import default behavior should render one dynamically imported component and load its css files",
        "Production Usage Dynamic import default behavior should render one dynamically imported component without any css files",
        "Production Usage Dynamic import default behavior should render three dynamically imported components and load their css files",
        "Production Usage Dynamic import ssr:false option should not render loading on the server side",
        "Production Usage Dynamic import ssr:false option should render the component on client side",
        "Production Usage Dynamic import ssr:true option should render the component on client side",
        "Production Usage Dynamic import ssr:true option should render the component on the server side",
        "Production Usage Misc It does not add a timestamp to link tags with prefetch attribute",
        "Production Usage Misc Should allow access to public files",
        "Production Usage Misc should add autoExport for auto pre-rendered pages",
        "Production Usage Misc should add prefetch tags when Link prefetch prop is used",
        "Production Usage Misc should allow to access /static/ and /_next/",
        "Production Usage Misc should handle already finished responses",
        "Production Usage Misc should have default runtime values when not defined",
        "Production Usage Misc should not add autoExport for non pre-rendered pages",
        "Production Usage Misc should not have runtimeConfig in __NEXT_DATA__",
        "Production Usage Misc should reload the page on page script error",
        "Production Usage Misc should reload the page on page script error with prefetch",
        "Production Usage Runtime errors should call getInitialProps on _error page during a client side component error",
        "Production Usage Runtime errors should render a client side component error",
        "Production Usage Runtime errors should render a server side error on the client side",
        "Production Usage With Security Related Issues should handle encoded / value for trailing slash correctly",
        "Production Usage With Security Related Issues should handle encoded value in the pathname correctly %",
        "Production Usage With Security Related Issues should handle encoded value in the pathname correctly /",
        "Production Usage With Security Related Issues should handle encoded value in the pathname correctly \\",
        "Production Usage With Security Related Issues should handle encoded value in the pathname to query correctly (/)",
        "Production Usage With Security Related Issues should handle encoded value in the query correctly",
        "Production Usage With Security Related Issues should not allow accessing files outside .next/static directory",
        "Production Usage With Security Related Issues should not execute script embedded inside svg image, even if dangerouslyAllowSVG=true",
        "Production Usage With Security Related Issues should not leak the user's home directory into the build",
        "Production Usage With Security Related Issues should only access files inside .next directory",
        "Production Usage With Security Related Issues should prevent URI based XSS attacks",
        "Production Usage With Security Related Issues should prevent URI based XSS attacks using double quotes",
        "Production Usage With Security Related Issues should prevent URI based XSS attacks using querystring",
        "Production Usage With Security Related Issues should prevent URI based XSS attacks using querystring and quotes",
        "Production Usage With Security Related Issues should prevent URI based XSS attacks using semicolons and double quotes",
        "Production Usage With Security Related Issues should prevent URI based XSS attacks using semicolons and single quotes",
        "Production Usage With Security Related Issues should prevent URI based XSS attacks using single quotes",
        "Production Usage With Security Related Issues should prevent URI based XSS attacks using src",
        "Production Usage With basic usage should allow etag header support",
        "Production Usage With basic usage should allow etag header support with getStaticProps",
        "Production Usage With basic usage should block special pages",
        "Production Usage With basic usage should have X-Powered-By header support",
        "Production Usage With basic usage should not contain customServer in NEXT_DATA",
        "Production Usage With basic usage should polyfill Node.js modules",
        "Production Usage With basic usage should render 200 for POST on page",
        "Production Usage With basic usage should render 404 even if the HTTP method is not GET or HEAD",
        "Production Usage With basic usage should render 404 for /_next/static route",
        "Production Usage With basic usage should render 404 for POST on missing page",
        "Production Usage With basic usage should render 404 for _next routes that do not exist",
        "Production Usage With basic usage should render 404 for dotfiles in /static",
        "Production Usage With basic usage should render 404 for routes that do not exist",
        "Production Usage With basic usage should render the page",
        "Production Usage With basic usage should return 200 on static file if If-Unmodified-Since is invalid date",
        "Production Usage With basic usage should return 405 method on static then GET and HEAD",
        "Production Usage With basic usage should return 412 on static file when If-Unmodified-Since is provided and file is modified",
        "Production Usage With basic usage should set Cache-Control header",
        "Production Usage With basic usage should set Content-Length header",
        "Production Usage With basic usage should set correct Cache-Control header for static 404s",
        "Production Usage With navigation should navigate to nested index via client side",
        "Production Usage With navigation should navigate via client side",
        "Production Usage With navigation should reload page successfully (on bad data fetch)",
        "Production Usage With navigation should reload page successfully (on bad link)",
        "Production Usage process.env should set process.env.NODE_ENV in production",
        "Production Usage should change query correctly",
        "Production Usage should clear all core performance marks",
        "Production Usage should contain generated page count in output",
        "Production Usage should contain the Next.js version in window export",
        "Production Usage should handle AMP correctly in IE",
        "Production Usage should handle failed param decoding",
        "Production Usage should handle query/hash correctly during query updating ## $search",
        "Production Usage should handle query/hash correctly during query updating ##? $search",
        "Production Usage should handle query/hash correctly during query updating ##hello $search",
        "Production Usage should handle query/hash correctly during query updating ##hello? $search",
        "Production Usage should handle query/hash correctly during query updating #? $search",
        "Production Usage should handle query/hash correctly during query updating #a ?hello",
        "Production Usage should handle query/hash correctly during query updating #a ?hello=",
        "Production Usage should handle query/hash correctly during query updating #a ?hello=world",
        "Production Usage should handle query/hash correctly during query updating #hello? $search",
        "Production Usage should handle query/hash correctly during query updating #hello?world $search",
        "Production Usage should have defer on all script tags",
        "Production Usage should navigate through history after query update",
        "Production Usage should navigate to external site and back",
        "Production Usage should navigate to external site and back (with query)",
        "Production Usage should navigate to page with CSS and back",
        "Production Usage should not clear custom performance marks",
        "Production Usage should not emit stats",
        "Production Usage should not expose the compiled page file in development",
        "Production Usage should not put backslashes in pages-manifest.json",
        "Production Usage should not replace non-static pages with HTML files",
        "Production Usage should not show target deprecation warning",
        "Production Usage should only have one DOCTYPE",
        "Production Usage should preserve query when hard navigating from page 404",
        "Production Usage should remove placeholder for next/image correctly",
        "Production Usage should replace static pages with HTML files",
        "Production Usage should respond with 405 for POST to static page",
        "Production Usage should warn when prefetch is true",
        "Production Usage process.browser should eliminate client only code on the server",
        "Production Usage process.browser should eliminate server only code on the client"
      ],
      "failed": ["Production Usage should output traces"],
      "pending": [
        "Production Usage With Security Related Issues should handle invalid URL properly",
        "Production Usage With basic usage should allow etag header support with getServerSideProps",
        "Production Usage should not contain amp, rsc APIs in main chunk",
        "Production Usage should not contain currentScript usage for publicPath"
      ],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/pnpm-support/index.test.ts": {
      "passed": [
        "pnpm support should build with dependencies installed via pnpm",
        "pnpm support should execute client-side JS on each page in output: \"standalone\""
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/postcss-plugin-config-as-string/index.test.ts": {
      "passed": ["PostCSS plugin config as string should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/prerender-prefetch/index.test.ts": {
      "passed": [
        "Prerender prefetch with optimisticClientCache disabled should handle failed data fetch and empty cache correctly",
        "Prerender prefetch with optimisticClientCache disabled should not attempt client cache update on link hover/touch start",
        "Prerender prefetch with optimisticClientCache disabled should not revalidate during prefetching",
        "Prerender prefetch with optimisticClientCache disabled should trigger revalidation after navigation",
        "Prerender prefetch with optimisticClientCache disabled should update cache using prefetch with unstable_skipClientCache",
        "Prerender prefetch with optimisticClientCache disabled should update cache using router.push with unstable_skipClientCache",
        "Prerender prefetch with optimisticClientCache enabled should attempt cache update on link hover/touch start",
        "Prerender prefetch with optimisticClientCache enabled should handle failed data fetch and empty cache correctly",
        "Prerender prefetch with optimisticClientCache enabled should not revalidate during prefetching",
        "Prerender prefetch with optimisticClientCache enabled should trigger revalidation after navigation",
        "Prerender prefetch with optimisticClientCache enabled should update cache using prefetch with unstable_skipClientCache",
        "Prerender prefetch with optimisticClientCache enabled should update cache using router.push with unstable_skipClientCache"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/reading-request-body-in-middleware/index.test.ts": {
      "passed": [
        "reading request body in middleware passes the body greater than 64KiB to the api endpoint",
        "reading request body in middleware passes the body greater than 64KiB to the api endpoint when no body is consumed on middleware",
        "reading request body in middleware passes the body to the api endpoint",
        "reading request body in middleware passes the body to the api endpoint when no body is consumed on middleware",
        "reading request body in middleware rejects with 400 for get requests",
        "reading request body in middleware returns root: true for root calls"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/sharp-basic/sharp-basic.test.ts": {
      "passed": ["sharp support with hasNextSupport should work using cheerio"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/basic/index.test.ts": {
      "passed": [
        "standalone mode - metadata routes should handle correctly not-found.js",
        "standalone mode - metadata routes should handle metadata icons correctly",
        "standalone mode - metadata routes should handle pages rendering correctly",
        "standalone mode - metadata routes should handle private _next unmatched route correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/ipv6/index.test.ts": {
      "passed": [
        "standalone mode: ipv6 hostname should load the page without any errors"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/no-app-routes/index.test.ts": {
      "passed": [
        "standalone mode - no app routes should handle pages rendering correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/optimizecss/index.test.ts": {
      "passed": ["standalone mode and optimizeCss should work"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/required-server-files/required-server-files-app.test.ts": {
      "passed": [
        "required server files app router should send the right cache headers for an app route",
        "required server files app router should send the right cache headers for an app page",
        "required server files app router should not fail caching",
        "required server files app router should not send cache tags in minimal mode for SSR",
        "required server files app router should not send invalid soft tags to cache handler",
        "required server files app router should properly handle fallback for bot request",
        "required server files app router should properly handle prerender for bot request",
        "required server files app router should send cache tags in minimal mode for ISR"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/required-server-files/required-server-files-i18n.test.ts": {
      "passed": [
        "required server files i18n should bubble error correctly for API page",
        "required server files i18n should bubble error correctly for gip page",
        "required server files i18n should bubble error correctly for gsp page",
        "required server files i18n should bubble error correctly for gssp page",
        "required server files i18n should handle bad request correctly with rewrite",
        "required server files i18n should have the correct asPath for fallback page",
        "required server files i18n should have the correct asPath for fallback page locale",
        "required server files i18n should match the index page correctly",
        "required server files i18n should match the root dyanmic page correctly",
        "required server files i18n should normalize catch-all rewrite query values correctly",
        "required server files i18n should normalize optional values correctly for API page",
        "required server files i18n should normalize optional values correctly for SSG page",
        "required server files i18n should normalize optional values correctly for SSG page with encoded slash",
        "required server files i18n should normalize optional values correctly for SSP page",
        "required server files i18n should normalize optional values correctly for nested optional SSG page",
        "required server files i18n should not apply locale redirect in minimal mode",
        "required server files i18n should not apply trailingSlash redirect",
        "required server files i18n should output required-server-files manifest correctly",
        "required server files i18n should render SSR page correctly",
        "required server files i18n should render SSR page correctly with x-matched-path",
        "required server files i18n should render dynamic SSR page correctly",
        "required server files i18n should render dynamic SSR page correctly with x-matched-path",
        "required server files i18n should render fallback optional catch-all route correctly with x-matched-path and routes-matches",
        "required server files i18n should render fallback page correctly",
        "required server files i18n should render fallback page correctly with x-matched-path and routes-matches",
        "required server files i18n should return data correctly with x-matched-path",
        "required server files i18n should return data correctly with x-matched-path for optional catch-all route",
        "required server files i18n should set correct SWR headers with notFound gsp",
        "required server files i18n should set correct SWR headers with notFound gssp"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/required-server-files/required-server-files-ppr.test.ts": {
      "passed": [
        "required server files app router middleware rewrite should work with a dynamic path",
        "required server files app router middleware rewrite should work with a dynamic path with Next-Resume",
        "required server files app router should handle RSC requests",
        "required server files app router should handle prefetch RSC requests",
        "required server files app router should not fail caching",
        "required server files app router should not send cache tags in minimal mode for SSR",
        "required server files app router should not send invalid soft tags to cache handler",
        "required server files app router should properly handle fallback for bot request",
        "required server files app router should properly handle prerender for bot request",
        "required server files app router should properly stream resume",
        "required server files app router should properly stream resume with Next-Resume",
        "required server files app router should properly stream resume without Next-Resume",
        "required server files app router should send cache tags in minimal mode for ISR",
        "required server files app router should still render when postponed is corrupted",
        "required server files app router should still render when postponed is corrupted with Next-Resume",
        "required server files app router should still render when postponed is corrupted without Next-Resume",
        "required server files app router should handle revalidating the fallback page"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/required-server-files/required-server-files.test.ts": {
      "passed": [
        "required server files `cacheHandler` should have correct path",
        "required server files `cacheMaxMemorySize` should be disabled by setting to 0",
        "required server files `compress` should be `false` in nextEnv",
        "required server files should bubble error correctly for API page",
        "required server files should bubble error correctly for gip page",
        "required server files should bubble error correctly for gsp page",
        "required server files should bubble error correctly for gssp page",
        "required server files should cap de-dupe previousCacheItem expires time",
        "required server files should correctly handle a mismatch in buildIds when normalizing next data",
        "required server files should de-dupe HTML/data requests",
        "required server files should favor valid route params over routes-matches",
        "required server files should favor valid route params over routes-matches optional",
        "required server files should handle bad request correctly with rewrite",
        "required server files should have correct asPath on dynamic SSG page correctly",
        "required server files should have correct asPath on dynamic SSG page fallback correctly",
        "required server files should have correct cache-control for notFound no revalidate",
        "required server files should have correct cache-control for notFound with revalidate",
        "required server files should have correct cache-control for redirect no revalidate",
        "required server files should have correct cache-control for redirect with revalidate",
        "required server files should have correct resolvedUrl from dynamic route",
        "required server files should have correct resolvedUrl from rewrite",
        "required server files should have correct resolvedUrl from rewrite with added query",
        "required server files should have the correct cache-control for props with no revalidate",
        "required server files should match the index page correctly",
        "required server files should match the root dynamic page correctly",
        "required server files should normalize catch-all rewrite query values correctly",
        "required server files should normalize index optional values correctly for API page",
        "required server files should normalize optional revalidations correctly for SSG page",
        "required server files should normalize optional values correctly for API page",
        "required server files should normalize optional values correctly for SSG page",
        "required server files should normalize optional values correctly for SSG page with encoded slash",
        "required server files should normalize optional values correctly for SSP page",
        "required server files should not 404 for onlyGenerated on-demand revalidate in minimal mode",
        "required server files should not apply trailingSlash redirect",
        "required server files should output middleware correctly",
        "required server files should output required-server-files manifest correctly",
        "required server files should read .env files and process.env",
        "required server files should render SSR page correctly",
        "required server files should render SSR page correctly with x-matched-path",
        "required server files should render dynamic SSR page correctly",
        "required server files should render dynamic SSR page correctly with x-matched-path",
        "required server files should render fallback optional catch-all route correctly with x-matched-path and routes-matches",
        "required server files should render fallback page correctly",
        "required server files should render fallback page correctly with x-matched-path and routes-matches",
        "required server files should resolve correctly when a redirect is returned",
        "required server files should return data correctly with x-matched-path",
        "required server files should return data correctly with x-matched-path for optional catch-all route",
        "required server files should set correct SWR headers with notFound gsp",
        "required server files should set correct SWR headers with notFound gssp",
        "required server files should show invariant when an automatic static page is requested",
        "required server files should warn when \"next\" is imported directly",
        "required server files without minimalMode, with wasm should run middleware correctly"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/response-cache/index.test.ts": {
      "passed": [
        "minimal-mode-response-cache app router revalidate should work with previous response cache",
        "minimal-mode-response-cache app router revalidate should work with previous response cache dynamic",
        "minimal-mode-response-cache should have correct \"Started server on\" log",
        "minimal-mode-response-cache should have correct responses"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/standalone-mode/type-module/index.test.ts": {
      "passed": [],
      "failed": ["type-module should work"],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/supports-module-resolution-nodenext/supports-moduleresolution-nodenext.test.ts": {
      "passed": [
        "Does not override tsconfig moduleResolution field during build boots and renders without throwing an error"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/terser-class-static-blocks/terser-class-static-blocks.test.ts": {
      "passed": [
        "terser-class-static-blocks should have stripped away all comments",
        "terser-class-static-blocks should work using cheerio"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/transpile-packages/transpile-packages.test.ts": {
      "passed": [
        "app fetch build cache should bundle @aws-sdk/client-s3 as a transpiled package",
        "app fetch build cache should render page with dependencies"
      ],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/typescript-basic/index.test.ts": {
      "passed": [
        "TypeScript basic have built and started correctly",
        "TypeScript basic should not have eslint setup started"
      ],
      "failed": [],
      "pending": ["TypeScript basic should work with babel"],
      "flakey": [],
      "runtimeError": false
    },
    "test/production/typescript-basic/typechecking.test.ts": {
      "passed": ["typechecking should typecheck"],
      "failed": [],
      "pending": [],
      "flakey": [],
      "runtimeError": false
    }
  },
  "rules": {
    "include": [
      "test/integration/**/*.test.{t,j}s{,x}",
      "test/e2e/**/*.test.{t,j}s{,x}",
      "test/production/**/*.test.{t,j}s{,x}"
    ],
    "exclude": []
  }
}
