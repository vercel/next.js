[workspace]
resolver = "2"

members = [
  "scripts/send-trace-to-jaeger",
  "crates/napi",
  "crates/wasm",
  "crates/next-api",
  "crates/next-build-test",
  "crates/next-build",
  "crates/next-core",
  "crates/next-custom-transforms",
  "turbopack/crates/*",
  "turbopack/xtask",
]

exclude = [
  "crates/next-error-code-swc-plugin",
]

[workspace.lints.clippy]
too_many_arguments = "allow"

# This crate is particularly sensitive to compiler optimizations
[profile.dev.package.turbo-tasks-memory]
opt-level = 1

# Set the options for dependencies (not crates in the workspace), this mostly impacts cold builds
[profile.dev.package."*"]
# This is a workaround for wasm timeout issue
debug-assertions = false
opt-level = 1

# Set the settings for build scripts and proc-macros.
[profile.dev.build-override]
opt-level = 3

[workspace.dependencies]
# Workspace crates
next-api = { path = "crates/next-api" }
next-build = { path = "crates/next-build" }
next-core = { path = "crates/next-core" }
next-custom-transforms = { path = "crates/next-custom-transforms" }

# Turbopack
auto-hash-map = { path = "turbopack/crates/turbo-tasks-auto-hash-map" }
swc-ast-explorer = { path = "turbopack/crates/turbopack-swc-ast-explorer" }
turbo-prehash = { path = "turbopack/crates/turbo-prehash" }
turbo-rcstr = { path = "turbopack/crates/turbo-rcstr" }
turbo-persistence = { path = "turbopack/crates/turbo-persistence" }
turbo-tasks-malloc = { path = "turbopack/crates/turbo-tasks-malloc", default-features = false }
turbo-tasks = { path = "turbopack/crates/turbo-tasks" }
turbo-tasks-backend = { path = "turbopack/crates/turbo-tasks-backend" }
turbo-tasks-build = { path = "turbopack/crates/turbo-tasks-build" }
turbo-tasks-bytes = { path = "turbopack/crates/turbo-tasks-bytes" }
turbo-tasks-env = { path = "turbopack/crates/turbo-tasks-env" }
turbo-tasks-fetch = { path = "turbopack/crates/turbo-tasks-fetch" }
turbo-tasks-fs = { path = "turbopack/crates/turbo-tasks-fs" }
turbo-tasks-hash = { path = "turbopack/crates/turbo-tasks-hash" }
turbo-tasks-macros = { path = "turbopack/crates/turbo-tasks-macros" }
turbo-tasks-macros-shared = { path = "turbopack/crates/turbo-tasks-macros-shared" }
turbo-tasks-macros-tests = { path = "turbopack/crates/turbo-tasks-macros-tests" }
turbo-tasks-memory = { path = "turbopack/crates/turbo-tasks-memory" }
turbo-tasks-testing = { path = "turbopack/crates/turbo-tasks-testing" }
turbopack = { path = "turbopack/crates/turbopack" }
turbopack-bench = { path = "turbopack/crates/turbopack-bench" }
turbopack-nodejs = { path = "turbopack/crates/turbopack-nodejs" }
turbopack-cli = { path = "turbopack/crates/turbopack-cli" }
turbopack-cli-utils = { path = "turbopack/crates/turbopack-cli-utils" }
turbopack-core = { path = "turbopack/crates/turbopack-core" }
turbopack-create-test-app = { path = "turbopack/crates/turbopack-create-test-app" }
turbopack-css = { path = "turbopack/crates/turbopack-css" }
turbopack-browser = { path = "turbopack/crates/turbopack-browser" }
turbopack-dev-server = { path = "turbopack/crates/turbopack-dev-server" }
turbopack-ecmascript = { path = "turbopack/crates/turbopack-ecmascript" }
turbopack-ecmascript-plugins = { path = "turbopack/crates/turbopack-ecmascript-plugins", default-features = false }
turbopack-ecmascript-runtime = { path = "turbopack/crates/turbopack-ecmascript-runtime" }
turbopack-ecmascript-hmr-protocol = { path = "turbopack/crates/turbopack-ecmascript-hmr-protocol" }
turbopack-env = { path = "turbopack/crates/turbopack-env" }
turbopack-image = { path = "turbopack/crates/turbopack-image" }
turbopack-json = { path = "turbopack/crates/turbopack-json" }
turbopack-mdx = { path = "turbopack/crates/turbopack-mdx" }
turbopack-node = { path = "turbopack/crates/turbopack-node" }
turbopack-resolve = { path = "turbopack/crates/turbopack-resolve" }
turbopack-static = { path = "turbopack/crates/turbopack-static" }
turbopack-swc-utils = { path = "turbopack/crates/turbopack-swc-utils" }
turbopack-test-utils = { path = "turbopack/crates/turbopack-test-utils" }
turbopack-tests = { path = "turbopack/crates/turbopack-tests" }
turbopack-trace-server = { path = "turbopack/crates/turbopack-trace-server" }
turbopack-trace-utils = { path = "turbopack/crates/turbopack-trace-utils" }
turbopack-wasm = { path = "turbopack/crates/turbopack-wasm" }

# SWC crates
swc_core = { version = "14.0.0", features = [
  "ecma_loader_lru",
  "ecma_loader_parking_lot",
] }
testing = { version = "7.0.0" }

# Keep consistent with preset_env_base through swc_core
browserslist-rs = { version = "0.17.0" }
miette = { version = "5.10.0", features = ["fancy"] }
mdxjs = "0.3"
modularize_imports = { version = "0.76.0" }
styled_components = { version = "0.104.0" }
styled_jsx = { version = "0.80.0" }
swc_emotion = { version = "0.80.0" }
swc_relay = { version = "0.50.0" }

# General Deps
chromiumoxide = { version = "0.5.4", features = [
  "tokio-runtime",
], default-features = false }
# For matching on errors from chromiumoxide. Keep in
# sync with chromiumoxide's tungstenite requirement.
tungstenite = "0.20.1"

# flate2_zlib requires zlib, use flate2_rust
allsorts = { version = "0.14.0", default-features = false, features = [
  "flate2_rust",
] }
anyhow = "1.0.69"
assert_cmd = "2.0.8"
async-compression = { version = "0.3.13", default-features = false, features = [
  "gzip",
  "tokio",
] }
async-trait = "0.1.64"
atty = "0.2.14"
bytes = "1.1.0"
chrono = "0.4.23"
clap = { version = "4.5.2", features = ["derive"] }
concurrent-queue = "2.5.0"
console = "0.15.5"
console-subscriber = "0.4.1"
const_format = "0.2.30"
criterion = "0.5.1"
crossbeam-channel = "0.5.8"
dashmap = "6.1.0"
dhat = { version = "0.3.2" }
dialoguer = "0.10.3"
dunce = "1.0.3"
either = "1.9.0"
erased-serde = "0.4.5"
futures = "0.3.26"
futures-retry = "0.6.0"
hashbrown = "0.14.5"
httpmock = { version = "0.6.8", default-features = false }
image = { version = "0.25.0", default-features = false }
indexmap = "2.7.1"
indicatif = "0.17.3"
indoc = "2.0.0"
itertools = "0.10.5"
lazy_static = "1.4.0"
log = "0.4.17"
lightningcss = { version = "1.0.0-alpha.63", features = [
  "serde",
  "visitor",
  "into_owned",
] }
lightningcss-napi = { version = "0.4.3", default-features = false, features = [
  "visitor"
]}
markdown = "1.0.0-alpha.18"
mime = "0.3.16"
nohash-hasher = "0.2.0"
notify = "6.1.1"
once_cell = "1.17.1"
owo-colors = "3.5.0"
parcel_selectors = "0.28.1"
parking_lot = "0.12.1"
pathdiff = "0.2.1"
petgraph = "0.6.3"
pin-project-lite = "0.2.9"
postcard = "1.0.4"
predicates = "2.1.5"
pretty_assertions = "1.3.0"
proc-macro2 = "1.0.79"
qstring = "0.7.2"
quote = "1.0.23"
rand = "0.8.5"
rayon = "1.10.0"
regex = "1.10.6"
reqwest = { version = "=0.11.17", default-features = false }
rstest = "0.16.0"
rustc-hash = "2.1.0"
semver = "1.0.16"
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.138"
serde_bytes = "0.11.15"
serde_path_to_error = "0.1.16"
serde_qs = "0.13.0"
serde_with = "3.12.0"
shadow-rs = { version = "0.37.0", default-features = false, features = [
  "tzdb",
] }
smallvec = { version = "1.13.1", features = [
  "serde",
  "const_generics",
  "union",
  "const_new",
] }
sourcemap = "9.0.0"
strsim = "0.11.1"
shrink-to-fit = "0.2.10"
swc-rustc-hash = { package = "rustc-hash", version = "1.1.0" } # used with swc
syn = "1.0.107"
tempfile = "3.3.0"
thread_local = "1.1.8"
thiserror = "1.0.48"
tiny-gradient = "0.1.0"
tokio = "1.25.0"
tokio-util = { version = "0.7.11", features = ["io", "rt"] }
tracing = "0.1.37"
tracing-subscriber = "0.3.16"
triomphe = { git = "https://github.com/sokra/triomphe", branch = "sokra/unstable" }
unicode-segmentation = "1.10.1"
unsize = "1.1.0"
url = "2.2.2"
urlencoding = "2.1.2"
webbrowser = "0.8.7"

[patch.crates-io]
# Remove this once https://github.com/wasmerio/wasmer/pull/5333 is merged and released
wasmer = { git = "https://github.com/kdy1/wasmer", branch = "build-deps" }
wasmer-cache = { git = "https://github.com/kdy1/wasmer", branch = "build-deps" }
wasmer-compiler-cranelift = { git = "https://github.com/kdy1/wasmer", branch = "build-deps" }
wasmer-wasix = { git = "https://github.com/kdy1/wasmer", branch = "build-deps" }


ast_node                         = { path = '/Users/kdy1/projects/s/chores/crates/ast_node' }
better_scoped_tls                = { path = '/Users/kdy1/projects/s/chores/crates/better_scoped_tls' }
binding_macros                   = { path = '/Users/kdy1/projects/s/chores/crates/binding_macros' }
dbg-swc                          = { path = '/Users/kdy1/projects/s/chores/crates/dbg-swc' }
from_variant                     = { path = '/Users/kdy1/projects/s/chores/crates/from_variant' }
generate-code                    = { path = '/Users/kdy1/projects/s/chores/tools/generate-code' }
hstr                             = { path = '/Users/kdy1/projects/s/chores/crates/hstr' }
jsdoc                            = { path = '/Users/kdy1/projects/s/chores/crates/jsdoc' }
preset_env_base                  = { path = '/Users/kdy1/projects/s/chores/crates/preset_env_base' }
string_enum                      = { path = '/Users/kdy1/projects/s/chores/crates/string_enum' }
swc                              = { path = '/Users/kdy1/projects/s/chores/crates/swc' }
swc-releaser                     = { path = '/Users/kdy1/projects/s/chores/tools/swc-releaser' }
swc_allocator                    = { path = '/Users/kdy1/projects/s/chores/crates/swc_allocator' }
swc_atoms                        = { path = '/Users/kdy1/projects/s/chores/crates/swc_atoms' }
swc_bundler                      = { path = '/Users/kdy1/projects/s/chores/crates/swc_bundler' }
swc_cached                       = { path = '/Users/kdy1/projects/s/chores/crates/swc_cached' }
swc_cli_impl                     = { path = '/Users/kdy1/projects/s/chores/crates/swc_cli_impl' }
swc_common                       = { path = '/Users/kdy1/projects/s/chores/crates/swc_common' }
swc_compiler_base                = { path = '/Users/kdy1/projects/s/chores/crates/swc_compiler_base' }
swc_config                       = { path = '/Users/kdy1/projects/s/chores/crates/swc_config' }
swc_config_macro                 = { path = '/Users/kdy1/projects/s/chores/crates/swc_config_macro' }
swc_core                         = { path = '/Users/kdy1/projects/s/chores/crates/swc_core' }
swc_css                          = { path = '/Users/kdy1/projects/s/chores/crates/swc_css' }
swc_css_ast                      = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_ast' }
swc_css_codegen                  = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_codegen' }
swc_css_codegen_macros           = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_codegen_macros' }
swc_css_compat                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_compat' }
swc_css_lints                    = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_lints' }
swc_css_minifier                 = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_minifier' }
swc_css_modules                  = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_modules' }
swc_css_parser                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_parser' }
swc_css_prefixer                 = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_prefixer' }
swc_css_utils                    = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_utils' }
swc_css_visit                    = { path = '/Users/kdy1/projects/s/chores/crates/swc_css_visit' }
swc_ecma_ast                     = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_ast' }
swc_ecma_codegen                 = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_codegen' }
swc_ecma_codegen_macros          = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_codegen_macros' }
swc_ecma_compat_bugfixes         = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_bugfixes' }
swc_ecma_compat_common           = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_common' }
swc_ecma_compat_es2015           = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_es2015' }
swc_ecma_compat_es2016           = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_es2016' }
swc_ecma_compat_es2017           = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_es2017' }
swc_ecma_compat_es2018           = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_es2018' }
swc_ecma_compat_es2019           = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_es2019' }
swc_ecma_compat_es2020           = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_es2020' }
swc_ecma_compat_es2021           = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_es2021' }
swc_ecma_compat_es2022           = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_es2022' }
swc_ecma_compat_es3              = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_compat_es3' }
swc_ecma_ext_transforms          = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_ext_transforms' }
swc_ecma_lints                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_lints' }
swc_ecma_loader                  = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_loader' }
swc_ecma_minifier                = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_minifier' }
swc_ecma_parser                  = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_parser' }
swc_ecma_preset_env              = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_preset_env' }
swc_ecma_quote                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_quote' }
swc_ecma_quote_macros            = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_quote_macros' }
swc_ecma_testing                 = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_testing' }
swc_ecma_transforms              = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms' }
swc_ecma_transforms_base         = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_base' }
swc_ecma_transforms_classes      = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_classes' }
swc_ecma_transforms_compat       = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_compat' }
swc_ecma_transforms_macros       = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_macros' }
swc_ecma_transforms_module       = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_module' }
swc_ecma_transforms_optimization = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_optimization' }
swc_ecma_transforms_proposal     = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_proposal' }
swc_ecma_transforms_react        = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_react' }
swc_ecma_transforms_testing      = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_testing' }
swc_ecma_transforms_typescript   = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_transforms_typescript' }
swc_ecma_usage_analyzer          = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_usage_analyzer' }
swc_ecma_utils                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_utils' }
swc_ecma_visit                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecma_visit' }
swc_ecmascript                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_ecmascript' }
swc_eq_ignore_macros             = { path = '/Users/kdy1/projects/s/chores/crates/swc_eq_ignore_macros' }
swc_error_reporters              = { path = '/Users/kdy1/projects/s/chores/crates/swc_error_reporters' }
swc_estree_ast                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_estree_ast' }
swc_estree_compat                = { path = '/Users/kdy1/projects/s/chores/crates/swc_estree_compat' }
swc_fast_graph                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_fast_graph' }
swc_fast_ts_strip                = { path = '/Users/kdy1/projects/s/chores/crates/swc_fast_ts_strip' }
swc_graph_analyzer               = { path = '/Users/kdy1/projects/s/chores/crates/swc_graph_analyzer' }
swc_html                         = { path = '/Users/kdy1/projects/s/chores/crates/swc_html' }
swc_html_ast                     = { path = '/Users/kdy1/projects/s/chores/crates/swc_html_ast' }
swc_html_codegen                 = { path = '/Users/kdy1/projects/s/chores/crates/swc_html_codegen' }
swc_html_codegen_macros          = { path = '/Users/kdy1/projects/s/chores/crates/swc_html_codegen_macros' }
swc_html_minifier                = { path = '/Users/kdy1/projects/s/chores/crates/swc_html_minifier' }
swc_html_parser                  = { path = '/Users/kdy1/projects/s/chores/crates/swc_html_parser' }
swc_html_utils                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_html_utils' }
swc_html_visit                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_html_visit' }
swc_interop_babel                = { path = '/Users/kdy1/projects/s/chores/crates/swc_interop_babel' }
swc_interop_nodejs               = { path = '/Users/kdy1/projects/s/chores/crates/swc_interop_nodejs' }
swc_macros_common                = { path = '/Users/kdy1/projects/s/chores/crates/swc_macros_common' }
swc_malloc                       = { path = '/Users/kdy1/projects/s/chores/crates/swc_malloc' }
swc_node_bundler                 = { path = '/Users/kdy1/projects/s/chores/crates/swc_node_bundler' }
swc_node_comments                = { path = '/Users/kdy1/projects/s/chores/crates/swc_node_comments' }
swc_nodejs_common                = { path = '/Users/kdy1/projects/s/chores/crates/swc_nodejs_common' }
swc_parallel                     = { path = '/Users/kdy1/projects/s/chores/crates/swc_parallel' }
swc_plugin                       = { path = '/Users/kdy1/projects/s/chores/crates/swc_plugin' }
swc_plugin_macro                 = { path = '/Users/kdy1/projects/s/chores/crates/swc_plugin_macro' }
swc_plugin_proxy                 = { path = '/Users/kdy1/projects/s/chores/crates/swc_plugin_proxy' }
swc_plugin_runner                = { path = '/Users/kdy1/projects/s/chores/crates/swc_plugin_runner' }
swc_plugin_testing               = { path = '/Users/kdy1/projects/s/chores/crates/swc_plugin_testing' }
swc_timer                        = { path = '/Users/kdy1/projects/s/chores/crates/swc_timer' }
swc_trace_macro                  = { path = '/Users/kdy1/projects/s/chores/crates/swc_trace_macro' }
swc_transform_common             = { path = '/Users/kdy1/projects/s/chores/crates/swc_transform_common' }
swc_typescript                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_typescript' }
swc_visit                        = { path = '/Users/kdy1/projects/s/chores/crates/swc_visit' }
swc_x_optimizer                  = { path = '/Users/kdy1/projects/s/chores/crates/swc_x_optimizer' }
swc_xml                          = { path = '/Users/kdy1/projects/s/chores/crates/swc_xml' }
swc_xml_ast                      = { path = '/Users/kdy1/projects/s/chores/crates/swc_xml_ast' }
swc_xml_codegen                  = { path = '/Users/kdy1/projects/s/chores/crates/swc_xml_codegen' }
swc_xml_codegen_macros           = { path = '/Users/kdy1/projects/s/chores/crates/swc_xml_codegen_macros' }
swc_xml_parser                   = { path = '/Users/kdy1/projects/s/chores/crates/swc_xml_parser' }
swc_xml_visit                    = { path = '/Users/kdy1/projects/s/chores/crates/swc_xml_visit' }
testing                          = { path = '/Users/kdy1/projects/s/chores/crates/testing' }
testing_macros                   = { path = '/Users/kdy1/projects/s/chores/crates/testing_macros' }


modularize_imports = { path = '/Users/kdy1/projects/s/plugins/packages/transform-imports/transform' }
react_remove_properties = { path = '/Users/kdy1/projects/s/plugins/packages/react-remove-properties/transform' }
remove_console = { path = '/Users/kdy1/projects/s/plugins/packages/remove-console/transform' }
styled_components = { path = '/Users/kdy1/projects/s/plugins/packages/styled-components/transform' }
styled_jsx = { path = '/Users/kdy1/projects/s/plugins/packages/styled-jsx/transform' }
swc_confidential = { path = '/Users/kdy1/projects/s/plugins/packages/swc-confidential/transform' }
swc_emotion = { path = '/Users/kdy1/projects/s/plugins/packages/emotion/transform' }
swc_experimental_babel = { path = '/Users/kdy1/projects/s/plugins/crates/swc_experimental_babel' }
swc_formatjs_transform = { path = '/Users/kdy1/projects/s/plugins/packages/formatjs/transform' }
swc_icu_messageformat_parser = { path = '/Users/kdy1/projects/s/plugins/crates/swc_icu_messageformat_parser' }
swc_magic = { path = '/Users/kdy1/projects/s/plugins/packages/swc-magic/transform' }
swc_prefresh = { path = '/Users/kdy1/projects/s/plugins/packages/prefresh/transform' }
swc_relay = { path = '/Users/kdy1/projects/s/plugins/packages/relay/transform' }
swc_sdk = { path = '/Users/kdy1/projects/s/plugins/packages/swc-sdk/transform' }

mdxjs = { path = "/Users/kdy1/projects/mdxjs-rs" }