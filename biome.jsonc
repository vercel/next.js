{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "vcs": {
    "enabled": false,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "files": {
    "include": [
      "**/*.js",
      "**/*.ts",
      "**/*.jsx",
      "**/*.tsx",
      "**/*.mjs",
      "**/*.cjs",
      "**/*.d.mts",
      "**/*.json",
      "**/*.jsonc",
      "**/*.css",
      "**/*.scss"
    ],
    "ignoreUnknown": false,
    "ignore": [
      // Build artifacts
      ".next/",
      ".turbo/",
      "_next/",
      "__tmp__/",
      "dist/",
      "target/",
      "compiled/",

      "lerna.json",
      "test-timings.json",
      "pnpm-lock.yaml",

      "packages/next/src/bundles/webpack/packages/*.runtime.js",
      "packages/next/src/bundles/webpack/packages/lazy-compilation-*.js",
      "packages/next/wasm/@next",
      "packages/next/errors.json",

      "**/dist",
      ".github/actions/next-stats-action/.work",
      ".changeset/*.md",

      "crates/**/tests/**/output*",
      "crates/core/tests/loader/issue-32553/input.js",
      // prettier destroys the directives here
      "crates/next-custom-transforms/tests/errors/react-server-components/client-graph/use-client/input.js",
      "crates/next-custom-transforms/tests/errors/react-server-components/server-graph/fake-client-entry/input.js",
      "crates/next-custom-transforms/tests/errors/server-actions/server-graph/8/input.js",
      "crates/next-custom-transforms/tests/errors/server-actions/server-graph/9/input.js",
      "crates/next-custom-transforms/tests/errors/server-actions/server-graph/18/input.js",
      "crates/next-custom-transforms/tests/fixture/optimize-barrel/normal/4/input.js",
      "crates/next-custom-transforms/tests/fixture/react-server-components/client-graph/client-entry/input.js",
      "crates/next-custom-transforms/tests/fixture/react-server-components/server-graph/client-entry/input.js",
      "packages/next-swc/native/**/*",
      "packages/next-swc/docs/assets/**/*",

      "packages/next-codemod/transforms/__testfixtures__/**",
      "packages/next-codemod/transforms/__tests__/**",
      "packages/next-codemod/**/*.js",
      "packages/next-codemod/**/*.d.ts",

      "packages/next-env/**/*.d.ts",

      "test/**/out/**",
      "test/development/basic/hmr/components/parse-error.js",

      "bench/nested-deps/pages/**/*",
      "bench/nested-deps/components/**/*",

      "**/convex/_generated/**",
      "**/.tina/__generated__/**",
      "test/lib/amp-validator-wasm.js",
      "test/production/pages-dir/production/fixture/amp-validator-wasm.js",
      "test/e2e/app-dir/server-source-maps/fixtures/default/app/bad-sourcemap/page.js",
      "test/e2e/app-dir/server-source-maps/fixtures/default/internal-pkg/ignored.js",
      "test/e2e/app-dir/server-source-maps/fixtures/default/internal-pkg/sourcemapped.js",
      "test/e2e/app-dir/server-source-maps/fixtures/default/external-pkg/sourcemapped.js",
      "test/e2e/async-modules/amp-validator-wasm.js",

      // turbopack crates, disable for some tests and precompiled dependencies.
      "turbopack/crates/*/js/src/compiled",
      "turbopack/crates/turbopack/bench.json",
      "turbopack/crates/turbopack/tests",
      "turbopack/crates/turbopack-ecmascript/tests/analyzer/graph",
      "turbopack/crates/turbopack-ecmascript/tests/tree-shaker",
      "turbopack/crates/next-transform-strip-page-exports/tests",
      "turbopack/crates/next-transform-dynamic/tests",
      "turbopack/crates/turbopack-tests/tests/execution/turbopack/basic/error/input/broken.js",
      "turbopack/crates/turbopack-tests/tests/snapshot/import-meta/cjs/input/mod.cjs",
      "turbopack/crates/turbopack-tests/tests/**/output*",
      "turbopack/crates/turbopack-tests/tests/**/static",
      "turbopack/crates/turbopack/tests/node-file-trace/integration",

      // invalid css
      "test/integration/css-features/fixtures/inline-comments/pages/global.css",
      // does not parse with the top-level return
      "turbopack/crates/turbopack-tests/tests/snapshot/comptime/early-return/input/module.js",
      // intentionally does not parse as esm
      "test/integration/eslint/mjs-cjs-linting/pages/index.cjs",
      // Uses nonstandard/future syntax
      "examples/with-custom-babel-config",
      // Flow-type files as JS but contain annotations which do not parse
      "test/integration/babel/pages/index.js",
      "examples/with-flow/",
      // This file is intentionally very large
      "test/integration/api-support/big.json",
      // empty files
      "test/unit/isolated/_resolvedata/**/*.json",
      "test/integration/jsconfig-empty/jsconfig.json",
      // generated files
      "test/*-tests-manifest.json",

      // biome migration
      "packages/create-next-app/"
    ]
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "formatWithErrors": true
  },
  "css": {
    "parser": {
      "cssModules": true
    },
    "formatter": {
      "quoteStyle": "single"
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "single",
      "semicolons": "asNeeded",
      "trailingCommas": "es5"
    }
  },
  "json": {
    "parser": {
      // Many files that are "json" in the codebase allow comments
      "allowComments": true
    }
  },
  "overrides": [
    {
      "include": ["examples/**"],
      "javascript": {
        "formatter": {
          "semicolons": "always",
          "quoteStyle": "double",
          "trailingCommas": "all"
        }
      },
      "css": {
        "formatter": {
          "quoteStyle": "double"
        }
      }
    }
  ]
}
